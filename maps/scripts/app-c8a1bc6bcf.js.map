{"version":3,"sources":["scripts/app.js"],"names":["angular","module","ViewSolutionRunController","$routeParams","$filter","utilService","routeContest","routeProblem","routeSolution","vm","this","init","contest","problem","solution","runNumber","run_number","solutionsToShow","solutions","filter","nickname","urlFilter","$inject","controller","ViewSolutionRunsController","runs","copy","run","getRunLink","modalConfirm","$uibModal","$document","ModalConfirmLink","scope","el","attr","ctrl","callback","bind","modalInstance","open","animation","templateUrl","ModalConfirmController","controllerAs","bindToController","result","then","$scope","$uibModalInstance","ok","close","cancel","dismiss","directive","restrict","title","body","link","ViewAllUsersController","userService","routeMe","me","usersList","getUsers","permissions","delete_user","users","ViewUserController","routeUser","user","deleteUser","username","CreateUserController","submit","createUser","form","email","password","console","log","ViewProblemSolutionRunController","ViewProblemSolutionRunsController","reduce","prev","concat","ViewTestCaseController","routeTestCase","test_case","contest_nickname","problem_nickname","test_case_id","current","v","length","EditTestCaseController","$location","testCaseService","fillInitialValues","input","testCase","output","editTestCase","_id","path","CreateTestCaseController","PromiseProcess","test_cases","addTestCase","push","removeTestCase","index","splice","promiseProcess","forEach","createTestCase","exec","$apply","ViewSolutionController","solution_nickname","language","getLanguage","CreateSolutionController","languages","solutionService","createSolution","name","source_code","EditSolutionController","editSolution","EditProblemController","problemService","description","lastVersion","time_limit","editProblem","ViewProblemController","solutionRunsService","getValidatedTestCases","undefined","validatedTestCases","deleteSolution","problems","runSolution","solution_index","validationResult","validation","status","runSolutions","cur","results","getSolution","deleteTestCase","CreateProblemController","fillDefaultValues","createProblem","ViewAllLogsController","logService","logsList","getLogs","logs","ViewAllContestsController","contestService","contestList","getContests","delete_contest","contests","CreateContributorController","contributorService","contributors","some","contributor","createContributor","user_id","ViewContestController","canI","action","obj","author","deleteContributor","deleteProblem","deleteContest","CreateContestController","createContest","runsList","RunsListController","solutionRuns","i","newSolutionRun","timestamp","j","sort","a","b","getLink","runResultTable","RunResultTableController","getTestCase","solutionRun","map","testCases","indexOf","solutionTestCaseRunMap","selectRun","solution_id","selectedRun","getSolutionTestCaseRun","unselectRun","solutionTestCaseRun","verdict","getVerdict","navbar","NavbarController","$route","authService","getMainLinks","links","label","urlPath","active","isLogged","mainLinks","logout","alertInactive","AlertInactiveController","msg","genericList","$compile","GenericListController","list","transclude","items","noItemsMessage","headers","parent","breadcrumbs","BreadcrumbsController","url","order","edit","extra","activeItem","pop","new","verdicts","service","languageValue","l","value","verdictValue","getValueFromObj","dotIndex","prefix","substr","suffix","$http","apiUrl","show_deleted","get","data","getUser","post","urlService","frontUrls","getUrl","args","urls","arg","replace","put","hasCriticalAfter","versions","version","critical","moment","isAfter","reverse","getProblem","getContest","$q","$window","login","response","token","localStorage","setItem","setHeaderToken","resolve","removeItem","unsetHeaderToken","defaults","common","getItem","MainController","LoginController","queryMessage","search","message","errorMessage","reload","err","authInterceptor","$injector","interceptor","responseError","error","reject","setToken","routeConfig","$routeProvider","$locationProvider","$httpProvider","interceptors","when","main","getMe","view","otherwise","redirectTo","html5Mode","AppController","$rootScope","$on","event","previous","rejection","params","paramKeys","config","customNgTransclude","$element","$attrs","$transclude","minErr","startingTag","iScopeType","clone","append","iChildScope","$new","on","$destroy","arguments","myDate","currentDate","inputDate","isBefore","diffInMinutes","diff","diffInHours","diffInDays","diffInMonths","Math","floor","short","constant","removeNgTransclude","$provide","decorator","$delegate","shift","$templateCache"],"mappings":"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","file":"scripts/app-c8a1bc6bcf.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('front', [\n    \t'ngAnimate',\n    \t'ngCookies',\n    \t'ngTouch',\n    \t'ngSanitize',\n    \t'ngMessages',\n    \t'ngAria',\n    \t'ngRoute',\n    \t'ui.bootstrap',\n    \t'toastr'\n    ]);\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunController', ViewSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunController($routeParams, $filter, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.solution  = routeSolution;\r\n        vm.runNumber = $routeParams.run_number;\r\n\r\n        vm.solutionsToShow = vm.problem.solutions.filter(function(solution) {\r\n            return solution.nickname === vm.solution.nickname;\r\n        });\r\n\r\n        vm.urlFilter = $filter('url');\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunsController', ViewSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunsController($routeParams, $filter, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n        vm.solution = routeSolution;\r\n\r\n        vm.runs = angular.copy(vm.solution.run);\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.solution.run.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('modalConfirm', modalConfirm);\r\n\r\n/** @ngInject */\r\nfunction modalConfirm($uibModal, $document) {\r\n    var directive = {\r\n        restrict        : 'A',\r\n        scope           : {\r\n            callback: '&modalConfirm',\r\n            title:    '<modalConfirmTitle',\r\n            body:     '<modalConfirmBody'\r\n        },\r\n        link            : ModalConfirmLink\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmLink(scope, el, attr, ctrl) {\r\n        var callback = scope.callback();\r\n\r\n        el.bind('click', function() {\r\n            var modalInstance = $uibModal.open({\r\n                animation:        false,\r\n                templateUrl:      'app/components/modal/modal-confirm/modal-confirm.html',\r\n                controller:       ModalConfirmController,\r\n                controllerAs:     '$ctrl',\r\n                scope:            scope,\r\n                bindToController: true\r\n            });\r\n\r\n            modalInstance.result.then(function(result) {\r\n                callback();\r\n            }, function() {\r\n            });\r\n        });\r\n    }\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmController($scope, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.ok = function() {\r\n            $uibModalInstance.close();\r\n        };\r\n\r\n        vm.cancel = function() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllUsersController', ViewAllUsersController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllUsersController(userService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.usersList = [];\r\n\r\n        userService.getUsers(vm.me.permissions && vm.me.permissions.delete_user)\r\n        .then(function(users) {\r\n            vm.usersList = users;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewUserController', ViewUserController);\r\n\r\n/** @ngInject */\r\nfunction ViewUserController(userService, routeMe, routeUser) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.user = routeUser;\r\n    };\r\n\r\n    vm.deleteUser = function() {\r\n        return function() {\r\n            userService.deleteUser(vm.user.username)\r\n            .then(function(user) {\r\n                vm.user = user;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateUserController', CreateUserController);\r\n\r\n/** @ngInject */\r\nfunction CreateUserController(userService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    };\r\n\r\n    vm.submit = function() {\r\n        userService.createUser({\r\n            username: vm.form.username,\r\n            email:    vm.form.email,\r\n            password: vm.form.password\r\n        }).then(function(user) {\r\n            console.log(user);\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunController', ViewProblemSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.runNumber = $routeParams.run_number;\r\n    };\r\n\r\n    vm.urlFilter = $filter('url');\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunsController', ViewProblemSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunsController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n\r\n        vm.runs = angular.copy(vm.problem.solutions.reduce(function(prev, solution) {\r\n            return prev.concat(solution.run);\r\n        }, []));\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.solutionRun.view', vm.contest.nickname, vm.problem.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewTestCaseController', ViewTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction ViewTestCaseController($routeParams, routeContest, routeProblem, routeTestCase) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.test_case = routeTestCase;\r\n\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.test_case_id = $routeParams.test_case_id;\r\n\r\n        vm.test_case.current = vm.test_case.v[vm.test_case.v.length-1];\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditTestCaseController', EditTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction EditTestCaseController($location, $filter, routeContest, routeProblem, routeTestCase, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n        vm.testCase = routeTestCase;\r\n        vm.testCase.current = vm.testCase.v[ vm.testCase.v.length-1 ];\r\n\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            input:  vm.testCase.current.input,\r\n            output: vm.testCase.current.output\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        testCaseService.editTestCase(vm.contest.nickname, vm.problem.nickname, vm.testCase._id, {\r\n            input:  form.input,\r\n            output: form.output\r\n        }).then(function(test_case) {\r\n            $location.path($filter('url')('contest.problem.testCase.view', vm.contest.nickname, vm.problem.nickname, test_case._id));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateTestCaseController', CreateTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction CreateTestCaseController($scope, $location, $filter, PromiseProcess, routeContest, routeProblem, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n\r\n        vm.form = {\r\n            test_cases: [{\r\n                input:  '',\r\n                output: ''\r\n            }]\r\n        };\r\n    };\r\n\r\n    vm.addTestCase = function() {\r\n        vm.form.test_cases.push({\r\n            input:  '',\r\n            output: ''\r\n        });\r\n    };\r\n\r\n    vm.removeTestCase = function(index) {\r\n        vm.form.test_cases.splice(index, 1);\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        var promiseProcess = PromiseProcess();\r\n\r\n        form.test_cases.forEach(function(test_case) {\r\n            promiseProcess.push(function() {\r\n                return testCaseService.createTestCase(vm.contest.nickname, vm.problem.nickname, {\r\n                    input:  test_case.input,\r\n                    output: test_case.output\r\n                }).then(function(test_case) {\r\n                    return test_case._id;\r\n                });\r\n            });\r\n        });\r\n\r\n        promiseProcess.exec([])\r\n        .then(function(test_case_id) {\r\n            $scope.$apply(function() {\r\n                if(form.test_cases.length == 1) {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.testCase.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname, \r\n                        test_case_id\r\n                    ));\r\n                } else {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname\r\n                    ));\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionController', ViewSolutionController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionController($routeParams, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.solution = routeSolution;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.solution_nickname = $routeParams.solution_nickname;\r\n\r\n        vm.solution.current = vm.solution.v[vm.solution.v.length-1];\r\n        vm.solution.current.language = utilService.getLanguage(vm.solution.current.language);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateSolutionController', CreateSolutionController);\r\n\r\n/** @ngInject */\r\nfunction CreateSolutionController($location, $routeParams, languages, solutionService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        \r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.languages = languages;\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.createSolution(vm.contest_nickname, vm.problem_nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path('/contests/' + vm.contest_nickname + '/problems/' + vm.problem_nickname + '/solutions/' + solution.nickname);\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditSolutionController', EditSolutionController);\r\n\r\n/** @ngInject */\r\nfunction EditSolutionController($location, languages, solutionService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.solution = routeSolution;\r\n        vm.solution.current = vm.solution.v[ vm.solution.v.length-1 ];\r\n\r\n        vm.languages = languages;\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            name:        vm.solution.name,\r\n            source_code: vm.solution.current.source_code,\r\n            language:    vm.solution.current.language\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.editSolution(vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path('/contests/' + vm.contest.nickname + '/problems/' + vm.problem.nickname + '/solutions/' + solution.nickname);\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditProblemController', EditProblemController);\r\n\r\n/** @ngInject */\r\nfunction EditProblemController($location, problemService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.lastVersion = vm.problem.v[ vm.problem.v.length-1 ];\r\n\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            name:        vm.problem.name,\r\n            description: vm.lastVersion.description,\r\n            time_limit:  vm.lastVersion.time_limit\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.editProblem(vm.contest.nickname, vm.problem.nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path('/contests/' + vm.contest.nickname + '/problems/' + problem.nickname);\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemController', ViewProblemController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemController($routeParams, routeContest, routeProblem, solutionService, testCaseService, solutionRunsService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.problem.current = vm.problem.v[vm.problem.v.length-1];\r\n\r\n        getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n    };\r\n\r\n    vm.deleteSolution = function(solution) {\r\n        return function() {\r\n            solutionService.deleteSolution(vm.contest_nickname, vm.problem_nickname, solution.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.runSolution = function(solution_index) {\r\n        var validationResult;\r\n        vm.problem.solutions[solution_index].validation = {\r\n            status: 'waiting'\r\n        };\r\n\r\n        solutionRunsService.runSolutions(vm.contest.nickname, vm.problem.nickname, {\r\n            solutions:  [ vm.problem.solutions[solution_index].nickname ],\r\n            test_cases: vm.problem.test_cases.reduce(function(prev, cur) {\r\n                prev.push(cur._id);\r\n                return prev;\r\n            }, [])\r\n        })\r\n        .then(function(results) {\r\n            validationResult = results;\r\n\r\n            return solutionService.getSolution(\r\n                vm.contest_nickname, \r\n                vm.problem_nickname, \r\n                vm.problem.solutions[solution_index].nickname\r\n            );\r\n        })\r\n        .then(function(solution) {\r\n            vm.problem.solutions[solution_index] = solution;\r\n            getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n\r\n            vm.problem.solutions[solution_index].validation = {\r\n                status: 'done',\r\n                result: validationResult\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.deleteTestCase = function(test_case) {\r\n        return function() {\r\n            testCaseService.deleteTestCase(vm.contest_nickname, vm.problem_nickname, test_case._id)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n            });\r\n        };\r\n    };\r\n\r\n    function getValidatedTestCases(problem, solutions) {\r\n        solutions.forEach(function(solution) {\r\n            if(solution.validatedTestCases !== undefined) {\r\n                return;\r\n            }\r\n\r\n            solution.validatedTestCases = solutionRunsService.getValidatedTestCases(problem, solution);\r\n        });\r\n    }\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateProblemController', CreateProblemController);\r\n\r\n/** @ngInject */\r\nfunction CreateProblemController($location, $routeParams, problemService, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n\r\n        fillDefaultValues();\r\n    };\r\n\r\n    function fillDefaultValues() {\r\n        vm.form = {};\r\n        vm.form.time_limit = 1;\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.createProblem(vm.contest_nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path('/contests/' + vm.contest_nickname + '/problems/' + problem.nickname);\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllLogsController', ViewAllLogsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllLogsController(logService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.logsList = [];\r\n\r\n        logService.getLogs()\r\n        .then(function(logs) {\r\n            vm.logsList = logs;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllContestsController', ViewAllContestsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllContestsController(contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.contestList = [];\r\n\r\n        contestService.getContests(vm.me.permissions && vm.me.permissions.delete_contest)\r\n        .then(function(contests) {\r\n            vm.contestList = contests;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContributorController', CreateContributorController);\r\n\r\n/** @ngInject */\r\nfunction CreateContributorController($location, userService, contributorService, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tvm.contest = routeContest;\r\n    \tvm.usersList = [];\r\n\r\n    \tuserService.getUsers()\r\n    \t.then(function(users) {\r\n    \t\tvm.usersList = users.filter(function(user) {\r\n    \t\t\treturn !vm.contest.contributors.some(function(contributor) {\r\n    \t\t\t\treturn contributor.username === user.username;\r\n    \t\t\t});\r\n    \t\t});\r\n    \t});\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contributorService.createContributor(vm.contest.nickname, {\r\n            user_id: vm.form.user._id\r\n        })\r\n        .then(function(contest) {\r\n            $location.path('/contests/' + vm.contest.nickname);\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewContestController', ViewContestController);\r\n\r\n/** @ngInject */\r\nfunction ViewContestController(contestService, contributorService, problemService, routeMe, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.contest = routeContest;\r\n    };\r\n\r\n    vm.canI = function(action, obj) {\r\n        switch(action) {\r\n            case 'delete_contributor':\r\n                return vm.contest.author._id == vm.me._id;\r\n            case 'delete_problem':\r\n                return vm.contest.author._id == vm.me._id;\r\n            default:\r\n                return false;\r\n        }\r\n    };\r\n\r\n    vm.deleteContributor = function(contributor) {\r\n        return function() {\r\n            contributorService.deleteContributor(vm.contest.nickname, contributor._id)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteProblem = function(problem) {\r\n        return function() {\r\n            problemService.deleteProblem(vm.contest.nickname, problem.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteContest = function() {\r\n        return function() {\r\n            contestService.deleteContest(vm.contest.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContestController', CreateContestController);\r\n\r\n/** @ngInject */\r\nfunction CreateContestController($location, contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contestService.createContest({\r\n            name: vm.form.name\r\n        }).then(function(contest) {\r\n            $location.path('/contests');\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runsList', runsList);\r\n\r\n/** @ngInject */\r\nfunction runsList() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/runs-list/runs-list.html',\r\n        scope           : {\r\n            runs:    '<',\r\n            getLink: '<'\r\n        },\r\n        controller      : RunsListController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunsListController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.solutionRuns = [];\r\n            for(var i=0; i<vm.runs.length; i++) {\r\n                var newSolutionRun = {\r\n                    run_number: vm.runs[i].run_number,\r\n                    runs:       [ vm.runs[i] ],\r\n                    timestamp:  vm.runs[i].timestamp\r\n                };\r\n\r\n                for(var j=vm.runs.length-1; j>i; j--) {\r\n                    if(vm.runs[i].run_number === vm.runs[j].run_number) {\r\n                        newSolutionRun.runs.push(vm.runs[j]);\r\n                        vm.runs.splice(j, 1);\r\n                    }\r\n                }\r\n\r\n                vm.solutionRuns.push(newSolutionRun);\r\n            }\r\n            vm.solutionRuns.sort(function(a, b) {\r\n                return b.run_number - a.run_number;\r\n            });\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runResultTable', runResultTable);\r\n\r\n/** @ngInject */\r\nfunction runResultTable() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/run-result-table/run-result-table.html',\r\n        scope           : {\r\n            problem:   '<',\r\n            solutions: '<',\r\n            testCases: '<',\r\n            runNumber: '<'\r\n        },\r\n        controller      : RunResultTableController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunResultTableController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            // if not defined which solutions should be shown, \r\n            // it will show all the solutions that were run.\r\n            if(!vm.solutions) {\r\n                vm.solutions = vm.problem.solutions.filter(function(solution) {\r\n                    return solution.run.some(function(solutionRun) {\r\n                        return solutionRun.run_number == vm.runNumber;\r\n                    });\r\n                });\r\n            }\r\n\r\n            // all the runs with the run_number.\r\n            vm.solutionRuns = vm.solutions.reduce(function(prev, solution) {\r\n                return prev.concat(\r\n                    solution.run\r\n                    .filter(function(solutionRun) {\r\n                        return solutionRun.run_number == vm.runNumber;\r\n                    })\r\n                    .map(function(solutionRun) {\r\n                        solutionRun.solution          = solution;\r\n                        solutionRun.test_case         = getTestCase(vm.problem, solutionRun.test_case_id);\r\n                        solutionRun.test_case.current = solutionRun.test_case.v[ solutionRun.test_case.v.length-1 ];\r\n\r\n                        return solutionRun;\r\n                    })\r\n                );\r\n            }, []);\r\n\r\n            // all the test_cases that were tested.\r\n            vm.testCases = vm.solutionRuns.reduce(function(prev, solutionRun) {\r\n                if(prev.indexOf(solutionRun.test_case) === -1) {\r\n                    prev.push(solutionRun.test_case);\r\n                }\r\n                return prev;\r\n            }, []);\r\n\r\n            // map with all the solution/test_case results.\r\n            vm.solutionTestCaseRunMap = {};\r\n        };\r\n\r\n        function getTestCase(problem, test_case_id) {\r\n            return problem.test_cases.filter(function(test_case) {\r\n                return test_case._id == test_case_id;\r\n            })[0];\r\n        }\r\n\r\n        vm.selectRun = function(solutionRuns, solution_id, test_case_id) {\r\n            vm.selectedRun = vm.getSolutionTestCaseRun(solutionRuns, solution_id, test_case_id);\r\n        };\r\n\r\n        vm.unselectRun = function() {\r\n            vm.selectedRun = null;\r\n        };\r\n\r\n        vm.getSolutionTestCaseRun = function(solutionRuns, solution_id, test_case_id) {\r\n            if(vm.solutionTestCaseRunMap[solution_id + '-' + test_case_id] === undefined) {\r\n                var solutionTestCaseRun = solutionRuns.filter(function(solutionRun) {\r\n                    return solutionRun.solution._id  == solution_id\r\n                        && solutionRun.test_case._id == test_case_id;\r\n                })[0];\r\n\r\n                solutionTestCaseRun.verdict = utilService.getVerdict(solutionTestCaseRun.verdict);\r\n\r\n                vm.solutionTestCaseRunMap[solution_id + '-' + test_case_id] = solutionTestCaseRun;\r\n            }\r\n\r\n            return vm.solutionTestCaseRunMap[solution_id + '-' + test_case_id];\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .directive('navbar', navbar);\n\n/** @ngInject */\nfunction navbar() {\n    var directive = {\n        restrict        : 'E',\n        templateUrl     : 'app/components/navbar/navbar.html',\n        scope           : {},\n        controller      : NavbarController,\n        controllerAs    : 'vm',\n        bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController($route, $location, $scope, $filter, authService) {\n        var vm = this;\n\n        vm.init = function() {\n            vm.isLogged = authService.isLogged();\n\n            vm.mainLinks = getMainLinks();\n        };\n\n        function getMainLinks() {\n            var links = [{\n                label:   'Home',\n                urlPath: 'main' \n            }, {\n                label:   'Contests',\n                urlPath: 'contest.list'\n            }, {\n                label:   'Usuários',\n                urlPath: 'user.list'\n            }, {\n                label:   'Histórico',\n                urlPath: 'log'\n            }];\n\n            links.forEach(function(link) {\n                link.active = $location.path() == $filter('url')(link.urlPath);\n            });\n\n            return links;\n        }\n\n        vm.logout = function() {\n            authService.logout();\n            $location.path('/');\n        };\n\n        vm.init();\n        return vm;\n    }\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('alertInactive', alertInactive);\r\n\r\n/** @ngInject */\r\nfunction alertInactive() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/alert-inactive/alert-inactive.html',\r\n        scope           : {\r\n            msg: '<'\r\n        },\r\n        controller      : AlertInactiveController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function AlertInactiveController() {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('genericList', genericList);\r\n\r\n/** @ngInject */\r\nfunction genericList($compile) {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/generic-list/generic-list.html',\r\n        transclude      : true,\r\n        controller      : GenericListController,\r\n        controllerAs    : 'list',\r\n        scope: {\r\n            items:          '<', // list\r\n            noItemsMessage: '<', // string\r\n            headers:        '<', // list\r\n            parent:         '<'  // controller\r\n        },\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function GenericListController() {\r\n        var list = this;\r\n\r\n        list.init = function() {\r\n        };\r\n\r\n        list.init();\r\n        return list;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('breadcrumbs', breadcrumbs);\r\n\r\n/** @ngInject */\r\nfunction breadcrumbs() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/breadcrumbs/breadcrumbs.html',\r\n        scope           : {\r\n            new:      '<', // string of what is being added\r\n            edit:     '<', // true or false\r\n\r\n            users:    '<', // true or false\r\n            user:     '<',\r\n\r\n            contests: '<',\r\n            contest:  '<',\r\n            problem:  '<',\r\n            solution: '<',\r\n            testCase: '<',\r\n\r\n            extra:    '<'  // list of extra labels/urls (for those who don't fit a pattern (yet))\r\n        },\r\n        controller      : BreadcrumbsController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function BreadcrumbsController($filter) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.items = [];\r\n\r\n            // contests list\r\n            if(vm.contests) {\r\n                vm.items.push({\r\n                    label: 'Contests',\r\n                    url:   $filter('url')('contest.list')\r\n                });\r\n\r\n                // contest X\r\n                if(vm.contest) {\r\n                    vm.items.push({\r\n                        label: vm.contest.name,\r\n                        url:   $filter('url')('contest.view', vm.contest.nickname)\r\n                    });\r\n\r\n                    // problem Y\r\n                    if(vm.problem) {\r\n                        vm.items.push({\r\n                            label: vm.problem.name,\r\n                            url:   $filter('url')('contest.problem.view', vm.contest.nickname, vm.problem.nickname)\r\n                        });\r\n\r\n                        // solution Z\r\n                        if(vm.solution) {\r\n                            vm.items.push({\r\n                                label: vm.solution.name,\r\n                                url:   $filter('url')('contest.problem.solution.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\r\n                            });\r\n                        }\r\n\r\n                        // testcase W\r\n                        if(vm.testCase) {\r\n                            vm.items.push({\r\n                                label: '#' + vm.testCase.v[ vm.testCase.v.length-1 ].order + ' caso de teste',\r\n                                url:   $filter('url')('contest.problem.testCase.view', vm.contest.nickname, vm.problem.nickname, vm.testCase._id)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // users list\r\n            if(vm.users) {\r\n                vm.items.push({\r\n                    label: 'Usuários',\r\n                    url:   $filter('url')('user.list')\r\n                });\r\n\r\n                // user X\r\n                if(vm.user) {\r\n                    vm.items.push({\r\n                        label: vm.user.username,\r\n                        url:   $filter('url')('user.view')\r\n                    });\r\n                }\r\n            }\r\n\r\n            // is an editing page?\r\n            if(vm.edit) {\r\n                vm.items.push({\r\n                    label: 'Editar'\r\n                });\r\n            }\r\n\r\n            // is a creating page?\r\n            if(vm.new) {\r\n                vm.items.push({\r\n                    label: 'Nov' + vm.new\r\n                });\r\n            }\r\n\r\n            if(vm.extra && vm.extra.length) {\r\n                vm.extra.forEach(function(extra) {\r\n                    vm.items.push({\r\n                        label: extra.label,\r\n                        url:   extra.url\r\n                    });\r\n                });\r\n            }\r\n\r\n            // the last item is the selected one\r\n            if(vm.items.length) {\r\n                vm.activeItem = vm.items.pop();\r\n            }\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('utilService', utilService);\r\n\r\n/** @ngInject */\r\nfunction utilService(languages, verdicts) {\r\n    var service = this;\r\n\r\n    service.getLanguage = function(languageValue) {\r\n        return languages.filter(function(l) {\r\n            return l.value == languageValue;\r\n        })[0] || languages[0];\r\n    };\r\n\r\n    service.getVerdict = function(verdictValue) {\r\n        return verdicts.filter(function(v) {\r\n            return v.value == verdictValue;\r\n        })[0] || verdicts[0];\r\n    };\r\n\r\n    service.getValueFromObj = function(obj, path) {\r\n    \tvar dotIndex = path.indexOf('.');\r\n    \t\r\n    \tif(dotIndex !== -1) {\r\n    \t\tvar prefix = path.substr(0, dotIndex);\r\n    \t\tvar suffix = path.substr(dotIndex+1);\r\n\r\n    \t\tif(typeof obj[prefix] !== 'object') {\r\n    \t\t\treturn null;\r\n    \t\t}\r\n\r\n    \t\treturn service.getValueFromObj(obj[prefix], suffix);\r\n    \t} else {\r\n    \t\treturn obj[path];\r\n    \t}\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('userService', userService);\r\n\r\n/** @ngInject */\r\nfunction userService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getUsers = function(show_deleted) {\r\n        return $http.get(apiUrl + 'user' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.users;\r\n        });\r\n    };\r\n\r\n    service.getUser = function(username) {\r\n        return $http.get(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.createUser = function(user) {\r\n        return $http.post(apiUrl + 'user', user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.deleteUser = function(username) {\r\n        return $http.delete(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    }\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('urlService', urlService);\r\n\r\n/** @ngInject */\r\nfunction urlService(frontUrls, utilService) {\r\n    var service = this;\r\n\r\n    service.getUrl = function(path, args) {\r\n        var url = utilService.getValueFromObj(frontUrls.urls, path);\r\n        if(!url) {\r\n            return null;\r\n        }\r\n\r\n        if(args.length) {\r\n            args.forEach(function(arg) {\r\n                url = url.replace(/:\\w*/, arg);\r\n            });\r\n        }\r\n\r\n        return url;\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('testCaseService', testCaseService);\r\n\r\n/** @ngInject */\r\nfunction testCaseService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getTestCase = function(contest_nickname, problem_nickname, test_case_id) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.createTestCase = function(contest_nickname, problem_nickname, test_case) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case', \r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.editTestCase = function(contest_nickname, problem_nickname, test_case_id, test_case) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id,\r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.deleteTestCase = function(contest_nickname, problem_nickname, test_case_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('solutionRunsService', solutionRunsService);\r\n\r\n/** @ngInject */\r\nfunction solutionRunsService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.runSolutions = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/run/solutions', \r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.results;\r\n        });\r\n    };\r\n\r\n    service.getValidatedTestCases = function(problem, solution) {\r\n        var test_cases = angular.copy(problem.test_cases);\r\n        var runs = angular.copy(solution.run).reverse();\r\n\r\n        runs.forEach(function(run) {\r\n            if(hasCriticalAfter(solution.v, run.timestamp)) {\r\n                return;\r\n            }\r\n\r\n            for(var i=0; i<test_cases.length; i++) {\r\n                if(test_cases[i]._id == run.test_case_id) {\r\n                    if(!hasCriticalAfter(test_cases[i].v, run.timestamp)\r\n                    && run.verdict == 'Accepted') {\r\n                        test_cases.splice(i, 1);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        return problem.test_cases.length - test_cases.length;\r\n    };\r\n\r\n    function hasCriticalAfter(versions, timestamp) {\r\n        return versions.some(function(version) {\r\n            return version.critical && moment(version.timestamp).isAfter(timestamp);\r\n        });\r\n    }\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('solutionService', solutionService);\r\n\r\n/** @ngInject */\r\nfunction solutionService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.createSolution = function(contest_nickname, problem_nickname, solution) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution', \r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.editSolution = function(contest_nickname, problem_nickname, solution_nickname, solution) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname,\r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.deleteSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('problemService', problemService);\r\n\r\n/** @ngInject */\r\nfunction problemService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.createProblem = function(contest_nickname, problem) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem', \r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.editProblem = function(contest_nickname, problem_nickname, problem) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname,\r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.deleteProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('logService', logService);\r\n\r\n/** @ngInject */\r\nfunction logService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getLogs = function() {\r\n        return $http.get(apiUrl + 'log')\r\n        .then(function(result) {\r\n            return result.data.logs;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contributorService', contributorService);\r\n\r\n/** @ngInject */\r\nfunction contributorService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.createContributor = function(contest_nickname, user) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor',\r\n            user\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContributor = function(contest_nickname, user_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor/' + user_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contestService', contestService);\r\n\r\n/** @ngInject */\r\nfunction contestService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getContests = function(show_deleted) {\r\n        return $http.get(apiUrl + 'contest' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.contests;\r\n        });\r\n    };\r\n\r\n    service.getContest = function(nickname) {\r\n        return $http.get(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.createContest = function(contest) {\r\n        return $http.post(apiUrl + 'contest', contest)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContest = function(nickname) {\r\n        return $http.delete(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authService', authService);\r\n\r\n/** @ngInject */\r\nfunction authService($q, $http, $window, apiUrl) {\r\n    var service = this;\r\n\r\n    service.login = function(username, password) {\r\n        return $http.post(apiUrl + 'login', {\r\n        \tusername: username,\r\n        \tpassword: password\r\n        })\r\n            .then(function(response) {\r\n                var token = response.data.token;\r\n\r\n                $window.localStorage.setItem('token', token);\r\n                service.setHeaderToken(token);\r\n\r\n                return $q.resolve(response.data);\r\n            });\r\n    };\r\n\r\n    service.logout = function() {\r\n        $window.localStorage.removeItem('token');\r\n        service.unsetHeaderToken();\r\n    };\r\n\r\n    service.setHeaderToken = function(token) {\r\n        $http.defaults.headers.common['x-access-token'] = token;\r\n    };\r\n\r\n    service.unsetHeaderToken = function() {\r\n        delete $http.defaults.headers.common['x-access-token'];\r\n    };\r\n\r\n    service.me = function() {\r\n        return $http.get(apiUrl + 'me')\r\n        .then(function(response) {\r\n            return response.data.me;\r\n        });\r\n    };\r\n\r\n    service.isLogged = function() {\r\n        return !!$window.localStorage.getItem('token');\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .controller('MainController', MainController);\n\n/** @ngInject */\nfunction MainController() {\n    var vm = this;\n\n    vm.init = function() {\n    };\n\n    vm.init();\n    return vm;\n}\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('LoginController', LoginController);\r\n\r\n/** @ngInject */\r\nfunction LoginController($route, $location, authService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tif(authService.isLogged()) {\r\n    \t\t$location.path('/');\r\n    \t}\r\n\r\n        var queryMessage = $location.search().message;\r\n        if(queryMessage) {\r\n            switch(queryMessage) {\r\n                case 'access_denied':\r\n                    vm.errorMessage = 'Acesso negado.';\r\n                    break;\r\n\r\n                case 'token_expired':\r\n                    vm.errorMessage = 'Acesso expirado. Refaça seu login.';\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.submit = function() {\r\n    \tauthService.login(vm.form.username, vm.form.password)\r\n    \t.then(function(data) {\r\n    \t\t$route.reload();\r\n    \t})\r\n    \t.catch(function(err) {\r\n    \t\tconsole.log(err);\r\n    \t});\r\n    };\r\n\r\n    vm.init();\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authInterceptor', authInterceptor);\r\n\r\n/** @ngInject */\r\nfunction authInterceptor($q, $location, $injector) {\r\n    var interceptor = this;\r\n\r\n    interceptor.responseError = function(response) {\r\n        if(response.status == 500 && response.data.error == \"TokenExpiredError: jwt expired\") {\r\n            $injector.get('authService').logout();\r\n            return $q.reject(response);\r\n        } else {\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n\r\n    return interceptor;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n\t.module('front')\n\t.run(setToken);\n\n/** @ngInject */\nfunction setToken($http, $window, authService) {\n    var token = $window.localStorage.getItem('token');\n\n    if(token) {\n    \tauthService.setHeaderToken(token);\n    }\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .config(routeConfig)\n  .controller('AppController', AppController);\n\n/** @ngInject */\nfunction routeConfig(frontUrls, $routeProvider, $locationProvider, $httpProvider) {\n    $httpProvider.interceptors.push('authInterceptor');\n\n\n    $routeProvider\n\n    /* main */\n    .when(frontUrls.urls.main, {\n        templateUrl : 'app/main/main.html',\n        controller  : 'MainController',\n        controllerAs: 'vm'\n    })\n\n\n    /* login */\n    .when(frontUrls.urls.login, {\n        templateUrl : 'app/login/login.html',\n        controller  : 'LoginController',\n        controllerAs: 'vm'\n    })\n\n\n    /* logs */\n    .when(frontUrls.urls.log, {\n        templateUrl : 'app/logs/view-all/view-all-logs.html',\n        controller  : 'ViewAllLogsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* users */\n    .when(frontUrls.urls.user.new, {\n        templateUrl : 'app/users/create/create-user.html',\n        controller  : 'CreateUserController',\n        controllerAs: 'vm'\n    })\n    .when(frontUrls.urls.user.view, {\n        templateUrl : 'app/users/view/view-user.html',\n        controller  : 'ViewUserController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe:   getMe,\n            routeUser: getUser\n        }\n    })\n    .when(frontUrls.urls.user.list, {\n        templateUrl : 'app/users/view-all/view-all-users.html',\n        controller  : 'ViewAllUsersController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contests */\n    .when(frontUrls.urls.contest.new, {\n        templateUrl : 'app/contests/create/create-contest.html',\n        controller  : 'CreateContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n    .when(frontUrls.urls.contest.view, {\n        templateUrl : 'app/contests/view/view-contest.html',\n        controller  : 'ViewContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe:      getMe,\n            routeContest: getContest\n        }\n    })\n    .when(frontUrls.urls.contest.list, {\n        templateUrl : 'app/contests/view-all/view-all-contests.html',\n        controller  : 'ViewAllContestsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contributors */\n    .when(frontUrls.urls.contest.contributor.new, {\n        templateUrl : 'app/contributors/create/create-contributor.html',\n        controller  : 'CreateContributorController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest\n        }\n    })\n\n\n    /* problems */\n    .when(frontUrls.urls.contest.problem.new, {\n        templateUrl : 'app/problems/create/create-problem.html',\n        controller  : 'CreateProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest\n        }\n    })\n    .when(frontUrls.urls.contest.problem.view, {\n        templateUrl : 'app/problems/view/view-problem.html',\n        controller  : 'ViewProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.edit, {\n        templateUrl : 'app/problems/edit/edit-problem.html',\n        controller  : 'EditProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    /* solutions */\n    .when(frontUrls.urls.contest.problem.solution.new, {\n        templateUrl : 'app/solutions/create/create-solution.html',\n        controller  : 'CreateSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.view, {\n        templateUrl : 'app/solutions/view/view-solution.html',\n        controller  : 'ViewSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest:  getContest,\n            routeProblem:  getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.edit, {\n        templateUrl : 'app/solutions/edit/edit-solution.html',\n        controller  : 'EditSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest:  getContest,\n            routeProblem:  getProblem,\n            routeSolution: getSolution\n        }\n    })\n\n\n    /* test cases */\n    .when(frontUrls.urls.contest.problem.testCase.new, {\n        templateUrl : 'app/testCases/create/create-testCase.html',\n        controller  : 'CreateTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.view, {\n        templateUrl : 'app/testCases/view/view-testCase.html',\n        controller  : 'ViewTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeTestCase: getTestCase\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.edit, {\n        templateUrl : 'app/testCases/edit/edit-testCase.html',\n        controller  : 'EditTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeTestCase: getTestCase\n        }\n    })\n\n\n    /* solution runs */\n    .when(frontUrls.urls.contest.problem.solution.run.list, {\n        templateUrl : 'app/solutions/runs/list/solution-runs.html',\n        controller  : 'ViewSolutionRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.run.view, {\n        templateUrl : 'app/solutions/runs/view/solution-run.html',\n        controller  : 'ViewSolutionRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.list, {\n        templateUrl : 'app/solutionsRuns/list/solutionRuns-list.html',\n        controller  : 'ViewProblemSolutionRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.view, {\n        templateUrl : 'app/solutionsRuns/view/view-solutionRun.html',\n        controller  : 'ViewProblemSolutionRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    .otherwise({\n        redirectTo: '/'\n    });\n\n\n    $locationProvider.html5Mode(true);\n}\n\n/** @ngInject */\nfunction AppController($rootScope, $location) {\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n        if(rejection && rejection.data && rejection.data.error) {\n            switch(rejection.data.error) {\n                case 'Access denied':\n                    $location.search('message', 'access_denied');\n                    $location.path('/login');\n                    break;\n                \n                case 'TokenExpiredError: jwt expired':\n                    $location.search('message', 'token_expired');\n                    $location.path('/login');\n                    return;\n\n                default:\n                    $location.path('/login');\n                    return;\n            }\n        }\n\n        $location.path('/login');\n    });\n}\n\nfunction getMe(authService) {\n    return authService.me();\n}\n\nfunction getUser($route, frontUrls, userService) {\n    return userService.getUser(\n        $route.current.params[frontUrls.paramKeys.user]\n    );\n}\n\nfunction getContest($route, frontUrls, contestService) {\n    return contestService.getContest(\n        $route.current.params[frontUrls.paramKeys.contest]\n    );\n}\n\nfunction getProblem($route, frontUrls, problemService) {\n    return problemService.getProblem(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem]\n    );\n}\n\nfunction getSolution($route, frontUrls, solutionService) {\n    return solutionService.getSolution(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.solution]\n    );\n}\n\nfunction getTestCase($route, frontUrls, testCaseService) {\n    return testCaseService.getTestCase(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.testCase]\n    );\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.directive('ngTransclude', customNgTransclude);\r\n\r\n/** @ngInject */\r\nfunction customNgTransclude() {\r\n    return {\r\n        restrict: 'EAC',\r\n        link: function($scope, $element, $attrs, controller, $transclude) {\r\n            if(!$transclude) {\r\n                throw minErr('ngTransclude')(\r\n\t\t\t\t\t'orphan',\r\n\t\t\t\t\t'Illegal use of ngTransclude directive in the template! ' +\r\n\t\t\t\t\t'No parent directive that requires a transclusion found. ' +\r\n\t\t\t\t\t'Element: {0}',\r\n\t\t\t\t\tstartingTag($element)\r\n\t\t\t\t);\r\n            }\r\n\r\n            var iScopeType = $attrs['ngTransclude'] || 'sibling';\r\n\r\n            switch(iScopeType) {\r\n                case 'sibling':\r\n                    $transclude(function(clone) {\r\n                        $element.append(clone);\r\n                    });\r\n                    break;\r\n\r\n                case 'parent':\r\n                    $transclude($scope, function(clone) {\r\n                        if(clone.length) {\r\n                            $element.append(clone);\r\n                        }\r\n                    });\r\n                    break;\r\n\r\n                case 'child':\r\n                    var iChildScope = $scope.$new();\r\n                    $transclude(iChildScope, function(clone) {\r\n                        $element.append(clone);\r\n                        $element.on('$destroy', function() {\r\n                            iChildScope.$destroy();\r\n                        });\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.filter('url', url)\r\n\t.filter('myDate', myDate);\r\n\r\n/** @ngInject */\r\nfunction url(urlService) {\r\n\treturn function(input) {\r\n\t\tvar args = [];\r\n\t\tfor(var i=1; i<arguments.length; i++) {\r\n\t\t\targs.push(arguments[i]);\r\n\t\t}\r\n\r\n\t\treturn urlService.getUrl(input, args);\r\n\t};\r\n}\r\n\r\n/** @ngInject */\r\nfunction myDate() {\r\n\treturn function(input) {\r\n\t\tvar currentDate = moment(),\r\n\t\t\tinputDate   = moment(input);\r\n\r\n\t\tif(inputDate.isBefore(currentDate)) {\r\n\t\t\tvar diffInMinutes = currentDate.diff(inputDate, 'minutes', true),\r\n\t\t\t\tdiffInHours   = currentDate.diff(inputDate, 'hours', true),\r\n\t\t\t\tdiffInDays    = currentDate.diff(inputDate, 'days', true),\r\n\t\t\t\tdiffInMonths  = currentDate.diff(inputDate, 'months', true);\r\n\r\n\t\t\tif(diffInMinutes <= 1) {\r\n\t\t\t\treturn 'agora';\r\n\t\t\t} else if(diffInHours < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMinutes) + ' minuto' + (diffInMinutes >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInDays < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInHours) + ' hora' + (diffInHours >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInMonths < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInDays) + ' dia' + (diffInDays >= 2 ? 's' : '');\r\n\t\t\t} else {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMonths) + ' mes' + (diffInMonths >= 2 ? 's' : '');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t}\r\n\t}\r\n}\r\n\r\n})();\r\n\n/* global moment:false */\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .constant('moment', moment)\n    .constant('PromiseProcess', promiseProcess)\n    .constant('apiUrl', 'http://34.212.5.211:3010/api/v1/')\n    .constant('languages', languages())\n    .constant('verdicts', verdicts())\n    .constant('frontUrls', frontUrls());\n\n// list of languages\nfunction languages() {\n\treturn [{\n\t\tlabel: 'Outra',\n\t\tvalue: 'other'\n\t}, {\n\t\tlabel: 'C++',\n\t\tvalue: 'cpp'\n\t}, {\n\t\tlabel: 'C',\n\t\tvalue: 'c'\n\t}];\n}\n\n// list of verdicts\nfunction verdicts() {\n\treturn [{\n\t\tlabel: 'Other',\n\t\tshort: 'Other',\n\t\tvalue: 'Other'\n\t}, {\n\t\tlabel: 'Accepted',\n\t\tshort: 'AC',\n\t\tvalue: 'Accepted'\n\t}, {\n\t\tlabel: 'Presentation error',\n\t\tshort: 'PE',\n\t\tvalue: 'Presentation error'\n\t}, {\n\t\tlabel: 'Wrong answer',\n\t\tshort: 'WA',\n\t\tvalue: 'Wrong answer'\n\t}, {\n\t\tlabel: 'Time limit exceeded',\n\t\tshort: 'TLE',\n\t\tvalue: 'Time limit exceeded'\n\t}, {\n\t\tlabel: 'Compilation error',\n\t\tshort: 'CE',\n\t\tvalue: 'Compilation error'\n\t}];\n}\n\n// list of urls\nfunction frontUrls() {\n\tvar paramKeys = {\n\t\tuser:        'user_nickname',\n\t\tcontest:     'contest_nickname',\n\t\tproblem:     'problem_nickname',\n\t\tsolution:    'solution_nickname',\n\t\ttestCase:    'test_case_id',\n\t\tsolutionRun: 'run_number'\n\t};\n\n\tvar urls = {\n\t\tmain:  '/',\n\t\tlogin: '/login',\n\t\tlog:   '/logs',\n\t\tuser:  {\n\t\t\tnew:  '/users/new',\n\t\t\tview: '/users/:user_nickname',\n\t\t\tlist: '/users'\n\t\t},\n\t\tcontest: {\n\t\t\tnew:  '/contests/new',\n\t\t\tview: '/contests/:contest_nickname',\n\t\t\tlist: '/contests',\n\n\t\t\tcontributor: {\n\t\t\t\tnew: '/contests/:contest_nickname/contributors/new'\n\t\t\t},\n\n\t\t\tproblem: {\n\t\t\t\tnew:  '/contests/:contest_nickname/problems/new',\n\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname',\n\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/edit',\n\n\t\t\t\tsolution: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/solutions/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/edit',\n\n\t\t\t\t\trun: {\n\t\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs',\n\t\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs/:run_number'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\ttestCase: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/test_cases/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id/edit'\n\t\t\t\t},\n\n\t\t\t\tsolutionRun: {\n\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs/:run_number'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\tparamKeys: paramKeys,\n\t\turls:      urls\n\t};\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .config(removeNgTransclude);\n\n/** @ngInject */\nfunction removeNgTransclude($provide) {\n    $provide.decorator('ngTranscludeDirective', ['$delegate', function ($delegate) {\n        $delegate.shift();\n        return $delegate;\n    }]);\n}\n\n})();\n\nangular.module(\"front\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/login/login.html\",\"<navbar></navbar><alert-inactive ng-if=vm.errorMessage msg=vm.errorMessage></alert-inactive><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Login</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=loginForm ng-submit=vm.submit();><div class=form-group><input type=text name=username ng-model=vm.form.username class=form-control id=login-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><input type=password name=password ng-model=vm.form.password class=form-control id=login-password placeholder=Senha ng-required=true></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=loginForm.$invalid>Login</button></form></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<navbar></navbar><div class=jumbotron><div class=container><h1 class=display-3>Olá!</h1><p>This is a template for a simple marketing or informational website. It includes a large callout called a jumbotron and three supporting pieces of content. Use it as a starting point to create something more unique.</p><p><a class=\\\"btn btn-primary btn-lg\\\" href=/login role=button>Faça login &raquo;</a></p></div></div><div class=container><div class=row><div class=col-12><p>Testing</p></div></div></div>\");\n$templateCache.put(\"app/components/alert-inactive/alert-inactive.html\",\"<div id=alert-inactive class=\\\"alert alert-danger\\\" role=alert><strong>{{ vm.msg }}</strong></div>\");\n$templateCache.put(\"app/components/breadcrumbs/breadcrumbs.html\",\"<div class=container><div class=row><div class=col-12><nav class=breadcrumb><a ng-repeat=\\\"item in vm.items\\\" class=breadcrumb-item ng-href=\\\"{{ item.url }}\\\">{{ item.label }}</a> <span class=\\\"breadcrumb-item active\\\">{{ vm.activeItem.label }}</span></nav></div></div></div>\");\n$templateCache.put(\"app/components/generic-list/generic-list.html\",\"<div class=generic-list><div ng-if=list.items.length class=\\\"row header-row\\\"><div ng-repeat=\\\"header in list.headers\\\" class=header-col ng-class=header.class>{{ header.label }}</div></div><div ng-repeat=\\\"item in list.items\\\" ng-transclude=parent class=item></div><div ng-if=!list.items.length class=row><div class=col-12><p>{{ list.noItemsMessage }}</p></div></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-toggleable-md navbar-inverse bg-inverse\\\"><button class=\\\"navbar-toggler navbar-toggler-right\\\" type=button data-toggle=collapse data-target=#navbarsExampleDefault aria-controls=navbarsExampleDefault aria-expanded=false aria-label=\\\"Toggle navigation\\\"><span class=navbar-toggler-icon></span></button> <a class=navbar-brand href=/ >Navbar</a><div class=\\\"collapse navbar-collapse\\\" id=navbarsExampleDefault><ul class=\\\"navbar-nav mr-auto\\\"><li ng-repeat=\\\"link in vm.mainLinks\\\" class=nav-item ng-class=\\\"{ \\'active\\': link.active }\\\"><a class=nav-link ng-href=\\\"{{ link.urlPath | url }}\\\">{{ link.label }}</a></li></ul><div class=\\\"my-2 my-md-0\\\"><a ng-if=!vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" role=button ng-href=\\\"{{ \\'login\\' | url }}\\\">Login</a> <button ng-if=vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=button ng-click=vm.logout();>Logout</button></div></div></nav>\");\n$templateCache.put(\"app/components/run-result-table/run-result-table.html\",\"<div class=row><div class=col-12><table class=\\\"table table-sm\\\"><thead><tr><th></th><th ng-repeat=\\\"test_case in vm.testCases\\\">#{{ test_case.current.order }}</th></tr></thead><tbody><tr ng-repeat=\\\"solution in vm.solutions\\\"><td>{{ solution.name }}</td><td ng-repeat=\\\"test_case in vm.testCases\\\"><span ng-if=\\\"vm.getSolutionTestCaseRun(vm.solutionRuns, solution._id, test_case._id)\\\" ng-click=\\\"vm.selectRun(vm.solutionRuns, solution._id, test_case._id)\\\">{{ vm.getSolutionTestCaseRun(vm.solutionRuns, solution._id, test_case._id).verdict.short }}</span></td></tr></tbody></table></div></div><div class=row ng-if=vm.selectedRun><div class=col-12><p><span><strong>{{ vm.selectedRun.solution.name }} / #{{ vm.selectedRun.test_case.current.order }}</strong> </span><span style=\\\"float: right\\\"><i class=\\\"fa fa-times\\\" aria-hidden=true ng-click=vm.unselectRun()></i></span></p><p><strong>Veredito:</strong> {{ vm.selectedRun.verdict.label }}</p></div><div class=col-6><p><strong>Saída esperada:</strong></p><pre>{{ vm.selectedRun.test_case.current.output }}</pre></div><div class=col-6><p><strong>Saída:</strong></p><pre>{{ vm.selectedRun.output }}</pre></div></div><div class=row ng-if=!vm.selectedRun><div class=col-12><p>Selecione um item da tabela para ver mais detalhes.</p></div></div>\");\n$templateCache.put(\"app/components/runs-list/runs-list.html\",\"<div class=runs-list><div class=row ng-repeat=\\\"run in vm.solutionRuns\\\"><div class=col-12><p><a ng-href=\\\"{{ vm.getLink(run.run_number) }}\\\">Execução {{ run.run_number }}</a> - {{ run.timestamp | myDate }}</p></div></div></div>\");\n$templateCache.put(\"app/contributors/create/create-contributor.html\",\"<navbar></navbar><div class=container><div class=row><div class=col-12><h1 class=page-title>Adicionar novo contribuidor</h1></div></div><div class=row><div class=col-12 ng-if=vm.loading><p>Carregando.</p></div><div class=col-12 ng-if=\\\"!vm.loading && !vm.usersList.length\\\"><p>Não há mais quem adicionar.</p></div><div class=\\\"col-12 col-lg-6\\\" ng-if=\\\"!vm.loading && !!vm.usersList.length\\\"><form novalidate name=userForm ng-submit=vm.submit();><div class=form-group><select name=user ng-model=vm.form.user ng-options=\\\"user as user.username for user in vm.usersList\\\" class=form-control id=contributor-user placeholder=\\\"Nome de usuário\\\" ng-required=true></select></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/contests/create/create-contest.html\",\"<navbar></navbar><breadcrumbs contests=true new=\\\"\\'o contest\\'\\\"></breadcrumbs><div id=create-contest class=container><div class=row><div class=col-12><h1 class=page-title>Criar contest</h1></div></div><div class=row><div class=\\\"col-sm-12 col-lg-6\\\"><form novalidate name=contestForm ng-submit=vm.submit();><div class=form-group><label for=contest-name>Nome</label><input type=text name=name ng-model=vm.form.name class=form-control id=contest-name placeholder=\\\"Super Contest 2017\\\" ng-required=true></div><div class=form-group><label class=form-label-static for=contest-name>Autor</label><p>{{ vm.me.username }}</p></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"{{ \\'contest.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=contestForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/contests/view/view-contest.html\",\"<navbar></navbar><alert-inactive ng-if=vm.contest.deleted_at msg=\\\"\\'Este contest está inativo.\\'\\\"></alert-inactive><breadcrumbs contests=true contest=vm.contest></breadcrumbs><div id=view-contest><div class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.contest.name }}</h1></div></div><!-- info --><div class=row><div class=col-12><p>Autor: <a ng-href=\\\"{{ \\'user.view\\' | url : vm.contest.author.username }}\\\">{{ vm.contest.author.username }}</a></p></div></div><div class=row><div class=col-12><p>Criado em: <span>{{ vm.contest.created_at | date:\\'dd/MM/yyyy\\' }}</span></p></div></div></div><!-- contributors list --><div class=\\\"container contributors-list\\\"><div class=row><div class=col-12><h4>Contribuidores:</h4></div></div><generic-list items=vm.contest.contributors no-items-message=\\\"\\'Nenhum contribuidor cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }}</a></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_contributor\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteContributor(item) modal-confirm-title=\\\"\\'Remover contribuidor\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este contribuidor?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list><div class=row ng-if=!vm.contest.deleted_at><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.contributor.new\\' | url : vm.contest.nickname }}\\\">Adicionar contribuidor</a></div></div></div><!-- problems list --><div class=\\\"container problems-list\\\"><div class=row><div class=col-12><h4>Problemas:</h4></div></div><generic-list items=vm.contest.problems no-items-message=\\\"\\'Nenhum problema cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.view\\' | url : list.parent.contest.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_problem\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteProblem(item) modal-confirm-title=\\\"\\'Remover problema\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este problema?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list><div class=row ng-if=!vm.contest.deleted_at><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.new\\' | url : vm.contest.nickname }}\\\">Adicionar problema</a></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row ng-if=\\\"!vm.contest.deleted_at && vm.me.permissions && vm.me.permissions.delete_contest\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteContest(problem) modal-confirm-title=\\\"\\'Desativer contest\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este contest?\\'\\\">Desativar contest</button></div></div></div></div>\");\n$templateCache.put(\"app/contests/view-all/view-all-contests.html\",\"<navbar></navbar><breadcrumbs contests=true></breadcrumbs><div id=view-all-contests><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de contests</h1></div></div></div><div class=\\\"container contest-list\\\"><generic-list items=vm.contestList no-items-message=\\\"\\'Nenhum contest cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',      class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',     class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Criado em\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.view\\' | url : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-4><p>{{ item.created_at | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.new\\' | url }}\\\">Criar contest</a></div></div></div></div>\");\n$templateCache.put(\"app/logs/view-all/view-all-logs.html\",\"<navbar></navbar><div id=view-all-logs><div class=container><div class=row><div class=col-12><h1 class=page-title>Histórico</h1></div></div></div><div class=\\\"container log-list\\\"><generic-list items=vm.logsList no-items-message=\\\"\\'Nenhum log registrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Contest\\',  class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',    class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Mensagem\\', class: \\'col-6\\' },\\r\\n\t\t\t\t{ label: \\'Data\\',     class: \\'col-2\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-2><a ng-href=\\\"{{ \\'contest.view\\' | url : item.contest.nickname }}\\\">{{ item.contest.name }}</a></div><div class=col-2><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-6><p>{{ item.message }}</p></div><div class=col-2><p>{{ item.date | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list></div></div>\");\n$templateCache.put(\"app/problems/create/create-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest new=\\\"\\'o problema\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.view\\' | url : vm.contest_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=problemForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/edit/edit-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"/contests/{{ vm.contest.nickname }}/problems/{{ vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=problemForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/view/view-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem></breadcrumbs><div id=view-problem><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Descrição: {{ vm.problem.current.description }}</p></div><div class=col-12><p>Tempo limite: {{ vm.problem.current.time_limit }}</p></div></div></div><!-- solutions list --><div class=\\\"container solutions-list\\\"><div class=row><div class=col-12><h4>Soluções:</h4></div></div><generic-list items=vm.problem.solutions no-items-message=\\\"\\'Nenhuma solução cadastrada.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',            class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Casos validados\\', class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\',           class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><span ng-if=!item.validatedTestCases>{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }} </span><a ng-if=item.validatedTestCases ng-href=\\\"{{ \\'contest.problem.solution.run.list\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}</a></div><div class=col-4><!-- remover --> <button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteSolution(item) modal-confirm-title=\\\"\\'Remover solução\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover esta solução?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button><!-- validar --> <button class=\\\"btn btn-primary\\\" ng-class=\\\"{ \\'loading-button\\': item.validation && item.validation.status == \\'waiting\\' }\\\" type=button ng-click=list.parent.runSolution($index) ng-disabled=\\\"\\r\\n\t\t\t\t\t\t\titem.validatedTestCases == list.parent.problem.test_cases.length\\r\\n\t\t\t\t\t\t\t|| (item.validation && item.validation.status == \\'waiting\\')\\r\\n\t\t\t\t\t\t\\\"><img ng-if=\\\"item.validation && item.validation.status == \\'waiting\\'\\\" src=assets/images/ripple.svg> <i ng-if=\\\"!item.validation || item.validation.status != \\'waiting\\'\\\" class=\\\"fa fa-check\\\" aria-hidden=true></i></button></div></div><div class=row ng-if=item.validation><div class=col-12><p ng-if=\\\"item.validation.status === \\'waiting\\'\\\">Carregando</p><p ng-if=\\\"item.validation.status === \\'done\\'\\\">{{ item.validation.result.results | json }}</p><!-- <a\\r\\n\t\t\t\t\t\tng-if=\\\"item.validation.status === \\'done\\'\\\"\\r\\n\t\t\t\t\t\tng-href=\\\"{{ \\'contest.problem.solution.run.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname : item.validation.result.run_number }}\\\"\\r\\n\t\t\t\t\t>Ver detalhes</a> --></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-6><a ng-href=\\\"{{ \\'contest.problem.solutionRun.list\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Ver todas as execuções</a></div><div class=col-6><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar solução</a></div></div></div><!-- test cases list --><div class=\\\"container test-cases-list\\\"><div class=row><div class=col-12><h4>Casos de teste:</h4></div></div><generic-list items=vm.problem.test_cases no-items-message=\\\"\\'Nenhum caso de teste cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'#\\',     class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item._id }}\\\">#{{ $index+1 }}</a></div><div class=col-4><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteTestCase(item) modal-confirm-title=\\\"\\'Remover caso de teste\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este caso de teste?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar caso de teste</a></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.edit\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Editar problema</a></div></div></div></div>\");\n$templateCache.put(\"app/solutions/edit/edit-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/create/create-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'a solução\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar nova solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest_nickname : vm.problem_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/view/view-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution></breadcrumbs><div id=view-solution><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Linguagem: {{ vm.solution.current.language.label }}</p></div></div><div class=row><div class=col-12><p>Código fonte:</p><pre>{{ vm.solution.current.source_code }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Editar solução</a></div></div></div></div>\");\n$templateCache.put(\"app/solutionsRuns/list/solutionRuns-list.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/testCases/create/create-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'o caso de teste\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><!-- for every test case --><div class=row ng-repeat=\\\"testCaseNumber in vm.form.test_cases\\\"><div class=col-12><p>#{{ vm.problem.test_cases.length + 1 + $index }} caso de teste <i class=\\\"fa fa-trash-o\\\" aria-hidden=true uib-tooltip=\\\"Remover caso de teste\\\" ng-if=\\\"vm.form.test_cases.length > 1\\\" ng-click=vm.removeTestCase($index)></i></p></div><!-- input --><div class=col-6><div class=form-group><textarea type=text name=input ng-model=testCaseNumber.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-trim=false rows=6></textarea></div></div><!-- output --><div class=col-6><div class=form-group><textarea type=text name=output ng-model=testCaseNumber.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-trim=false rows=6></textarea></div></div></div><div class=row style=\\\"margin-bottom: 16px\\\"><div class=col-12><button type=button class=\\\"btn btn-secondary\\\" ng-click=vm.addTestCase()>+</button></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=testCaseForm.$invalid>Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/solutionsRuns/view/view-solutionRun.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solutionRun.list\\', vm.contest.nickname, vm.problem.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=view-solutionRun><div class=container><div class=row><div class=col-12><h2 class=page-title>Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");\n$templateCache.put(\"app/testCases/view/view-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem test-case=vm.test_case></breadcrumbs><div id=view-test-case><div class=container><div class=row><div class=col-12><h2 class=page-title>#{{ vm.test_case.current.order }} caso de teste</h2></div></div><!-- info --><div class=row><div class=col-6><p>Entrada:</p><pre>{{ vm.test_case.current.input }}</pre></div><div class=col-6><p>Saída:</p><pre>{{ vm.test_case.current.output }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.test_case._id }}\\\">Editar caso de teste</a></div></div></div></div>\");\n$templateCache.put(\"app/users/create/create-user.html\",\"<navbar></navbar><breadcrumbs users=true new=\\\"\\'o usuário\\'\\\"></breadcrumbs><div id=create-user class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo usuário</h1></div></div><div class=row><div class=col-12><form novalidate name=userForm2 ng-submit=vm.submit(); autocomplete=off><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=new-user-username ng-model=vm.form.username class=form-control id=user-username placeholder=programming_rocks_18 ng-required=true></div><div class=form-group><label for=user-email>E-mail</label><input type=email name=new-user-email ng-model=vm.form.email class=form-control id=user-email placeholder=cool_address@gmail.com ng-required=true autocomplete=off></div><div class=form-group><label for=user-password>Senha</label><input type=password name=new-user-password ng-model=vm.form.password class=form-control id=user-password placeholder=****** ng-required=true></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'user.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/users/view-all/view-all-users.html\",\"<navbar></navbar><breadcrumbs users=true></breadcrumbs><div id=view-all-users class=container><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de usuários</h1></div></div></div><div class=\\\"container user-list\\\"><generic-list items=vm.usersList no-items-message=\\\"\\'Nenhum usuário cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\', class: \\'col-12\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-12><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }} </a><span ng-if=item.deleted_at>(Desativado em {{ item.deleted_at | date:\\'dd/MM/yyyy\\' }})</span></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'user.new\\' | url }}\\\">Criar usuário</a></div></div></div></div>\");\n$templateCache.put(\"app/users/view/view-user.html\",\"<navbar></navbar><breadcrumbs users=true user=vm.user></breadcrumbs><alert-inactive ng-if=vm.user.deleted_at msg=\\\"\\'Esta conta de usuário está inativa.\\'\\\"></alert-inactive><div id=view-user class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.user.username }}</h1></div></div><div class=row ng-if=\\\"!vm.user.deleted_at && vm.me.permissions && vm.me.permissions.delete_user\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteUser() modal-confirm-title=\\\"\\'Desativar usuário\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este usuário?\\'\\\">Desativar usuário</button></div></div></div>\");\n$templateCache.put(\"app/testCases/edit/edit-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem test-case=vm.testCase edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><div class=row><div class=col-6><div class=form-group><textarea type=text name=input ng-model=vm.form.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-trim=false rows=6></textarea></div></div><div class=col-6><div class=form-group><textarea type=text name=output ng-model=vm.form.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-trim=false rows=6></textarea></div></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.testCase._id }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=testCaseForm.$invalid>Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/components/modal/modal-confirm/modal-confirm.html\",\"<div class=modal-header><h3 class=modal-title id=modal-title>{{ $ctrl.title }}</h3></div><div class=modal-body id=modal-body><p>{{ $ctrl.body }}</p></div><div class=modal-footer><button class=\\\"btn btn-danger\\\" type=button ng-click=$ctrl.cancel()>Cancelar</button> <button class=\\\"btn btn-primary\\\" type=button ng-click=$ctrl.ok()>Confirmar</button></div>\");\n$templateCache.put(\"app/solutions/runs/list/solution-runs.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutions/runs/view/solution-run.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solution.run.list\\', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=vm.solutionsToShow test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");}]);"],"sourceRoot":"/source/"}