{"version":3,"sources":["scripts/app.js"],"names":["angular","module","ViewSolutionRunController","$routeParams","$filter","graphqlService","vm","this","init","contest","problem","solution","loading","get","name","nickname","test_cases","id","runs","number","verdict","output","test_case","input","order","contest_nickname","problem_nickname","solution_nickname","then","data","runNumber","run_number","urlFilter","$inject","controller","ViewSolutionRunsController","utilService","timestamp","copy","getRunLink","modalConfirm","$uibModal","$document","ModalConfirmLink","scope","el","attr","ctrl","callback","bind","modalInstance","open","animation","templateUrl","ModalConfirmController","controllerAs","bindToController","result","$scope","$uibModalInstance","ok","close","cancel","dismiss","directive","restrict","title","body","link","ViewCheckerRunController","routeContest","routeProblem","routeChecker","checker","checkersToShow","checkers","filter","ViewCheckerRunsController","run","ViewAllUsersController","userService","routeMe","me","usersList","user","username","deleted_at","ViewUserController","user_username","user_nickname","deleteUser","CreateUserController","$location","submit","createUser","form","email","sendEmailInvitation","path","ViewTestCaseController","testCaseService","input_text_id","output_text_id","test_case_id","loadMore","inputType","text","text_id","EditTestCaseController","fillInitialValues","testCase","input_file","inputFile","original","inputLarge","output_file","outputFile","outputLarge","currentUploadingCount","params","input_file_id","input_large","output_file_id","output_large","editTestCase","loadTestCaseFromFile","fileType","file","fileReader","FileReader","onload","evt","$apply","length","substr","onerror","readAsText","getSignedDownloadCallback","getDownloadFileSignedUrl","getSignedUploadCallback","getUploadFileSignedUrl","signedUrl","afterUploadCallback","registerFile","fileId","removeCallback","Promise","resolve","deleteFile","CreateTestCaseController","Upload","PromiseProcess","addTestCase","push","removeTestCase","index","splice","promiseProcess","forEach","inputSignedUrl","outputSignedUrl","createTestCase","exec","ViewProblemSolutionRunController","solutions","ViewProblemSolutionRunsController","reduce","prev","concat","ViewSolutionController","language","source_code","getLanguage","EditSolutionController","languages","solutionService","editSolution","loadCallback","err","content","CreateSolutionController","createSolution","EditProblemController","problemService","description","time_limit","editProblem","ViewProblemController","downloadService","checkerService","runService","getValidatedTestCases","items","item","undefined","validatedTestCases","file_url","last_edit","success","deleteSolution","problems","deleteChecker","runSolution","solution_index","validationResult","validation","status","runSolutions","cur","results","runChecker","checker_index","runCheckers","_id","getChecker","deleteTestCase","getSignedDownloadUrl","downloadProblemFile","getSignedUploadUrl","getUploadProblemFileSignedUrl","uploadProblemFile","removeProblemFile","deleteProblemFile","CreateProblemController","fillDefaultValues","createProblem","ViewAllLogsController","logService","logsList","getLogs","logs","RegularInvitationController","$route","authService","invitationService","password","getUser","user_id","error","editUser","login","reload","console","log","CreateContributorController","contributorService","contributors","some","contributor","createContributor","ViewContestController","contestService","updateLastBocaZip","bocaZipList","Array","isArray","latestBocaZip","downloadUrl","VersionId","getToken","updateListOfProblems","problemsList","canI","sort","a","b","created_at","author","bocaZip","action","obj","deleteContributor","deleteProblem","deleteContest","generateZip","problemNicknames","map","generateBocaZip","downloadZip","versionId","downloadBocaZip","download","getProblemLetter","String","fromCharCode","ViewAllContestsController","contestList","CreateContestController","createContest","singleAttachment","SingleAttachmentController","downloadFile","signedDownloadCallback","removeFile","response","uploadFile","errFiles","$errorMessages","maxSize","fileName","signedUploadCallback","reject","upload","url","method","key","Policy","fields","X-Amz-Algorithm","X-Amz-Credential","X-Amz-Date","X-Amz-Signature","headers","x-access-token","progress","Math","min","parseInt","loaded","total","customAttachText","runsList","RunsListController","solutionRuns","i","newSolutionRun","j","getLink","runResultTable","RunResultTableController","solutionRun","itemRun","testCases","indexOf","testCaseRunMap","selectRun","item_id","selectedRun","getTestCaseRun","unselectRun","testCaseRun","getVerdict","customExpectedOutput","navbar","NavbarController","getMainLinks","links","label","urlPath","active","menuCollapsed","isLogged","mainLinks","logout","toggleMobileMenu","genericList","$compile","GenericListController","list","transclude","noItemsMessage","parent","fileLoader","FileLoader","loadFile","breadcrumbs","BreadcrumbsController","contests","users","edit","extra","activeItem","pop","new","alertInactive","AlertInactiveController","msg","ViewProblemCheckerRunController","ViewProblemCheckerRunsController","ViewCheckerController","checker_nickname","current","v","EditCheckerController","editChecker","CreateCheckerController","createChecker","verdicts","service","languageValue","l","value","verdictValue","getValueFromObj","dotIndex","prefix","suffix","$http","apiUrl","getUsers","show_deleted","getUserById","post","put","urlService","frontUrls","getUrl","args","urls","arg","replace","getTestCase","query","file_name","file_id","getSolution","reverse","Date","getTime","getProblem","recursivelyBuildQuery","children","Object","keys","child","join","variables","buildQuery","popupWindow","filename","find","eq","element","append","click","remove","getContests","getContest","$q","$window","token","localStorage","setItem","setHeaderToken","removeItem","unsetHeaderToken","defaults","common","getItem","MainController","logged","LoginController","queryMessage","search","message","errorMessage","authInterceptor","$injector","interceptor","responseError","setToken","routeConfig","$routeProvider","$locationProvider","$httpProvider","interceptors","when","main","invitation","regular","view","getMe","otherwise","redirectTo","html5Mode","AppController","$rootScope","$on","event","previous","rejection","config","customNgTransclude","$element","$attrs","$transclude","minErr","startingTag","iScopeType","clone","iChildScope","$new","on","$destroy","arguments","myDate","currentDate","moment","inputDate","isBefore","diffInMinutes","diff","diffInHours","diffInDays","diffInMonths","floor","short","paramKeys","checkerRun","constant","removeNgTransclude","$provide","decorator","$delegate","shift","$templateCache"],"mappings":"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","file":"scripts/app-d42da18dbe.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('front', [\n    \t'ngAnimate',\n    \t'ngCookies',\n    \t'ngTouch',\n    \t'ngSanitize',\n    \t'ngMessages',\n    \t'ngAria',\n    \t'ngRoute',\n    \t'ui.bootstrap',\n    \t'toastr',\n        'ngFileUpload',\n        'angular-loading-bar'\n    ]);\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunController', ViewSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunController($routeParams, $filter, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.problem = {};\r\n        vm.solution = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            problem: {\r\n                name:     true,\r\n                nickname: true,\r\n\r\n                test_cases: {\r\n                    id: true\r\n                }\r\n            },\r\n\r\n            solution: {\r\n                id:       true,\r\n                name:     true,\r\n                nickname: true,\r\n\r\n                runs: {\r\n                    number:  true,\r\n                    verdict: true,\r\n                    output:  true,\r\n\r\n                    test_case: {\r\n                        id:     true,\r\n                        input:  true,\r\n                        output: true,\r\n                        order:  true\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            contest_nickname:  $routeParams.contest_nickname,\r\n            problem_nickname:  $routeParams.problem_nickname,\r\n            solution_nickname: $routeParams.solution_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.problem = data.problem[0];\r\n            vm.solution = data.solution[0];\r\n\r\n            vm.loading = false;\r\n        });\r\n\r\n        vm.runNumber = $routeParams.run_number;\r\n\r\n        vm.urlFilter = $filter('url');\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunsController', ViewSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunsController($routeParams, $filter, utilService, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.problem = {};\r\n        vm.solution = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            problem: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            solution: {\r\n                name:     true,\r\n                nickname: true,\r\n\r\n                runs: {\r\n                    number:    true,\r\n                    timestamp: true\r\n                }\r\n            }\r\n        }, {\r\n            contest_nickname:  $routeParams.contest_nickname,\r\n            problem_nickname:  $routeParams.problem_nickname,\r\n            solution_nickname: $routeParams.solution_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.problem = data.problem[0];\r\n            vm.solution = data.solution[0];\r\n\r\n            vm.runs = angular.copy(vm.solution.runs);\r\n\r\n            vm.loading = false;\r\n        });\r\n    };\r\n\r\n    vm.getRunLink = function(number) {\r\n        return $filter('url')('contest.problem.solution.run.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('modalConfirm', modalConfirm);\r\n\r\n/** @ngInject */\r\nfunction modalConfirm($uibModal, $document) {\r\n    var directive = {\r\n        restrict        : 'A',\r\n        scope           : {\r\n            callback: '&modalConfirm',\r\n            title:    '<modalConfirmTitle',\r\n            body:     '<modalConfirmBody'\r\n        },\r\n        link            : ModalConfirmLink\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmLink(scope, el, attr, ctrl) {\r\n        var callback = scope.callback();\r\n\r\n        el.bind('click', function() {\r\n            var modalInstance = $uibModal.open({\r\n                animation:        false,\r\n                templateUrl:      'app/components/modal/modal-confirm/modal-confirm.html',\r\n                controller:       ModalConfirmController,\r\n                controllerAs:     '$ctrl',\r\n                scope:            scope,\r\n                bindToController: true\r\n            });\r\n\r\n            modalInstance.result.then(function(result) {\r\n                callback();\r\n            }, function() {\r\n            });\r\n        });\r\n    }\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmController($scope, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.ok = function() {\r\n            $uibModalInstance.close();\r\n        };\r\n\r\n        vm.cancel = function() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerRunController', ViewCheckerRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerRunController($routeParams, $filter, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.checker   = routeChecker;\r\n        vm.runNumber = $routeParams.run_number;\r\n\r\n        vm.checkersToShow = vm.problem.checkers.filter(function(checker) {\r\n            return checker.nickname === vm.checker.nickname;\r\n        });\r\n\r\n        vm.urlFilter = $filter('url');\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerRunsController', ViewCheckerRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerRunsController($routeParams, $filter, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n\r\n        vm.runs = angular.copy(vm.checker.run);\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.checker.run.view', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllUsersController', ViewAllUsersController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllUsersController(userService, routeMe, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.usersList = [];\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            user: {\r\n                name:       true,\r\n                username:   true,\r\n                deleted_at: true\r\n            }\r\n        }).then(function(data) {\r\n            vm.usersList = data.user;\r\n\r\n            vm.loading = false;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewUserController', ViewUserController);\r\n\r\n/** @ngInject */\r\nfunction ViewUserController($routeParams, userService, routeMe, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.user = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            user: {\r\n                name:       true,\r\n                username:   true,\r\n                deleted_at: true\r\n            }\r\n        }, {\r\n            user_username: $routeParams.user_nickname\r\n        }).then(function(data) {\r\n            vm.user = data.user[0];\r\n\r\n            vm.loading = false;\r\n        })\r\n    };\r\n\r\n    vm.deleteUser = function() {\r\n        return function() {\r\n            userService.deleteUser(vm.user.username)\r\n            .then(function(user) {\r\n                vm.user = user;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateUserController', CreateUserController);\r\n\r\n/** @ngInject */\r\nfunction CreateUserController($location, $filter, userService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    };\r\n\r\n    vm.submit = function() {\r\n        userService.createUser({\r\n            username:            vm.form.username,\r\n            email:               vm.form.email,\r\n            sendEmailInvitation: true\r\n        }).then(function(user) {\r\n            $location.path($filter('url')('user.view', user.username));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewTestCaseController', ViewTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction ViewTestCaseController($routeParams, testCaseService, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.problem = {};\r\n        vm.test_case = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            problem: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            test_case: {\r\n                id:             true,\r\n                order:          true,\r\n                input:          true,\r\n                output:         true,\r\n                input_text_id:  true,\r\n                output_text_id: true\r\n            }\r\n        }, {\r\n            contest_nickname: $routeParams.contest_nickname,\r\n            problem_nickname: $routeParams.problem_nickname,\r\n            test_case_id:     $routeParams.test_case_id\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.problem = data.problem[0];\r\n            vm.test_case = data.test_case[0];\r\n\r\n            vm.loading = false;\r\n        });\r\n    };\r\n\r\n    vm.loadMore = function(inputType) {\r\n        vm[inputType + 'Loading'] = true;\r\n        graphqlService.get({\r\n            text: {\r\n                text: true\r\n            }\r\n        }, {\r\n            text_id: vm.test_case[inputType + '_text_id']\r\n        }).then(function(data) {\r\n            vm.test_case[inputType] = data.text[0].text;\r\n\r\n            vm[inputType + 'Loading'] = false;\r\n            vm[inputType + 'Loaded'] = true;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditTestCaseController', EditTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction EditTestCaseController($scope, $location, $filter, graphqlService, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.problem = {};\r\n        vm.testCase = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            problem: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            test_case: {\r\n                id:             true,\r\n                input:          true,\r\n                output:         true,\r\n                order:          true,\r\n                input_text_id:  true,\r\n                output_text_id: true,\r\n\r\n                input_file: {\r\n                    id:   true,\r\n                    name: true\r\n                },\r\n                output_file: {\r\n                    id:   true,\r\n                    name: true\r\n                }\r\n            }\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.problem = data.problem[0];\r\n            vm.testCase = data.test_case[0];\r\n\r\n            fillInitialValues();\r\n\r\n            vm.loading = false;\r\n        });\r\n\r\n\r\n        vm.currentUploadingCount = 0;\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            input:  vm.testCase.input,\r\n            output: vm.testCase.output\r\n        };\r\n\r\n        if(vm.testCase.input_file) {\r\n            vm.form.inputFile = {\r\n                original: true,\r\n                id:       vm.testCase.input_file.id,\r\n                name:     vm.testCase.input_file.name\r\n            };\r\n        }\r\n        if(vm.testCase.input_text_id) {\r\n            vm.form.inputLarge = true;\r\n        }\r\n\r\n        if(vm.testCase.output_file) {\r\n            vm.form.outputFile = {\r\n                original: true,\r\n                id:       vm.testCase.output_file.id,\r\n                name:     vm.testCase.output_file.name\r\n            };\r\n        }\r\n        if(vm.testCase.output_text_id) {\r\n            vm.form.outputLarge = true;\r\n        }\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        var params = {};\r\n\r\n        params.input = form.input;\r\n        if(form.inputFile) {\r\n            params.input_file_id = form.inputFile.id;\r\n        }\r\n        if(form.inputLarge) {\r\n            params.input_large = true;\r\n        }\r\n\r\n        params.output = form.output;\r\n        if(form.outputFile) {\r\n            params.output_file_id = form.outputFile.id;\r\n        }\r\n        if(form.outputLarge) {\r\n            params.output_large = true;\r\n        }\r\n\r\n        testCaseService.editTestCase(vm.contest.nickname, vm.problem.nickname, vm.testCase.id, params)\r\n        .then(function(test_case) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.testCase.view', \r\n                vm.contest.nickname, \r\n                vm.problem.nickname, \r\n                test_case.id\r\n            ));\r\n        });\r\n    };\r\n\r\n\r\n    vm.loadTestCaseFromFile = function(fileType, file) {\r\n        if(!file) {\r\n            return;\r\n        }\r\n\r\n        var fileReader = new FileReader();\r\n        fileReader.onload = function(evt) {\r\n            $scope.$apply(function () {\r\n                if(fileReader.result.length > 1024) {\r\n                    vm.form[fileType] = fileReader.result.substr(0, 1021) + '...';\r\n                    vm.form[fileType + 'Large'] = true;\r\n                } else {\r\n                    vm.form[fileType] = fileReader.result;\r\n                    vm.form[fileType + 'Large'] = false;\r\n                }\r\n            });\r\n        };\r\n        fileReader.onerror = function(evt) {\r\n        };\r\n        fileReader.readAsText(file);\r\n    };\r\n\r\n    vm.getSignedDownloadCallback = function(fileType) {\r\n        return testCaseService.getDownloadFileSignedUrl(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname, \r\n            vm.form[fileType + 'File'].id\r\n        );\r\n    };\r\n\r\n    vm.getSignedUploadCallback = function(fileType, file) {\r\n        return testCaseService.getUploadFileSignedUrl(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname,\r\n            {\r\n                name: file.name\r\n            }\r\n        ).then(function(signedUrl) {\r\n            vm.loadTestCaseFromFile(fileType, file);\r\n\r\n            vm.form[fileType + 'File'] = file;\r\n            vm.form[fileType + 'SignedUrl'] = signedUrl;\r\n            vm.currentUploadingCount++;\r\n\r\n            return signedUrl;\r\n        });\r\n    };\r\n\r\n    vm.afterUploadCallback = function(fileType, file) {\r\n        return testCaseService.registerFile(\r\n            vm.contest.nickname,\r\n            vm.problem.nickname,\r\n            file.name\r\n        ).then(function(fileId) {\r\n            vm.form[fileType + 'File'].id = fileId;\r\n\r\n            vm.currentUploadingCount--;\r\n\r\n            return true;\r\n        });\r\n    };\r\n\r\n    vm.removeCallback = function(fileType) {\r\n        if(vm.form[fileType + 'File'].original) {\r\n            delete vm.form[fileType + 'File'];\r\n            delete vm.form[fileType + 'Large'];\r\n            vm.form[fileType] = '';\r\n\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return testCaseService.deleteFile(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname, \r\n            vm.form[fileType + 'File'].id\r\n        )\r\n        .then(function(data) {\r\n            delete vm.form[fileType + 'File'];\r\n            delete vm.form[fileType + 'SignedUrl'];\r\n            delete vm.form[fileType + 'Large'];\r\n            vm.form[fileType] = '';\r\n\r\n            return data;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateTestCaseController', CreateTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction CreateTestCaseController($routeParams, $scope, $location, $filter, Upload, PromiseProcess, testCaseService, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.problem = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            problem: {\r\n                name:     true,\r\n                nickname: true,\r\n                test_cases: {\r\n                    id: true\r\n                }\r\n            }\r\n        }, {\r\n            contest_nickname: $routeParams.contest_nickname,\r\n            problem_nickname: $routeParams.problem_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.problem = data.problem[0];\r\n\r\n            vm.loading = false;\r\n        });\r\n\r\n        vm.form = {\r\n            test_cases: [{\r\n                input:  '',\r\n                output: ''\r\n            }]\r\n        };\r\n\r\n        vm.currentUploadingCount = 0;\r\n    };\r\n\r\n    vm.addTestCase = function() {\r\n        vm.form.test_cases.push({\r\n            input:  '',\r\n            output: ''\r\n        });\r\n    };\r\n\r\n    vm.removeTestCase = function(index) {\r\n        vm.form.test_cases.splice(index, 1);\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        var promiseProcess = PromiseProcess();\r\n\r\n        form.test_cases.forEach(function(test_case) {\r\n            promiseProcess.push(function() {\r\n                var params = {};\r\n\r\n                params.input = test_case.input;\r\n                if(test_case.inputSignedUrl) {\r\n                    params.input_file_id = test_case.inputFile.id;\r\n                }\r\n                if(test_case.inputLarge) {\r\n                    params.input_large = true;\r\n                }\r\n\r\n                params.output = test_case.output;\r\n                if(test_case.outputSignedUrl) {\r\n                    params.output_file_id = test_case.outputFile.id;\r\n                }\r\n                if(test_case.outputLarge) {\r\n                    params.output_large = true;\r\n                }\r\n\r\n                return testCaseService.createTestCase(vm.contest.nickname, vm.problem.nickname, params)\r\n                .then(function(test_case) {\r\n                    return test_case.id;\r\n                });\r\n            });\r\n        });\r\n\r\n        promiseProcess.exec([])\r\n        .then(function(test_case_id) {\r\n            $scope.$apply(function() {\r\n                if(form.test_cases.length == 1) {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.testCase.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname, \r\n                        test_case_id\r\n                    ));\r\n                } else {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname\r\n                    ));\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    vm.loadTestCaseFromFile = function(index, fileType, file) {\r\n        if(!file) {\r\n            return;\r\n        }\r\n\r\n        var fileReader = new FileReader();\r\n        fileReader.onload = function(evt) {\r\n            $scope.$apply(function () {\r\n                if(fileReader.result.length > 1024) {\r\n                    vm.form.test_cases[index][fileType] = fileReader.result.substr(0, 1021) + '...';\r\n                    vm.form.test_cases[index][fileType + 'Large'] = true;\r\n                } else {\r\n                    vm.form.test_cases[index][fileType] = fileReader.result;\r\n                    vm.form.test_cases[index][fileType + 'Large'] = false;\r\n                }\r\n            });\r\n        };\r\n        fileReader.onerror = function(evt) {\r\n        };\r\n        fileReader.readAsText(file);\r\n    };\r\n\r\n    vm.getSignedDownloadCallback = function(index, fileType) {\r\n        return testCaseService.getDownloadFileSignedUrl(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname, \r\n            vm.form.test_cases[index][fileType + 'File'].id\r\n        );\r\n    };\r\n\r\n    vm.getSignedUploadCallback = function(index, fileType, file) {\r\n        return testCaseService.getUploadFileSignedUrl(\r\n            vm.contest.nickname,\r\n            vm.problem.nickname,\r\n            {\r\n                name: file.name\r\n            }\r\n        ).then(function(signedUrl) {\r\n            vm.loadTestCaseFromFile(index, fileType, file);\r\n\r\n            vm.form.test_cases[index][fileType + 'File'] = file;\r\n            vm.form.test_cases[index][fileType + 'SignedUrl'] = signedUrl;\r\n            vm.currentUploadingCount++;\r\n\r\n            return signedUrl;\r\n        });\r\n    };\r\n\r\n    vm.afterUploadCallback = function(index, fileType, file) {\r\n        return testCaseService.registerFile(\r\n            vm.contest.nickname,\r\n            vm.problem.nickname,\r\n            file.name\r\n        ).then(function(fileId) {\r\n            vm.form.test_cases[index][fileType + 'File'].id = fileId;\r\n\r\n            vm.currentUploadingCount--;\r\n\r\n            return true;\r\n        });\r\n    };\r\n\r\n    vm.removeCallback = function(index, fileType) {\r\n        return testCaseService.deleteFile(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname, \r\n            vm.form.test_cases[index][fileType + 'File'].id\r\n        )\r\n        .then(function(data) {\r\n            delete vm.form.test_cases[index][fileType + 'File'];\r\n            delete vm.form.test_cases[index][fileType + 'SignedUrl'];\r\n            delete vm.form.test_cases[index][fileType + 'Large'];\r\n            vm.form.test_cases[index][fileType] = '';\r\n\r\n            return data;\r\n        });\r\n    };\r\n\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunController', ViewProblemSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunController($routeParams, $filter, utilService, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.problem = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            problem: {\r\n                name:     true,\r\n                nickname: true,\r\n\r\n                solutions: {\r\n                    id:       true,\r\n                    name:     true,\r\n                    nickname: true,\r\n\r\n                    runs: {\r\n                        number:  true,\r\n                        verdict: true,\r\n                        output:  true,\r\n\r\n                        test_case: {\r\n                            id:     true,\r\n                            input:  true,\r\n                            output: true,\r\n                            order:  true\r\n                        }\r\n                    }\r\n                },\r\n\r\n                test_cases: {\r\n                    id: true\r\n                }\r\n            }\r\n        }, {\r\n            contest_nickname: $routeParams.contest_nickname,\r\n            problem_nickname: $routeParams.problem_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.problem = data.problem[0];\r\n\r\n            vm.loading = false;\r\n        });\r\n\r\n        vm.runNumber = $routeParams.run_number;\r\n    };\r\n\r\n    vm.urlFilter = $filter('url');\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunsController', ViewProblemSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunsController($routeParams, $filter, utilService, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.problem = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            problem: {\r\n                name:     true,\r\n                nickname: true,\r\n\r\n                solutions: {\r\n                    name: true,\r\n\r\n                    runs: {\r\n                        number:    true,\r\n                        timestamp: true\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            contest_nickname: $routeParams.contest_nickname,\r\n            problem_nickname: $routeParams.problem_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.problem = data.problem[0];\r\n\r\n            vm.runs = angular.copy(vm.problem.solutions.reduce(function(prev, solution) {\r\n                return prev.concat(solution.runs);\r\n            }, []));\r\n\r\n            vm.loading = false;\r\n        });\r\n    };\r\n\r\n    vm.getRunLink = function(number) {\r\n        return $filter('url')('contest.problem.solutionRun.view', vm.contest.nickname, vm.problem.nickname, number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionController', ViewSolutionController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionController($routeParams, utilService, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.problem = {};\r\n        vm.solution = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            problem: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            solution: {\r\n                name:        true,\r\n                nickname:    true,\r\n                language:    true,\r\n                source_code: true\r\n            }\r\n        }, {\r\n            contest_nickname:  $routeParams.contest_nickname,\r\n            problem_nickname:  $routeParams.problem_nickname,\r\n            solution_nickname: $routeParams.solution_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.problem = data.problem[0];\r\n            vm.solution = data.solution[0];\r\n\r\n            vm.solution.language = utilService.getLanguage(vm.solution.language);\r\n\r\n            vm.loading = false;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditSolutionController', EditSolutionController);\r\n\r\n/** @ngInject */\r\nfunction EditSolutionController($routeParams, $location, $filter, languages, solutionService, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.problem = {};\r\n        vm.solution = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            problem: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            solution: {\r\n                name:        true,\r\n                nickname:    true,\r\n                source_code: true,\r\n                language:    true\r\n            }\r\n        }, {\r\n            contest_nickname:  $routeParams.contest_nickname,\r\n            problem_nickname:  $routeParams.problem_nickname,\r\n            solution_nickname: $routeParams.solution_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.problem = data.problem[0];\r\n            vm.solution = data.solution[0];\r\n\r\n            fillInitialValues();\r\n\r\n            vm.loading = false;\r\n        });\r\n\r\n        vm.languages = languages;\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            source_code: vm.solution.source_code,\r\n            language:    vm.solution.language\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.editSolution(vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, {\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.solution.view',\r\n                vm.contest.nickname,\r\n                vm.problem.nickname,\r\n                solution.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n\r\n    vm.loadCallback = function(err, content) {\r\n        if(err) {\r\n            return;\r\n        }\r\n\r\n        vm.form.source_code = content;\r\n    };\r\n\r\n    vm.removeCallback = function() {\r\n        delete vm.form.file;\r\n        vm.form.source_code = '';\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateSolutionController', CreateSolutionController);\r\n\r\n/** @ngInject */\r\nfunction CreateSolutionController($location, $filter, $routeParams, languages, solutionService, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.problem = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            problem: {\r\n                name:     true,\r\n                nickname: true\r\n            }\r\n        }, {\r\n            contest_nickname: $routeParams.contest_nickname,\r\n            problem_nickname: $routeParams.problem_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.problem = data.problem[0];\r\n\r\n            vm.loading = false;\r\n        });\r\n        \r\n        vm.languages = languages;\r\n\r\n        vm.form = {};\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.createSolution(vm.contest.nickname, vm.problem.nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.solution.view',\r\n                vm.contest.nickname,\r\n                vm.problem.nickname,\r\n                solution.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n\r\n    vm.loadCallback = function(err, content) {\r\n        if(err) {\r\n            return;\r\n        }\r\n\r\n        vm.form.source_code = content;\r\n    };\r\n\r\n    vm.removeCallback = function() {\r\n        delete vm.form.file;\r\n        vm.form.source_code = '';\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditProblemController', EditProblemController);\r\n\r\n/** @ngInject */\r\nfunction EditProblemController($routeParams, $location, $filter, problemService, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.problem = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            problem: {\r\n                name:        true,\r\n                nickname:    true,\r\n                description: true,\r\n                time_limit:  true\r\n            }\r\n        }, {\r\n            contest_nickname: $routeParams.contest_nickname,\r\n            problem_nickname: $routeParams.problem_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.problem = data.problem[0];\r\n\r\n            fillInitialValues();\r\n\r\n            vm.loading = false;\r\n        });\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            name:        vm.problem.name,\r\n            description: vm.problem.description,\r\n            time_limit:  vm.problem.time_limit\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.editProblem(vm.contest.nickname, vm.problem.nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.view',\r\n                vm.contest.nickname,\r\n                problem.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemController', ViewProblemController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemController($routeParams, downloadService, graphqlService, problemService, solutionService, checkerService, testCaseService, runService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.problem = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            },\r\n\r\n            problem: {\r\n                name:        true,\r\n                nickname:    true,\r\n                description: true,\r\n                file_url:    true,\r\n                time_limit:  true,\r\n                deleted_at:  true,\r\n\r\n                solutions: {\r\n                    name:      true,\r\n                    nickname:  true,\r\n                    last_edit: true,\r\n\r\n                    runs: {\r\n                        id:        true,\r\n                        number:    true,\r\n                        success:   true,\r\n                        verdict:   true,\r\n                        timestamp: true,\r\n\r\n                        test_case: {\r\n                            id: true\r\n                        }\r\n                    }\r\n                },\r\n\r\n                test_cases: {\r\n                    id:        true,\r\n                    last_edit: true\r\n                }\r\n\r\n                // checkers\r\n            }\r\n        }, {\r\n            contest_nickname: $routeParams.contest_nickname,\r\n            problem_nickname: $routeParams.problem_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.problem = data.problem[0];\r\n\r\n            getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n            getValidatedTestCases(vm.problem, []);//vm.problem.checkers);\r\n\r\n            vm.loading = false;\r\n        });\r\n\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n    };\r\n\r\n    vm.deleteSolution = function(solution) {\r\n        return function() {\r\n            solutionService.deleteSolution(vm.contest_nickname, vm.problem_nickname, solution.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteChecker = function(checker) {\r\n        return function() {\r\n            checkerService.deleteChecker(vm.contest_nickname, vm.problem_nickname, checker.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.runSolution = function(solution_index) {\r\n        var validationResult;\r\n        vm.problem.solutions[solution_index].validation = {\r\n            status: 'waiting'\r\n        };\r\n\r\n        runService.runSolutions(vm.contest.nickname, vm.problem.nickname, {\r\n            solutions:  [ vm.problem.solutions[solution_index].nickname ],\r\n            test_cases: vm.problem.test_cases.reduce(function(prev, cur) {\r\n                prev.push(cur.id);\r\n                return prev;\r\n            }, [])\r\n        })\r\n        .then(function(results) {\r\n            validationResult = results;\r\n\r\n            return graphqlService.get({\r\n                solution: {\r\n                    name:      true,\r\n                    nickname:  true,\r\n                    last_edit: true,\r\n\r\n                    runs: {\r\n                        id:        true,\r\n                        number:    true,\r\n                        success:   true,\r\n                        verdict:   true,\r\n                        timestamp: true,\r\n\r\n                        test_case: {\r\n                            id: true\r\n                        }\r\n                    }\r\n                }\r\n            }, {\r\n                contest_nickname:  vm.contest.nickname,\r\n                problem_nickname:  vm.problem.nickname,\r\n                solution_nickname: vm.problem.solutions[solution_index].nickname\r\n            }).then(function(data) {\r\n                return data.solution[0];\r\n            });\r\n        })\r\n        .then(function(solution) {\r\n            vm.problem.solutions[solution_index] = solution;\r\n            getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n\r\n            vm.problem.solutions[solution_index].validation = {\r\n                status: 'done',\r\n                result: validationResult\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.runChecker = function(checker_index) {\r\n        var validationResult;\r\n        vm.problem.checkers[checker_index].validation = {\r\n            status: 'waiting'\r\n        };\r\n\r\n        runService.runCheckers(vm.contest.nickname, vm.problem.nickname, {\r\n            checkers:   [ vm.problem.checkers[checker_index].nickname ],\r\n            test_cases: vm.problem.test_cases.reduce(function(prev, cur) {\r\n                prev.push(cur._id);\r\n                return prev;\r\n            }, [])\r\n        })\r\n        .then(function(results) {\r\n            validationResult = results;\r\n\r\n            return checkerService.getChecker(\r\n                vm.contest_nickname, \r\n                vm.problem_nickname, \r\n                vm.problem.checkers[checker_index].nickname\r\n            );\r\n        })\r\n        .then(function(checker) {\r\n            vm.problem.checkers[checker_index] = checker;\r\n            getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n\r\n            vm.problem.checkers[checker_index].validation = {\r\n                status: 'done',\r\n                result: validationResult\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.deleteTestCase = function(test_case) {\r\n        return function() {\r\n            testCaseService.deleteTestCase(vm.contest_nickname, vm.problem_nickname, test_case.id)\r\n            .then(function(success) {\r\n                return;\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    function getValidatedTestCases(problem, items) {\r\n        items.forEach(function(item) {\r\n            if(item.validatedTestCases !== undefined) {\r\n                return;\r\n            }\r\n\r\n            item.validatedTestCases = runService.getValidatedTestCases(problem, item.runs, item);\r\n        });\r\n    }\r\n\r\n\r\n    vm.getSignedDownloadUrl = function() {\r\n        return problemService.downloadProblemFile(vm.contest.nickname, vm.problem.nickname);\r\n    };\r\n\r\n    vm.getSignedUploadUrl = function(file) {\r\n        return problemService.getUploadProblemFileSignedUrl(vm.contest.nickname, vm.problem.nickname, {\r\n            name: file.name\r\n        });\r\n    };\r\n\r\n    vm.uploadProblemFile = function(file) {\r\n        return problemService.registerFile(vm.contest.nickname, vm.problem.nickname, file.name);\r\n    };\r\n\r\n    vm.removeProblemFile = function() {\r\n        return problemService.deleteProblemFile(vm.contest.nickname, vm.problem.nickname);\r\n    };\r\n\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateProblemController', CreateProblemController);\r\n\r\n/** @ngInject */\r\nfunction CreateProblemController($location, $filter, $routeParams, problemService, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true\r\n            }\r\n        }, {\r\n            contest_nickname: $routeParams.contest_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n\r\n            vm.loading = false;\r\n        });\r\n\r\n        fillDefaultValues();\r\n    };\r\n\r\n    function fillDefaultValues() {\r\n        vm.form = {};\r\n        vm.form.time_limit = 1;\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.createProblem(vm.contest.nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.view',\r\n                vm.contest.nickname,\r\n                problem.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllLogsController', ViewAllLogsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllLogsController(logService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.logsList = [];\r\n\r\n        logService.getLogs()\r\n        .then(function(logs) {\r\n            vm.logsList = logs;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('RegularInvitationController', RegularInvitationController);\r\n\r\n/** @ngInject */\r\nfunction RegularInvitationController($location, $routeParams, $filter, $route, authService, invitationService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.user = {};\r\n        vm.loading = true;\r\n\r\n        invitationService.getUser($routeParams.user_id)\r\n        .then(function(user) {\r\n            vm.user = user;\r\n\r\n            fillDefaultValues(vm.user);\r\n\r\n            vm.loading = false;\r\n        })\r\n        .catch(function(error) {\r\n            $location.path($filter('url', 'main'));\r\n        });\r\n    };\r\n\r\n    function fillDefaultValues(user) {\r\n        vm.form = {\r\n            email:    user.email,\r\n            username: user.username || '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        invitationService.editUser(vm.user.id, {\r\n            username: form.username,\r\n            password: form.password\r\n        })\r\n        .then(function(user) {\r\n            return authService.login(form.username, form.password);\r\n        })\r\n        .then(function(data) {\r\n            $route.reload();\r\n            $location.path($filter('url', 'main'));\r\n        })\r\n        .catch(function(err) {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContributorController', CreateContributorController);\r\n\r\n/** @ngInject */\r\nfunction CreateContributorController($routeParams, $location, $filter, contributorService, graphqlService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tvm.contest = {};\r\n        vm.usersList = [];\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:         true,\r\n                nickname:     true,\r\n\r\n                contributors: {\r\n                    name:     true,\r\n                    username: true\r\n                }\r\n            },\r\n\r\n            user: {\r\n                id:       true,\r\n                name:     true,\r\n                username: true\r\n            }\r\n        }, {\r\n            contest_nickname: $routeParams.contest_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n            vm.usersList = data.user.filter(function(user) {\r\n                return !vm.contest.contributors.some(function(contributor) {\r\n                    return contributor.username === user.username;\r\n                });\r\n            });\r\n\r\n            vm.loading = false;\r\n        });\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contributorService.createContributor(vm.contest.nickname, {\r\n            user_id: vm.form.user.id\r\n        })\r\n        .then(function(contest) {\r\n            $location.path($filter('url')(\r\n                'contest.view',\r\n                vm.contest.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewContestController', ViewContestController);\r\n\r\n/** @ngInject */\r\nfunction ViewContestController($routeParams, authService, downloadService, contestService, contributorService, problemService, graphqlService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me      = routeMe;\r\n        vm.contest = {};\r\n        vm.loading = true;\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:       true,\r\n                nickname:   true,\r\n                deleted_at: true,\r\n                created_at: true,\r\n\r\n                author: {\r\n                    name:     true,\r\n                    username: true\r\n                },\r\n\r\n                problems: {\r\n                    name:       true,\r\n                    nickname:   true,\r\n                    deleted_at: true,\r\n                    order:      true\r\n                },\r\n\r\n                contributors: {\r\n                    name:     true,\r\n                    username: true\r\n                }\r\n            }\r\n        }, {\r\n            contest_nickname: $routeParams.contest_nickname\r\n        }).then(function(data) {\r\n            vm.contest = data.contest[0];\r\n\r\n            updateListOfProblems(vm.contest.problems);\r\n            updateLastBocaZip(vm.contest.bocaZip);\r\n\r\n            vm.loading = false;\r\n        });\r\n    };\r\n\r\n    vm.canI = function(action, obj) {\r\n        switch(action) {\r\n            case 'delete_contributor':\r\n                return vm.contest.author._id == vm.me._id;\r\n            case 'delete_problem':\r\n                return vm.contest.author._id == vm.me._id;\r\n            default:\r\n                return false;\r\n        }\r\n    };\r\n\r\n    vm.deleteContributor = function(contributor) {\r\n        return function() {\r\n            contributorService.deleteContributor(vm.contest.nickname, contributor._id)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteProblem = function(problem) {\r\n        return function() {\r\n            problemService.deleteProblem(vm.contest.nickname, problem.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                updateListOfProblems(vm.contest.problems);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteContest = function() {\r\n        return function() {\r\n            contestService.deleteContest(vm.contest.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    function updateLastBocaZip(bocaZipList) {\r\n        if(!Array.isArray(bocaZipList) || !bocaZipList.length) {\r\n            return vm.latestBocaZip = null;\r\n        }\r\n\r\n        vm.latestBocaZip = bocaZipList[ bocaZipList.length-1 ];\r\n        vm.latestBocaZip.downloadUrl = 'http://localhost:3010/api/v1' +\r\n            '/contest/' + vm.contest.nickname + \r\n            '/boca/download' +\r\n            '?VersionId=' + vm.latestBocaZip.VersionId + \r\n            '&token=' + authService.getToken();\r\n\r\n        // last file edition on the contest\r\n\r\n        return vm.latestBocaZip;\r\n    }\r\n\r\n    function updateListOfProblems(problems) {\r\n        vm.problemsList = problems.filter(function(problem) {\r\n            return !problem.deleted_at || vm.canI('delete_problem');\r\n        }).sort(function(a, b) {\r\n            return a.order - b.order;\r\n        });\r\n        return vm.problemsList;\r\n    }\r\n\r\n    vm.generateZip = function() {\r\n        var problemNicknames = vm.contest.problems.map(function(problem) {\r\n            return problem.nickname;\r\n        });\r\n\r\n        contestService.generateBocaZip(vm.contest.nickname, {\r\n            problems: problemNicknames\r\n        })\r\n            .then(function(bocaZip) {\r\n                vm.contest.bocaZip.push(bocaZip);\r\n                updateLastBocaZip(vm.contest.bocaZip);\r\n            })\r\n            .catch(function(err) {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    vm.downloadZip = function(versionId) {\r\n        contestService.downloadBocaZip(vm.contest.nickname, versionId)\r\n            .then(function(signedUrl) {\r\n                downloadService.download(signedUrl);\r\n            })\r\n            .catch(function(err) {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    vm.getProblemLetter = function(order) {\r\n        return String.fromCharCode(64 + order);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllContestsController', ViewAllContestsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllContestsController(graphqlService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.contestList = [];\r\n\r\n        graphqlService.get({\r\n            contest: {\r\n                name:     true,\r\n                nickname: true,\r\n                author: {\r\n                    username: true\r\n                },\r\n                created_at: true\r\n            }\r\n        }).then(function(data) {\r\n            vm.contestList = data.contest;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContestController', CreateContestController);\r\n\r\n/** @ngInject */\r\nfunction CreateContestController($location, $filter, contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contestService.createContest({\r\n            name: vm.form.name\r\n        }).then(function(contest) {\r\n            $location.path($filter('url')(\r\n                'contest.view',\r\n                contest.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('singleAttachment', singleAttachment);\r\n\r\n/** @ngInject */\r\nfunction singleAttachment() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/single-attachment/single-attachment.html',\r\n        scope           : {\r\n            // the file object (must have a name property).\r\n            file: '<',\r\n\r\n            // text to show on 'attach' button.\r\n            customAttachText: '<',\r\n\r\n            // callbacks\r\n            signedDownloadCallback: '&',\r\n            signedUploadCallback:   '&',\r\n            afterUploadCallback:    '&',\r\n            removeCallback:         '&'\r\n        },\r\n        controller      : SingleAttachmentController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function SingleAttachmentController(downloadService, Upload) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.loading = false;\r\n        };\r\n\r\n        vm.downloadFile = function() {\r\n            vm.loading = true;\r\n\r\n            vm.signedDownloadCallback()\r\n                .then(function(signedUrl) {\r\n                    vm.loading = false;\r\n\r\n                    downloadService.download(signedUrl, false, vm.file.name);\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível baixar este arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.removeFile = function() {\r\n            vm.loading = true;\r\n\r\n            vm.removeCallback()\r\n                .then(function(response) {\r\n                    vm.loading = false;\r\n\r\n                    vm.file = undefined;\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível excluir este arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.uploadFile = function(file, errFiles) {\r\n            if(errFiles && errFiles[0]) {\r\n                errFiles = errFiles[0];\r\n\r\n                if(errFiles.$errorMessages && errFiles.$errorMessages.maxSize) {\r\n                    return vm.err = 'O arquivo selecionado ultrapassa o limite de 4MB.';\r\n                }\r\n\r\n                return vm.err = 'Erro desconhecido.';\r\n            }\r\n\r\n            if(!file) {\r\n                return;\r\n            }\r\n            var fileName = file.name;\r\n\r\n            vm.loading = true;\r\n            vm.signedUploadCallback({ file: file })\r\n                .then(function(signedUrl) {\r\n                    return new Promise(function(resolve, reject) {\r\n                        Upload.upload({\r\n                            url:    signedUrl.url,\r\n                            method: 'POST',\r\n                            data:   {\r\n                                key:                signedUrl.key,\r\n                                Policy:             signedUrl.fields.Policy,\r\n                                'X-Amz-Algorithm':  signedUrl.fields['X-Amz-Algorithm'],\r\n                                'X-Amz-Credential': signedUrl.fields['X-Amz-Credential'],\r\n                                'X-Amz-Date':       signedUrl.fields['X-Amz-Date'],\r\n                                'X-Amz-Signature':  signedUrl.fields['X-Amz-Signature'],\r\n                                file:               file\r\n                            },\r\n                            headers: {\r\n                                'x-access-token': undefined\r\n                            }\r\n                        })\r\n                        .then(function finishCallback(response) {\r\n                            return resolve(response.data);\r\n                        }, function errCallback(err) {\r\n                            return reject(err);\r\n                        }, function progressCallback(evt) {\r\n                            file.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n                        });\r\n                    });\r\n                })\r\n                .then(function(result) {\r\n                    return vm.afterUploadCallback({ file: file });\r\n                })\r\n                .then(function(response) {\r\n                    vm.loading = false;\r\n\r\n                    vm.file = {\r\n                        name: fileName\r\n                    };\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível fazer upload deste arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runsList', runsList);\r\n\r\n/** @ngInject */\r\nfunction runsList() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/runs-list/runs-list.html',\r\n        scope           : {\r\n            runs:    '<',\r\n            getLink: '<'\r\n        },\r\n        controller      : RunsListController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunsListController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.solutionRuns = [];\r\n            for(var i=0; i<vm.runs.length; i++) {\r\n                var newSolutionRun = {\r\n                    number:    vm.runs[i].number,\r\n                    runs:      [ vm.runs[i] ],\r\n                    timestamp: vm.runs[i].timestamp\r\n                };\r\n\r\n                for(var j=vm.runs.length-1; j>i; j--) {\r\n                    if(vm.runs[i].number === vm.runs[j].number) {\r\n                        newSolutionRun.runs.push(vm.runs[j]);\r\n                        vm.runs.splice(j, 1);\r\n                    }\r\n                }\r\n\r\n                vm.solutionRuns.push(newSolutionRun);\r\n            }\r\n            vm.solutionRuns.sort(function(a, b) {\r\n                return b.number - a.number;\r\n            });\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runResultTable', runResultTable);\r\n\r\n/** @ngInject */\r\nfunction runResultTable() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/run-result-table/run-result-table.html',\r\n        scope           : {\r\n            problem:   '<',\r\n            solutions: '<',\r\n            checkers:  '<',\r\n            testCases: '<',\r\n            runNumber: '<',\r\n\r\n            customExpectedOutput: '<'\r\n        },\r\n        controller      : RunResultTableController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunResultTableController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            // if not defined which solutions should be shown, \r\n            // it will show all the solutions that were run.\r\n            if(typeof vm.solutions === 'boolean' && vm.solutions) {\r\n                vm.items = vm.problem.solutions.filter(function(solution) {\r\n                    return solution.runs.some(function(solutionRun) {\r\n                        return solutionRun.number == vm.runNumber;\r\n                    });\r\n                });\r\n            } else if(Array.isArray(vm.solutions)) {\r\n                vm.items = vm.solutions;\r\n            }\r\n\r\n            // if not defined which checkers should be shown, \r\n            // it will show all the checkers that were run.\r\n            // if(typeof vm.checkers === 'boolean' && vm.checkers) {\r\n            //     vm.items = vm.problem.checkers.filter(function(solution) {\r\n            //         return solution.run.some(function(solutionRun) {\r\n            //             return solutionRun.run_number == vm.runNumber;\r\n            //         });\r\n            //     });\r\n            // } else if(Array.isArray(vm.checkers)) {\r\n            //     vm.items = vm.checkers;\r\n            // }\r\n\r\n            // all the runs with the run_number.\r\n            vm.runs = vm.items.reduce(function(prev, item) {\r\n                return prev.concat(\r\n                    item.runs\r\n                    .filter(function(itemRun) {\r\n                        return itemRun.number == vm.runNumber;\r\n                    })\r\n                    .map(function(itemRun) {\r\n                        itemRun.item = item;\r\n\r\n                        return itemRun;\r\n                    })\r\n                );\r\n            }, []);\r\n\r\n            // all the test_cases that were tested.\r\n            vm.testCases = vm.runs.reduce(function(prev, solutionRun) {\r\n                if(prev.indexOf(solutionRun.test_case) === -1) {\r\n                    prev.push(solutionRun.test_case);\r\n                }\r\n                return prev;\r\n            }, []);\r\n\r\n            // map with all the item/test_case results.\r\n            vm.testCaseRunMap = {};\r\n        };\r\n\r\n        vm.selectRun = function(runs, item_id, test_case_id) {\r\n            vm.selectedRun = vm.getTestCaseRun(runs, item_id, test_case_id);\r\n        };\r\n\r\n        vm.unselectRun = function() {\r\n            vm.selectedRun = null;\r\n        };\r\n\r\n        vm.getTestCaseRun = function(runs, item_id, test_case_id) {\r\n            if(vm.testCaseRunMap[item_id + '-' + test_case_id] === undefined) {\r\n                var testCaseRun = runs.filter(function(run) {\r\n                    return run.item.id  == item_id\r\n                        && run.test_case.id == test_case_id;\r\n                })[0];\r\n\r\n                testCaseRun.verdict = utilService.getVerdict(testCaseRun.verdict);\r\n\r\n                vm.testCaseRunMap[item_id + '-' + test_case_id] = testCaseRun;\r\n            }\r\n\r\n            return vm.testCaseRunMap[item_id + '-' + test_case_id];\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .directive('navbar', navbar);\n\n/** @ngInject */\nfunction navbar() {\n    var directive = {\n        restrict        : 'E',\n        templateUrl     : 'app/components/navbar/navbar.html',\n        scope           : {},\n        controller      : NavbarController,\n        controllerAs    : 'vm',\n        bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController($route, $location, $scope, $filter, authService) {\n        var vm = this;\n\n        vm.init = function() {\n            vm.menuCollapsed = true;\n\n            vm.isLogged = authService.isLogged();\n\n            vm.mainLinks = getMainLinks();\n        };\n\n        function getMainLinks() {\n            var links = [{\n                label:   'Home',\n                urlPath: 'main' \n            }, {\n                label:   'Contests',\n                urlPath: 'contest.list'\n            }, {\n                label:   'Usuários',\n                urlPath: 'user.list'\n            }];\n\n            links.forEach(function(link) {\n                link.active = $location.path() == $filter('url')(link.urlPath);\n            });\n\n            return links;\n        }\n\n        vm.logout = function() {\n            authService.logout();\n            $location.path('/');\n            $route.reload();\n        };\n\n        vm.toggleMobileMenu = function() {\n            vm.menuCollapsed = !vm.menuCollapsed;\n        };\n\n        vm.init();\n        return vm;\n    }\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('genericList', genericList);\r\n\r\n/** @ngInject */\r\nfunction genericList($compile) {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/generic-list/generic-list.html',\r\n        transclude      : true,\r\n        controller      : GenericListController,\r\n        controllerAs    : 'list',\r\n        scope: {\r\n            items:          '<', // list\r\n            noItemsMessage: '<', // string\r\n            headers:        '<', // list\r\n            parent:         '<'  // controller\r\n        },\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function GenericListController() {\r\n        var list = this;\r\n\r\n        list.init = function() {\r\n        };\r\n\r\n        list.init();\r\n        return list;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('fileLoader', fileLoader);\r\n\r\n/** @ngInject */\r\nfunction fileLoader() {\r\n    var directive = {\r\n        restrict:    'E',\r\n        templateUrl: 'app/components/file-loader/file-loader.html',\r\n        scope: {\r\n            // the file object (must have a name property).\r\n            file: '<',\r\n\r\n            // text to show on 'attach' button.\r\n            customAttachText: '<',\r\n\r\n            // callbacks\r\n            loadCallback:   '&',\r\n            removeCallback: '&'\r\n        },\r\n        controller:       FileLoader,\r\n        controllerAs:     'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function FileLoader($scope) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.loading = false;\r\n        };\r\n\r\n        vm.removeFile = function() {\r\n            vm.file = undefined;\r\n\r\n            vm.removeCallback();\r\n        };\r\n\r\n        vm.loadFile = function(file, errFiles) {\r\n            if(errFiles && errFiles[0]) {\r\n                errFiles = errFiles[0];\r\n\r\n                if(errFiles.$errorMessages && errFiles.$errorMessages.maxSize) {\r\n                    return vm.err = 'O arquivo selecionado ultrapassa o limite de 4MB.';\r\n                }\r\n\r\n                return vm.err = 'Erro desconhecido.';\r\n            }\r\n\r\n            if(!file) {\r\n                return;\r\n            }\r\n            vm.file = file;\r\n\r\n            var fileReader = new FileReader();\r\n            fileReader.onload = function(evt) {\r\n                $scope.$apply(function() {\r\n                    vm.loadCallback({\r\n                        err:     null,\r\n                        file:    vm.file,\r\n                        content: fileReader.result\r\n                    });\r\n                });\r\n            };\r\n            fileReader.onerror = function(evt) {\r\n                $scope.$apply(function() {\r\n                    vm.err = 'Error on loading file.';\r\n\r\n                    vm.loadCallback({\r\n                        err: vm.err\r\n                    });\r\n                });\r\n            };\r\n            fileReader.readAsText(vm.file);\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('breadcrumbs', breadcrumbs);\r\n\r\n/** @ngInject */\r\nfunction breadcrumbs() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/breadcrumbs/breadcrumbs.html',\r\n        scope           : {\r\n            new:      '<', // string of what is being added\r\n            edit:     '<', // true or false\r\n\r\n            users:    '<', // true or false\r\n            user:     '<',\r\n\r\n            contests: '<',\r\n            contest:  '<',\r\n            problem:  '<',\r\n            solution: '<',\r\n            checker:  '<',\r\n            testCase: '<',\r\n\r\n            extra:    '<'  // list of extra labels/urls (for those who don't fit a pattern (yet))\r\n        },\r\n        controller      : BreadcrumbsController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function BreadcrumbsController($filter) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.items = [];\r\n\r\n            // contests list\r\n            if(vm.contests) {\r\n                vm.items.push({\r\n                    label: 'Contests',\r\n                    url:   $filter('url')('contest.list')\r\n                });\r\n\r\n                // contest X\r\n                if(vm.contest) {\r\n                    vm.items.push({\r\n                        label: vm.contest.name,\r\n                        url:   $filter('url')('contest.view', vm.contest.nickname)\r\n                    });\r\n\r\n                    // problem Y\r\n                    if(vm.problem) {\r\n                        vm.items.push({\r\n                            label: vm.problem.name,\r\n                            url:   $filter('url')('contest.problem.view', vm.contest.nickname, vm.problem.nickname)\r\n                        });\r\n\r\n                        // solution Z\r\n                        if(vm.solution) {\r\n                            vm.items.push({\r\n                                label: vm.solution.name,\r\n                                url:   $filter('url')('contest.problem.solution.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\r\n                            });\r\n                        }\r\n\r\n                        // checker Q\r\n                        if(vm.checker) {\r\n                            vm.items.push({\r\n                                label: vm.checker.name,\r\n                                url:   $filter('url')('contest.problem.checker.view', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname)\r\n                            });\r\n                        }\r\n\r\n                        // testcase W\r\n                        if(vm.testCase) {\r\n                            var order;\r\n                            if(vm.testCase) {\r\n                                order = vm.testCase.order;\r\n                            } else {\r\n                                order = 1;\r\n                            }\r\n\r\n                            vm.items.push({\r\n                                label: '#' + order + ' caso de teste',\r\n                                url:   $filter('url')('contest.problem.testCase.view', vm.contest.nickname, vm.problem.nickname, vm.testCase.id)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // users list\r\n            if(vm.users) {\r\n                vm.items.push({\r\n                    label: 'Usuários',\r\n                    url:   $filter('url')('user.list')\r\n                });\r\n\r\n                // user X\r\n                if(vm.user) {\r\n                    vm.items.push({\r\n                        label: vm.user.username,\r\n                        url:   $filter('url')('user.view')\r\n                    });\r\n                }\r\n            }\r\n\r\n            // is an editing page?\r\n            if(vm.edit) {\r\n                vm.items.push({\r\n                    label: 'Editar'\r\n                });\r\n            }\r\n\r\n            // is a creating page?\r\n            if(vm.new) {\r\n                vm.items.push({\r\n                    label: 'Nov' + vm.new\r\n                });\r\n            }\r\n\r\n            if(vm.extra && vm.extra.length) {\r\n                vm.extra.forEach(function(extra) {\r\n                    vm.items.push({\r\n                        label: extra.label,\r\n                        url:   extra.url\r\n                    });\r\n                });\r\n            }\r\n\r\n            // the last item is the selected one\r\n            if(vm.items.length) {\r\n                vm.activeItem = vm.items.pop();\r\n            }\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('alertInactive', alertInactive);\r\n\r\n/** @ngInject */\r\nfunction alertInactive() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/alert-inactive/alert-inactive.html',\r\n        scope           : {\r\n            msg: '<'\r\n        },\r\n        controller      : AlertInactiveController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function AlertInactiveController() {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemCheckerRunController', ViewProblemCheckerRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemCheckerRunController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.runNumber = $routeParams.run_number;\r\n    };\r\n\r\n    vm.urlFilter = $filter('url');\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemCheckerRunsController', ViewProblemCheckerRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemCheckerRunsController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n\r\n        vm.runs = angular.copy(vm.problem.checkers.reduce(function(prev, checker) {\r\n            return prev.concat(checker.run);\r\n        }, []));\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.checkerRun.view', vm.contest.nickname, vm.problem.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerController', ViewCheckerController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerController($routeParams, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.checker_nickname = $routeParams.checker_nickname;\r\n\r\n        vm.checker.current = vm.checker.v[vm.checker.v.length-1];\r\n        vm.checker.current.language = utilService.getLanguage(vm.checker.current.language);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditCheckerController', EditCheckerController);\r\n\r\n/** @ngInject */\r\nfunction EditCheckerController($location, $filter, languages, checkerService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n        vm.checker.current = vm.checker.v[ vm.checker.v.length-1 ];\r\n\r\n        vm.languages = languages;\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            source_code: vm.checker.current.source_code,\r\n            language:    vm.checker.current.language\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        checkerService.editChecker(vm.contest.nickname, vm.problem.nickname, vm.checker.nickname, {\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(checker) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.checker.view',\r\n                vm.contest.nickname,\r\n                vm.problem.nickname,\r\n                checker.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n\r\n    vm.loadCallback = function(err, content) {\r\n        if(err) {\r\n            return;\r\n        }\r\n\r\n        vm.form.source_code = content;\r\n    };\r\n\r\n    vm.removeCallback = function() {\r\n        delete vm.form.file;\r\n        vm.form.source_code = '';\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateCheckerController', CreateCheckerController);\r\n\r\n/** @ngInject */\r\nfunction CreateCheckerController($location, $filter, $routeParams, languages, checkerService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        \r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.languages = languages;\r\n        vm.form = {};\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        checkerService.createChecker(vm.contest_nickname, vm.problem_nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(checker) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.checker.view',\r\n                vm.contest_nickname,\r\n                vm.problem_nickname,\r\n                checker.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n\r\n    vm.loadCallback = function(err, content) {\r\n        if(err) {\r\n            return;\r\n        }\r\n\r\n        vm.form.source_code = content;\r\n    };\r\n\r\n    vm.removeCallback = function() {\r\n        delete vm.form.file;\r\n        vm.form.source_code = '';\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('utilService', utilService);\r\n\r\n/** @ngInject */\r\nfunction utilService(languages, verdicts) {\r\n    var service = this;\r\n\r\n    service.getLanguage = function(languageValue) {\r\n        return languages.filter(function(l) {\r\n            return l.value == languageValue;\r\n        })[0] || languages[0];\r\n    };\r\n\r\n    service.getVerdict = function(verdictValue) {\r\n        return verdicts.filter(function(v) {\r\n            return v.value == verdictValue;\r\n        })[0] || verdicts[0];\r\n    };\r\n\r\n    service.getValueFromObj = function(obj, path) {\r\n    \tvar dotIndex = path.indexOf('.');\r\n    \t\r\n    \tif(dotIndex !== -1) {\r\n    \t\tvar prefix = path.substr(0, dotIndex);\r\n    \t\tvar suffix = path.substr(dotIndex+1);\r\n\r\n    \t\tif(typeof obj[prefix] !== 'object') {\r\n    \t\t\treturn null;\r\n    \t\t}\r\n\r\n    \t\treturn service.getValueFromObj(obj[prefix], suffix);\r\n    \t} else {\r\n    \t\treturn obj[path];\r\n    \t}\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('userService', userService);\r\n\r\n/** @ngInject */\r\nfunction userService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getUsers = function(show_deleted) {\r\n        return $http.get(apiUrl + 'user' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.users;\r\n        });\r\n    };\r\n\r\n    service.getUser = function(username) {\r\n        return $http.get(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.getUserById = function(_id) {\r\n        return $http.get(apiUrl + 'user/' + _id)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.createUser = function(user) {\r\n        return $http.post(apiUrl + 'user', user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.editUser = function(username, user) {\r\n        return $http.put(apiUrl + 'user/' + username, user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.deleteUser = function(username) {\r\n        return $http.delete(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('urlService', urlService);\r\n\r\n/** @ngInject */\r\nfunction urlService(frontUrls, utilService) {\r\n    var service = this;\r\n\r\n    service.getUrl = function(path, args) {\r\n        var url = utilService.getValueFromObj(frontUrls.urls, path);\r\n        if(!url) {\r\n            return null;\r\n        }\r\n\r\n        if(args.length) {\r\n            args.forEach(function(arg) {\r\n                url = url.replace(/:\\w*/, arg);\r\n            });\r\n        }\r\n\r\n        return url;\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('testCaseService', testCaseService);\r\n\r\n/** @ngInject */\r\nfunction testCaseService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getTestCase = function(contest_nickname, problem_nickname, test_case_id, query) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id,\r\n            {\r\n                params: query\r\n            }\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.createTestCase = function(contest_nickname, problem_nickname, test_case) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case', \r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.editTestCase = function(contest_nickname, problem_nickname, test_case_id, test_case) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id,\r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.deleteTestCase = function(contest_nickname, problem_nickname, test_case_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.success;\r\n        });\r\n    };\r\n\r\n\r\n    service.getDownloadFileSignedUrl = function(contest_nickname, problem_nickname, file_name) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/file/' + file_name\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.getUploadFileSignedUrl = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/file',\r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.deleteFile = function(contest_nickname, problem_nickname, file_name) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/file/' + file_name\r\n        )\r\n        .then(function(result) {\r\n            return result.data.success;\r\n        });\r\n    };\r\n\r\n    service.registerFile = function(contest_nickname, problem_nickname, file_name) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/file/' + file_name\r\n        )\r\n        .then(function(result) {\r\n            return result.data.file_id;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('solutionService', solutionService);\r\n\r\n/** @ngInject */\r\nfunction solutionService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.createSolution = function(contest_nickname, problem_nickname, solution) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution', \r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.editSolution = function(contest_nickname, problem_nickname, solution_nickname, solution) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname,\r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.deleteSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('runService', runService);\r\n\r\n/** @ngInject */\r\nfunction runService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.runSolutions = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/run/solutions', \r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.results;\r\n        });\r\n    };\r\n\r\n    service.runCheckers = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/run/checkers', \r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.results;\r\n        });\r\n    };\r\n\r\n    service.getValidatedTestCases = function(problem, runs, item) {\r\n        var test_cases = angular.copy(problem.test_cases),\r\n            runs       = angular.copy(runs).reverse();\r\n\r\n        runs.forEach(function(run) {\r\n            if(new Date(item.last_edit).getTime() >= new Date(run.timestamp).getTime()) {\r\n                return;\r\n            }\r\n\r\n            for(var i=0; i<test_cases.length; i++) {\r\n                if(test_cases[i].id == run.test_case.id) {\r\n                    if(new Date(test_cases[i].last_edit).getTime() < new Date(run.timestamp).getTime()\r\n                    && run.verdict == 'Accepted') {\r\n                        test_cases.splice(i, 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        return problem.test_cases.length - test_cases.length;\r\n    };\r\n\r\n    function hasCriticalAfter(versions, timestamp) {\r\n        return versions.some(function(version) {\r\n            return version.critical && moment(version.timestamp).isAfter(timestamp);\r\n        });\r\n    }\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('problemService', problemService);\r\n\r\n/** @ngInject */\r\nfunction problemService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.createProblem = function(contest_nickname, problem) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem', \r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.editProblem = function(contest_nickname, problem_nickname, problem) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname,\r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.deleteProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n\r\n    service.downloadProblemFile = function(contest_nickname, problem_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file'\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.getUploadProblemFileSignedUrl = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file',\r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.registerFile = function(contest_nickname, problem_nickname, file_name) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file/' + file_name\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.deleteProblemFile = function(contest_nickname, problem_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file'\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('logService', logService);\r\n\r\n/** @ngInject */\r\nfunction logService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getLogs = function() {\r\n        return $http.get(apiUrl + 'log')\r\n        .then(function(result) {\r\n            return result.data.logs;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('invitationService', invitationService);\r\n\r\n/** @ngInject */\r\nfunction invitationService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getUser = function(user_id) {\r\n        return $http.get(apiUrl + 'invitation/user/' + user_id)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.editUser = function(user_id, data) {\r\n        return $http.put(apiUrl + 'invitation/user/' + user_id, data)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('graphqlService', graphqlService);\r\n\r\n/** @ngInject */\r\nfunction graphqlService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.get = function(obj, variables) {\r\n        return $http.post(apiUrl + 'graphql', service.buildQuery(obj, variables))\r\n        .then(function(result) {\r\n            return result.data.data;\r\n        });\r\n    };\r\n\r\n    service.buildQuery = function(obj, variables) {\r\n        return {\r\n            query:     recursivelyBuildQuery(obj),\r\n            variables: variables || {}\r\n        };\r\n    };\r\n\r\n    function recursivelyBuildQuery(obj) {\r\n        var children = [];\r\n\r\n        Object.keys(obj).forEach(function(key) {\r\n            var child = obj[key];\r\n\r\n            if(typeof child === 'boolean' && child) {\r\n                children.push(key);\r\n            } else if(typeof child === 'object') {\r\n                children.push(key + ' ' + recursivelyBuildQuery(child));\r\n            }\r\n        });\r\n\r\n        return '{ ' + children.join(', ') + ' }';\r\n    }\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('downloadService', downloadService);\r\n\r\n/** @ngInject */\r\nfunction downloadService($document) {\r\n    var service = this;\r\n\r\n    service.download = function(url, popupWindow, filename) {\r\n\t\tvar body = $document.find('body').eq(0);\r\n\t\tvar link = angular.element(\r\n\t\t\t'<a ' +\r\n\t\t\t'id=\"temp_link\" ' +\r\n\t\t\t(filename ? 'download=\"' + filename + '\" ' : 'download ') +\r\n\t\t\t'href=\"' + url + '\" ' +\r\n\t\t\t'style=\"display: none;\" ' +\r\n\t\t\t(popupWindow ? 'target=\"_blank\" ' : '') +\r\n\t\t\t'>link</a>'\r\n\t\t);\r\n\t\tbody.append(link);\r\n\t\tlink[0].click();\r\n\t\tlink.remove();\r\n\t};\r\n\r\n    return service;\r\n}\r\n\r\n})();\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contributorService', contributorService);\r\n\r\n/** @ngInject */\r\nfunction contributorService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.createContributor = function(contest_nickname, user) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor',\r\n            user\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContributor = function(contest_nickname, user_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor/' + user_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contestService', contestService);\r\n\r\n/** @ngInject */\r\nfunction contestService($http, apiUrl, graphqlService) {\r\n    var service = this;\r\n\r\n    service.getContests = function(fields) {\r\n        return $http.post(apiUrl + 'graphql', graphqlService.buildQuery({\r\n            contest: fields\r\n        })).then(function(result) {\r\n            return result.data.data.contest;\r\n        });\r\n    };\r\n\r\n    service.getContest = function(nickname) {\r\n        return $http.get(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.createContest = function(contest) {\r\n        return $http.post(apiUrl + 'contest', contest)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContest = function(nickname) {\r\n        return $http.delete(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.generateBocaZip = function(nickname, data) {\r\n        return $http.post(apiUrl + 'contest/' + nickname + '/boca', data)\r\n        .then(function(result) {\r\n            return result.data.bocaZip;\r\n        });\r\n    };\r\n\r\n    service.downloadBocaZip = function(nickname, versionId) {\r\n        return $http.get(apiUrl + 'contest/' + nickname + '/boca/download')\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('checkerService', checkerService);\r\n\r\n/** @ngInject */\r\nfunction checkerService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getChecker = function(contest_nickname, problem_nickname, checker_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.createChecker = function(contest_nickname, problem_nickname, checker) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker', \r\n            checker\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.editChecker = function(contest_nickname, problem_nickname, checker_nickname, checker) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname,\r\n            checker\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.deleteChecker = function(contest_nickname, problem_nickname, checker_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authService', authService);\r\n\r\n/** @ngInject */\r\nfunction authService($q, $http, $window, apiUrl) {\r\n    var service = this;\r\n\r\n    service.login = function(username, password) {\r\n        return $http.post(apiUrl + 'login', {\r\n        \tusername: username,\r\n        \tpassword: password\r\n        })\r\n            .then(function(response) {\r\n                var token = response.data.token;\r\n\r\n                $window.localStorage.setItem('token', token);\r\n                service.setHeaderToken(token);\r\n\r\n                return $q.resolve(response.data);\r\n            });\r\n    };\r\n\r\n    service.logout = function() {\r\n        $window.localStorage.removeItem('token');\r\n        service.unsetHeaderToken();\r\n    };\r\n\r\n    service.setHeaderToken = function(token) {\r\n        $http.defaults.headers.common['x-access-token'] = token;\r\n    };\r\n\r\n    service.unsetHeaderToken = function() {\r\n        delete $http.defaults.headers.common['x-access-token'];\r\n    };\r\n\r\n    service.me = function() {\r\n        return $http.get(apiUrl + 'me')\r\n        .then(function(response) {\r\n            return response.data.me;\r\n        });\r\n    };\r\n\r\n    service.isLogged = function() {\r\n        return !!$window.localStorage.getItem('token');\r\n    };\r\n\r\n    service.getToken = function() {\r\n        return $window.localStorage.getItem('token');\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .controller('MainController', MainController);\n\n/** @ngInject */\nfunction MainController(authService) {\n    var vm = this;\n\n    vm.init = function() {\n    \tvm.logged = authService.isLogged();\n    };\n\n    vm.init();\n    return vm;\n}\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('LoginController', LoginController);\r\n\r\n/** @ngInject */\r\nfunction LoginController($route, $filter, $location, authService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tif(authService.isLogged()) {\r\n    \t\t$location.path($filter('url', 'main'));\r\n    \t}\r\n\r\n        var queryMessage = $location.search().message;\r\n        if(queryMessage) {\r\n            switch(queryMessage) {\r\n                case 'access_denied':\r\n                    vm.errorMessage = 'Acesso negado.';\r\n                    break;\r\n\r\n                case 'token_expired':\r\n                    vm.errorMessage = 'Acesso expirado. Refaça seu login.';\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.submit = function() {\r\n    \tauthService.login(vm.form.username, vm.form.password)\r\n    \t.then(function(data) {\r\n    \t\t$route.reload();\r\n    \t})\r\n    \t.catch(function(err) {\r\n    \t\tconsole.log(err);\r\n    \t});\r\n    };\r\n\r\n    vm.init();\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authInterceptor', authInterceptor);\r\n\r\n/** @ngInject */\r\nfunction authInterceptor($q, $injector) {\r\n    var interceptor = this;\r\n\r\n    interceptor.responseError = function(response) {\r\n        if(response.status == 500 && response.data.error == \"TokenExpiredError: jwt expired\") {\r\n            $injector.get('authService').logout();\r\n            return $q.reject(response);\r\n        } else {\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n\r\n    return interceptor;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n\t.module('front')\n\t.run(setToken);\n\n/** @ngInject */\nfunction setToken($http, $window, authService) {\n    var token = $window.localStorage.getItem('token');\n\n    if(token) {\n    \tauthService.setHeaderToken(token);\n    }\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .config(routeConfig)\n  .controller('AppController', AppController);\n\n/** @ngInject */\nfunction routeConfig(frontUrls, $routeProvider, $locationProvider, $httpProvider) {\n    $httpProvider.interceptors.push('authInterceptor');\n\n\n    $routeProvider\n\n    /* main */\n    .when(frontUrls.urls.main, {\n        templateUrl:  'app/main/main.html',\n        controller:   'MainController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n\n\n    /* login */\n    .when(frontUrls.urls.login, {\n        templateUrl:  'app/login/login.html',\n        controller:   'LoginController',\n        controllerAs: 'vm'\n    })\n\n\n    /* invitations */\n    .when(frontUrls.urls.invitation.regular, {\n        templateUrl:  'app/invitations/regular/regular-invitation.html',\n        controller:   'RegularInvitationController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n\n\n    /* logs */\n    // .when(frontUrls.urls.log, {\n    //     templateUrl : 'app/logs/view-all/view-all-logs.html',\n    //     controller  : 'ViewAllLogsController',\n    //     controllerAs: 'vm',\n    //     resolve     : {\n    //         routeMe: getMe\n    //     }\n    // })\n\n\n    /* users */\n    .when(frontUrls.urls.user.new, {\n        templateUrl : 'app/users/create/create-user.html',\n        controller  : 'CreateUserController',\n        controllerAs: 'vm'\n    })\n    .when(frontUrls.urls.user.view, {\n        templateUrl:  'app/users/view/view-user.html',\n        controller:   'ViewUserController',\n        controllerAs: 'vm',\n        resolve: {\n            routeMe: getMe\n        }\n    })\n    .when(frontUrls.urls.user.list, {\n        templateUrl:  'app/users/view-all/view-all-users.html',\n        controller:   'ViewAllUsersController',\n        controllerAs: 'vm',\n        resolve: {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contests */\n    .when(frontUrls.urls.contest.new, {\n        templateUrl:  'app/contests/create/create-contest.html',\n        controller:   'CreateContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n    .when(frontUrls.urls.contest.view, {\n        templateUrl:  'app/contests/view/view-contest.html',\n        controller:   'ViewContestController',\n        controllerAs: 'vm',\n        resolve: {\n            routeMe: getMe\n        }\n    })\n    .when(frontUrls.urls.contest.list, {\n        templateUrl:  'app/contests/view-all/view-all-contests.html',\n        controller:   'ViewAllContestsController',\n        controllerAs: 'vm',\n        resolve: {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contributors */\n    .when(frontUrls.urls.contest.contributor.new, {\n        templateUrl:  'app/contributors/create/create-contributor.html',\n        controller:   'CreateContributorController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n\n\n    /* problems */\n    .when(frontUrls.urls.contest.problem.new, {\n        templateUrl:  'app/problems/create/create-problem.html',\n        controller:   'CreateProblemController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n    .when(frontUrls.urls.contest.problem.view, {\n        templateUrl:  'app/problems/view/view-problem.html',\n        controller:   'ViewProblemController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n    .when(frontUrls.urls.contest.problem.edit, {\n        templateUrl:  'app/problems/edit/edit-problem.html',\n        controller:   'EditProblemController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n\n\n    /* solutions */\n    .when(frontUrls.urls.contest.problem.solution.new, {\n        templateUrl:  'app/solutions/create/create-solution.html',\n        controller:   'CreateSolutionController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.view, {\n        templateUrl:  'app/solutions/view/view-solution.html',\n        controller:   'ViewSolutionController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.edit, {\n        templateUrl:  'app/solutions/edit/edit-solution.html',\n        controller:   'EditSolutionController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n\n\n    /* checkers */\n    // .when(frontUrls.urls.contest.problem.checker.new, {\n    //     templateUrl : 'app/checkers/create/create-checker.html',\n    //     controller  : 'CreateCheckerController',\n    //     controllerAs: 'vm',\n    //     resolve     : {\n    //         routeContest: getContest,\n    //         routeProblem: getProblem\n    //     }\n    // })\n    // .when(frontUrls.urls.contest.problem.checker.view, {\n    //     templateUrl : 'app/checkers/view/view-checker.html',\n    //     controller  : 'ViewCheckerController',\n    //     controllerAs: 'vm',\n    //     resolve     : {\n    //         routeContest: getContest,\n    //         routeProblem: getProblem,\n    //         routeChecker: getChecker\n    //     }\n    // })\n    // .when(frontUrls.urls.contest.problem.checker.edit, {\n    //     templateUrl : 'app/checkers/edit/edit-checker.html',\n    //     controller  : 'EditCheckerController',\n    //     controllerAs: 'vm',\n    //     resolve     : {\n    //         routeContest: getContest,\n    //         routeProblem: getProblem,\n    //         routeChecker: getChecker\n    //     }\n    // })\n\n\n    /* test cases */\n    .when(frontUrls.urls.contest.problem.testCase.new, {\n        templateUrl:  'app/testCases/create/create-testCase.html',\n        controller:   'CreateTestCaseController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.view, {\n        templateUrl:  'app/testCases/view/view-testCase.html',\n        controller:   'ViewTestCaseController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.edit, {\n        templateUrl:  'app/testCases/edit/edit-testCase.html',\n        controller:   'EditTestCaseController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n\n\n    /* solution runs */\n    .when(frontUrls.urls.contest.problem.solution.run.list, {\n        templateUrl:  'app/solutions/runs/list/solution-runs.html',\n        controller:   'ViewSolutionRunsController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.run.view, {\n        templateUrl:  'app/solutions/runs/view/solution-run.html',\n        controller:   'ViewSolutionRunController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.list, {\n        templateUrl:  'app/solutionsRuns/list/solutionRuns-list.html',\n        controller:   'ViewProblemSolutionRunsController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.view, {\n        templateUrl:  'app/solutionsRuns/view/view-solutionRun.html',\n        controller:   'ViewProblemSolutionRunController',\n        controllerAs: 'vm',\n        resolve: {\n        }\n    })\n\n\n    /* checker runs */\n    // .when(frontUrls.urls.contest.problem.checker.run.list, {\n    //     templateUrl : 'app/checkers/runs/list/checker-runs.html',\n    //     controller  : 'ViewCheckerRunsController',\n    //     controllerAs: 'vm',\n    //     resolve     : {\n    //         routeContest: getContest,\n    //         routeProblem: getProblem,\n    //         routeChecker: getChecker\n    //     }\n    // })\n    // .when(frontUrls.urls.contest.problem.checker.run.view, {\n    //     templateUrl : 'app/checkers/runs/view/checker-run.html',\n    //     controller  : 'ViewCheckerRunController',\n    //     controllerAs: 'vm',\n    //     resolve     : {\n    //         routeContest: getContest,\n    //         routeProblem: getProblem,\n    //         routeChecker: getChecker\n    //     }\n    // })\n    // .when(frontUrls.urls.contest.problem.checkerRun.list, {\n    //     templateUrl : 'app/checkersRuns/list/checkerRuns-list.html',\n    //     controller  : 'ViewProblemCheckerRunsController',\n    //     controllerAs: 'vm',\n    //     resolve     : {\n    //         routeContest: getContest,\n    //         routeProblem: getProblem\n    //     }\n    // })\n    // .when(frontUrls.urls.contest.problem.checkerRun.view, {\n    //     templateUrl : 'app/checkersRuns/view/view-checkerRun.html',\n    //     controller  : 'ViewProblemCheckerRunController',\n    //     controllerAs: 'vm',\n    //     resolve     : {\n    //         routeContest: getContest,\n    //         routeProblem: getProblem\n    //     }\n    // })\n\n\n    .otherwise({\n        redirectTo: '/'\n    });\n\n\n    $locationProvider.html5Mode(true);\n}\n\n/** @ngInject */\nfunction AppController($rootScope, $location, $filter) {\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n        if(rejection && rejection.data && rejection.data.error) {\n            switch(rejection.data.error) {\n                case 'Access denied':\n                    $location.search('message', 'access_denied');\n                    $location.path($filter('url')('login'));\n                    break;\n                \n                case 'TokenExpiredError: jwt expired':\n                    $location.search('message', 'token_expired');\n                    $location.path($filter('url')('login'));\n                    return;\n\n                default:\n                    $location.path($filter('url')('login'));\n                    return;\n            }\n        }\n\n        $location.path($filter('url')('login'));\n    });\n}\n\nfunction getMe(authService) {\n    return authService.me();\n}\n\nfunction getUser($route, frontUrls, userService) {\n    return userService.getUser(\n        $route.current.params[frontUrls.paramKeys.user]\n    );\n}\n\nfunction getUserById($route, frontUrls, userService) {\n    return userService.getUserById(\n        $route.current.params[frontUrls.paramKeys.user_id]\n    );\n}\n\nfunction getContest($route, frontUrls, contestService) {\n    return contestService.getContest(\n        $route.current.params[frontUrls.paramKeys.contest]\n    );\n}\n\nfunction getProblem($route, frontUrls, problemService) {\n    return problemService.getProblem(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem]\n    );\n}\n\nfunction getSolution($route, frontUrls, solutionService) {\n    return solutionService.getSolution(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.solution]\n    );\n}\n\nfunction getChecker($route, frontUrls, checkerService) {\n    return checkerService.getChecker(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.checker]\n    );\n}\n\nfunction getTestCase($route, frontUrls, testCaseService) {\n    return testCaseService.getTestCase(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.testCase]\n    );\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.directive('ngTransclude', customNgTransclude);\r\n\r\n/** @ngInject */\r\nfunction customNgTransclude() {\r\n    return {\r\n        restrict: 'EAC',\r\n        link: function($scope, $element, $attrs, controller, $transclude) {\r\n            if(!$transclude) {\r\n                throw minErr('ngTransclude')(\r\n\t\t\t\t\t'orphan',\r\n\t\t\t\t\t'Illegal use of ngTransclude directive in the template! ' +\r\n\t\t\t\t\t'No parent directive that requires a transclusion found. ' +\r\n\t\t\t\t\t'Element: {0}',\r\n\t\t\t\t\tstartingTag($element)\r\n\t\t\t\t);\r\n            }\r\n\r\n            var iScopeType = $attrs['ngTransclude'] || 'sibling';\r\n\r\n            switch(iScopeType) {\r\n                case 'sibling':\r\n                    $transclude(function(clone) {\r\n                        $element.append(clone);\r\n                    });\r\n                    break;\r\n\r\n                case 'parent':\r\n                    $transclude($scope, function(clone) {\r\n                        if(clone.length) {\r\n                            $element.append(clone);\r\n                        }\r\n                    });\r\n                    break;\r\n\r\n                case 'child':\r\n                    var iChildScope = $scope.$new();\r\n                    $transclude(iChildScope, function(clone) {\r\n                        $element.append(clone);\r\n                        $element.on('$destroy', function() {\r\n                            iChildScope.$destroy();\r\n                        });\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.filter('url', url)\r\n\t.filter('myDate', myDate);\r\n\r\n/** @ngInject */\r\nfunction url(urlService) {\r\n\treturn function(input) {\r\n\t\tvar args = [];\r\n\t\tfor(var i=1; i<arguments.length; i++) {\r\n\t\t\targs.push(arguments[i]);\r\n\t\t}\r\n\r\n\t\treturn urlService.getUrl(input, args);\r\n\t};\r\n}\r\n\r\n/** @ngInject */\r\nfunction myDate() {\r\n\treturn function(input) {\r\n\t\tvar currentDate = moment(),\r\n\t\t\tinputDate   = moment(input);\r\n\r\n\t\tif(inputDate.isBefore(currentDate)) {\r\n\t\t\tvar diffInMinutes = currentDate.diff(inputDate, 'minutes', true),\r\n\t\t\t\tdiffInHours   = currentDate.diff(inputDate, 'hours', true),\r\n\t\t\t\tdiffInDays    = currentDate.diff(inputDate, 'days', true),\r\n\t\t\t\tdiffInMonths  = currentDate.diff(inputDate, 'months', true);\r\n\r\n\t\t\tif(diffInMinutes <= 1) {\r\n\t\t\t\treturn 'agora';\r\n\t\t\t} else if(diffInHours < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMinutes) + ' minuto' + (diffInMinutes >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInDays < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInHours) + ' hora' + (diffInHours >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInMonths < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInDays) + ' dia' + (diffInDays >= 2 ? 's' : '');\r\n\t\t\t} else {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMonths) + ' mes' + (diffInMonths >= 2 ? 's' : '');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t}\r\n\t}\r\n}\r\n\r\n})();\r\n\n/* global moment:false */\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .constant('moment', moment)\n    .constant('PromiseProcess', promiseProcess)\n    // .constant('apiUrl', 'http://localhost:3010/api/v1/')\n    .constant('apiUrl', 'http://contestbuilder.ddns.net/api/v1/')\n    .constant('languages', languages())\n    .constant('verdicts', verdicts())\n    .constant('frontUrls', frontUrls());\n\n// list of languages\nfunction languages() {\n\treturn [{\n\t\tlabel: 'Outra',\n\t\tvalue: 'other'\n\t}, {\n\t\tlabel: 'C++',\n\t\tvalue: 'cpp'\n\t}, {\n\t\tlabel: 'C',\n\t\tvalue: 'c'\n\t}];\n}\n\n// list of verdicts\nfunction verdicts() {\n\treturn [{\n\t\tlabel: 'Other',\n\t\tshort: 'Other',\n\t\tvalue: 'Other'\n\t}, {\n\t\tlabel: 'Accepted',\n\t\tshort: 'AC',\n\t\tvalue: 'Accepted'\n\t}, {\n\t\tlabel: 'Presentation error',\n\t\tshort: 'PE',\n\t\tvalue: 'Presentation error'\n\t}, {\n\t\tlabel: 'Wrong answer',\n\t\tshort: 'WA',\n\t\tvalue: 'Wrong answer'\n\t}, {\n\t\tlabel: 'Time limit exceeded',\n\t\tshort: 'TLE',\n\t\tvalue: 'Time limit exceeded'\n\t}, {\n\t\tlabel: 'Compilation error',\n\t\tshort: 'CE',\n\t\tvalue: 'Compilation error'\n\t}];\n}\n\n// list of urls\nfunction frontUrls() {\n\tvar paramKeys = {\n\t\tuser:        'user_nickname',\n\t\tcontest:     'contest_nickname',\n\t\tproblem:     'problem_nickname',\n\t\tsolution:    'solution_nickname',\n\t\tchecker:     'checker_nickname',\n\t\ttestCase:    'test_case_id',\n\t\tsolutionRun: 'run_number',\n\t\tuser_id:     'user_id'\n\t};\n\n\tvar urls = {\n\t\tmain:  '/',\n\t\tlogin: '/login',\n\t\tlog:   '/logs',\n\t\tuser:  {\n\t\t\tnew:  '/users/new',\n\t\t\tview: '/users/:user_nickname',\n\t\t\tlist: '/users'\n\t\t},\n\t\tinvitation: {\n\t\t\tregular: '/invitation/:user_id'\n\t\t},\n\t\tcontest: {\n\t\t\tnew:  '/contests/new',\n\t\t\tview: '/contests/:contest_nickname',\n\t\t\tlist: '/contests',\n\n\t\t\tcontributor: {\n\t\t\t\tnew: '/contests/:contest_nickname/contributors/new'\n\t\t\t},\n\n\t\t\tproblem: {\n\t\t\t\tnew:  '/contests/:contest_nickname/problems/new',\n\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname',\n\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/edit',\n\n\t\t\t\tsolution: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/solutions/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/edit',\n\n\t\t\t\t\trun: {\n\t\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs',\n\t\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs/:run_number'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tchecker: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/checkers/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/edit',\n\n\t\t\t\t\trun: {\n\t\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/runs',\n\t\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/runs/:run_number'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\ttestCase: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/test_cases/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id/edit'\n\t\t\t\t},\n\n\t\t\t\tsolutionRun: {\n\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs/:run_number'\n\t\t\t\t},\n\n\t\t\t\tcheckerRun: {\n\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/checker_runs',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checker_runs/:run_number'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\tparamKeys: paramKeys,\n\t\turls:      urls\n\t};\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .config(removeNgTransclude);\n\n/** @ngInject */\nfunction removeNgTransclude($provide) {\n    $provide.decorator('ngTranscludeDirective', ['$delegate', function ($delegate) {\n        $delegate.shift();\n        return $delegate;\n    }]);\n}\n\n})();\n\nangular.module(\"front\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/login/login.html\",\"<navbar></navbar><alert-inactive ng-if=vm.errorMessage msg=vm.errorMessage></alert-inactive><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Login</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=loginForm ng-submit=vm.submit();><div class=form-group><input type=text name=username ng-model=vm.form.username class=form-control id=login-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><input type=password name=password ng-model=vm.form.password class=form-control id=login-password placeholder=Senha ng-required=true></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=loginForm.$invalid>Login</button></form></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<navbar></navbar><div class=jumbotron><div class=container><h1 class=display-3>Olá!</h1><p>Seja bem vindo ao Contest Builder.</p><p ng-if=!vm.logged><a class=\\\"btn btn-primary btn-lg\\\" href=/login role=button>Faça login &raquo;</a></p></div></div><div class=container><div class=row><div class=col-12><p>Divirta-se.</p></div></div></div>\");\n$templateCache.put(\"app/components/alert-inactive/alert-inactive.html\",\"<div id=alert-inactive class=\\\"alert alert-danger\\\" role=alert><strong>{{ vm.msg }}</strong></div>\");\n$templateCache.put(\"app/components/generic-list/generic-list.html\",\"<div class=generic-list><div ng-if=list.items.length class=\\\"row header-row\\\"><div ng-repeat=\\\"header in list.headers\\\" class=header-col ng-class=header.class>{{ header.label }}</div></div><div ng-repeat=\\\"item in list.items\\\" ng-transclude=parent class=item></div><div ng-if=!list.items.length class=row><div class=col-12><p>{{ list.noItemsMessage }}</p></div></div></div>\");\n$templateCache.put(\"app/components/breadcrumbs/breadcrumbs.html\",\"<div class=container><div class=row><div class=col-12><nav class=breadcrumb><a ng-repeat=\\\"item in vm.items\\\" class=breadcrumb-item ng-href=\\\"{{ item.url }}\\\">{{ item.label }}</a> <span class=\\\"breadcrumb-item active\\\">{{ vm.activeItem.label }}</span></nav></div></div></div>\");\n$templateCache.put(\"app/components/file-loader/file-loader.html\",\"<button ng-if=!vm.file type=button ngf-select=\\\"vm.loadFile($file, $invalidFiles)\\\" accept=\\\"\\'*\\'\\\" ngf-max-size=4MB class=\\\"btn btn-link\\\">{{ vm.customAttachText ? vm.customAttachText : \\'Adicionar arquivo\\' }}</button> <span ng-if=vm.file>{{ vm.file.name }}</span> <span ng-if=vm.file ng-click=vm.removeFile();>x</span> <img ng-if=vm.loading src=assets/images/loading.gif><p ng-if=vm.err>{{ vm.err }}</p>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-toggleable-md navbar-inverse bg-inverse\\\"><button class=\\\"navbar-toggler navbar-toggler-right\\\" type=button data-toggle=collapse data-target=#navbarsExampleDefault aria-controls=navbarsExampleDefault aria-expanded=false aria-label=\\\"Toggle navigation\\\" ng-click=vm.toggleMobileMenu()><span class=navbar-toggler-icon></span></button> <a class=navbar-brand href=/ >Contest Builder</a><div class=\\\"collapse navbar-collapse\\\" id=navbarsExampleDefault ng-class=\\\"{ \\'show\\': !vm.menuCollapsed }\\\"><ul class=\\\"navbar-nav mr-auto\\\"><li ng-repeat=\\\"link in vm.mainLinks\\\" class=nav-item ng-class=\\\"{ \\'active\\': link.active }\\\"><a class=nav-link ng-href=\\\"{{ link.urlPath | url }}\\\">{{ link.label }}</a></li></ul><div class=\\\"my-2 my-md-0\\\"><a ng-if=!vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" role=button ng-href=\\\"{{ \\'login\\' | url }}\\\">Login</a> <button ng-if=vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=button ng-click=vm.logout();>Logout</button></div></div></nav>\");\n$templateCache.put(\"app/components/run-result-table/run-result-table.html\",\"<div class=row><div class=col-12><table class=\\\"table table-sm\\\"><thead><tr><th></th><th ng-repeat=\\\"test_case in vm.testCases\\\">#{{ test_case.order }}</th></tr></thead><tbody><tr ng-repeat=\\\"item in vm.items\\\"><td>{{ item.name }}</td><td ng-repeat=\\\"test_case in vm.testCases\\\"><span ng-if=\\\"vm.getTestCaseRun(vm.runs, item.id, test_case.id)\\\" ng-click=\\\"vm.selectRun(vm.runs, item.id, test_case.id)\\\">{{ vm.getTestCaseRun(vm.runs, item.id, test_case.id).verdict.short }}</span></td></tr></tbody></table></div></div><div class=row ng-if=vm.selectedRun><div class=col-12><p><span><strong>{{ vm.selectedRun.item.name }} / #{{ vm.selectedRun.test_case.order }}</strong> </span><span style=\\\"float: right\\\"><i class=\\\"fa fa-times\\\" aria-hidden=true ng-click=vm.unselectRun()></i></span></p><p><strong>Veredito:</strong> {{ vm.selectedRun.verdict.label }}</p></div><div class=col-6><p><strong>Saída esperada:</strong></p><pre>{{ vm.customExpectedOutput ? vm.customExpectedOutput : vm.selectedRun.test_case.output }}</pre></div><div class=col-6><p><strong>Saída:</strong></p><pre>{{ vm.selectedRun.output }}</pre></div></div><div class=row ng-if=!vm.selectedRun><div class=col-12><p>Selecione um item da tabela para ver mais detalhes.</p></div></div>\");\n$templateCache.put(\"app/components/runs-list/runs-list.html\",\"<div class=runs-list><div class=row ng-repeat=\\\"run in vm.solutionRuns\\\"><div class=col-12><p><a ng-href=\\\"{{ vm.getLink(run.number) }}\\\">Execução {{ run.number }}</a> - {{ run.timestamp | myDate }}</p></div></div></div>\");\n$templateCache.put(\"app/components/single-attachment/single-attachment.html\",\"<button ng-if=!vm.file type=button ngf-select=\\\"vm.uploadFile($file, $invalidFiles)\\\" accept=\\\"\\'*\\'\\\" ngf-max-size=4MB class=\\\"btn btn-link\\\">{{ vm.customAttachText ? vm.customAttachText : \\'Adicionar arquivo\\' }}</button> <button ng-if=vm.file type=button class=\\\"btn btn-link\\\" ng-click=vm.downloadFile();>{{ vm.file.name }}</button> <span ng-if=vm.file ng-click=vm.removeFile();>x</span> <img ng-if=vm.loading src=assets/images/loading.gif><p ng-if=vm.err>{{ vm.err }}</p>\");\n$templateCache.put(\"app/contests/create/create-contest.html\",\"<navbar></navbar><breadcrumbs contests=true new=\\\"\\'o contest\\'\\\"></breadcrumbs><div id=create-contest class=container><div class=row><div class=col-12><h1 class=page-title>Criar contest</h1></div></div><div class=row><div class=\\\"col-sm-12 col-lg-6\\\"><form novalidate name=contestForm ng-submit=vm.submit();><div class=form-group><label for=contest-name>Nome</label><input type=text name=name ng-model=vm.form.name class=form-control id=contest-name placeholder=\\\"Super Contest 2017\\\" ng-required=true></div><div class=form-group><label class=form-label-static for=contest-name>Autor</label><p>{{ vm.me.username }}</p></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"{{ \\'contest.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=contestForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/contests/view/view-contest.html\",\"<navbar></navbar><alert-inactive ng-if=vm.contest.deleted_at msg=\\\"\\'Este contest está inativo.\\'\\\"></alert-inactive><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest></breadcrumbs><div id=view-contest><div class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.contest.name }}</h1></div></div><!-- info --><div class=row><div class=col-12><p>Autor: <a ng-href=\\\"{{ \\'user.view\\' | url : vm.contest.author.username }}\\\">{{ vm.contest.author.username }}</a></p></div></div><div class=row><div class=col-12><p>Criado em: <span>{{ vm.contest.created_at | date:\\'dd/MM/yyyy\\' }}</span></p></div></div></div><!-- contributors list --><div class=\\\"container contributors-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Contribuidores:</h4><a ng-if=!vm.contest.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.contributor.new\\' | url : vm.contest.nickname }}\\\">Adicionar contribuidor</a></div></div><generic-list items=vm.contest.contributors no-items-message=\\\"\\'Nenhum contribuidor cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }}</a></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_contributor\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteContributor(item) modal-confirm-title=\\\"\\'Remover contribuidor\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este contribuidor?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- problems list --><div class=\\\"container problems-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Problemas:</h4><a ng-if=!vm.contest.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.new\\' | url : vm.contest.nickname }}\\\">Adicionar problema</a></div></div><generic-list items=vm.problemsList no-items-message=\\\"\\'Nenhum problema cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.view\\' | url : list.parent.contest.nickname : item.nickname }}\\\">{{ list.parent.getProblemLetter(item.order) + \\' - \\' + item.name }}</a> <span ng-if=item.deleted_at>(Removido em {{ item.deleted_at | date:\\'dd/MM/yyyy\\' }})</span></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_problem\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteProblem(item) modal-confirm-title=\\\"\\'Remover problema\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este problema?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- boca zip list --><!-- <div class=\\\"container boca-list\\\">\\r\\n\t\t<div class=\\\"row\\\">\\r\\n\t\t\t<div class=\\\"col-12\\\">\\r\\n\t\t\t\t<h4>Exportar arquivos:</h4>\\r\\n\t\t\t</div>\\r\\n\t\t</div>\\r\\n\\r\\n\t\t<div class=\\\"row\\\" ng-if=\\\"!vm.latestBocaZip\\\">\\r\\n\t\t\t<div class=\\\"col-12\\\">\\r\\n\t\t\t\t<p>Contest ainda não foi exportado.</p>\\r\\n\t\t\t</div>\\r\\n\t\t</div>\\r\\n\\r\\n\t\t<div class=\\\"row\\\" ng-if=\\\"vm.latestBocaZip\\\">\\r\\n\t\t\t<div class=\\\"col-12\\\">\\r\\n\t\t\t\t<p>Data da última exportação: {{ vm.latestBocaZip.timestamp | date : \\'dd/MM/yyyy HH:mm\\' }}</p>\\r\\n\t\t\t</div>\\r\\n\t\t</div>\\r\\n\\r\\n\t\t<div class=\\\"row\\\">\\r\\n\t\t\t<div class=\\\"col-12\\\">\\r\\n\t\t\t\t<button\\r\\n\t\t\t\t\ttype=\\\"button\\\"\\r\\n\t\t\t\t\tclass=\\\"btn btn-primary\\\"\\r\\n\t\t\t\t\tng-click=\\\"vm.generateZip();\\\"\\r\\n\t\t\t\t>\\r\\n\t\t\t\t\t<i class=\\\"fa fa-file-archive-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\t\t\t\t\tExportar\\r\\n\t\t\t\t</button>\\r\\n\\r\\n\t\t\t\t<button\\r\\n\t\t\t\t\tng-if=\\\"vm.latestBocaZip\\\"\\r\\n\t\t\t\t\ttype=\\\"button\\\"\\r\\n\t\t\t\t\tclass=\\\"btn btn-primary\\\"\\r\\n\t\t\t\t\tng-click=\\\"vm.downloadZip(vm.latestBocaZip.versionId);\\\"\\r\\n\t\t\t\t>\\r\\n\t\t\t\t\t<i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\t\t\t\t\tDownload\\r\\n\t\t\t\t</button>\\r\\n\t\t\t</div>\\r\\n\t\t</div>\\r\\n\t</div> --><!-- actions --><div class=\\\"container action-list\\\"><div class=row ng-if=\\\"!vm.contest.deleted_at && vm.me.permissions && vm.me.permissions.delete_contest\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteContest(problem) modal-confirm-title=\\\"\\'Desativer contest\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este contest?\\'\\\">Desativar contest</button></div></div></div></div>\");\n$templateCache.put(\"app/contests/view-all/view-all-contests.html\",\"<navbar></navbar><breadcrumbs contests=true></breadcrumbs><div id=view-all-contests><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de contests</h1></div></div></div><div class=\\\"container contest-list\\\"><generic-list items=vm.contestList no-items-message=\\\"\\'Nenhum contest cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',      class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',     class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Criado em\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.view\\' | url : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-4><p>{{ item.created_at | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.new\\' | url }}\\\">Criar contest</a></div></div></div></div>\");\n$templateCache.put(\"app/checkersRuns/list/checkerRuns-list.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/checkersRuns/view/view-checkerRun.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.checkerRun.list\\', vm.contest.nickname, vm.problem.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=view-checkerRun><div class=container><div class=row><div class=col-12><h2 class=page-title>Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem checkers=true test-cases=vm.problem.test_cases run-number=vm.runNumber custom-expected-output=\\\"\\'ok\\\\n\\'\\\"></run-result-table></div></div>\");\n$templateCache.put(\"app/checkers/create/create-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'o checker\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo checker</h1></div></div><div class=row><div class=col-12><form novalidate name=checkerForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea><file-loader custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" load-callback=\\\"vm.loadCallback(err, content)\\\" remove-callback=vm.removeCallback()></file-loader></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest_nickname : vm.problem_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=checkerForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/checkers/edit/edit-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar checker</h1></div></div><div class=row><div class=col-12><form novalidate name=checkerForm ng-submit=vm.submit(vm.form);><p>{{ vm.checker.name }}</p><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=checker-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea><file-loader custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" load-callback=\\\"vm.loadCallback(err, content)\\\" remove-callback=vm.removeCallback()></file-loader></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=checker-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.checker.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.checker.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=checkerForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/checkers/view/view-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker></breadcrumbs><div id=view-checker><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Linguagem: {{ vm.checker.current.language.label }}</p></div></div><div class=row><div class=col-12><p>Código fonte:</p><pre>{{ vm.checker.current.source_code }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.checker.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.checker.nickname }}\\\">Editar checker</a></div></div></div></div>\");\n$templateCache.put(\"app/contributors/create/create-contributor.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest new=\\\"\\'o contributor\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Adicionar novo contribuidor</h1></div></div><div class=row><div class=col-12 ng-if=vm.loading><p>Carregando.</p></div><div class=col-12 ng-if=\\\"!vm.loading && !vm.usersList.length\\\"><p>Não há mais quem adicionar.</p></div><div class=\\\"col-12 col-lg-6\\\" ng-if=\\\"!vm.loading && vm.usersList.length\\\"><form novalidate name=userForm ng-submit=vm.submit();><div class=form-group><select name=user ng-model=vm.form.user ng-options=\\\"user as user.username for user in vm.usersList\\\" class=form-control id=contributor-user placeholder=\\\"Nome de usuário\\\" ng-required=true></select></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/invitations/regular/regular-invitation.html\",\"<navbar></navbar><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Faça seu cadastro</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=invitationForm ng-submit=vm.submit(vm.form);><div class=form-group><label class=form-label-static for=contest-name>E-mail</label><p>{{ vm.form.email }}</p></div><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=username ng-model=vm.form.username class=form-control id=user-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><label for=user-password>Senha</label><input type=password name=password ng-model=vm.form.password class=form-control id=user-password placeholder=Senha ng-required=true></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'main\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=invitationForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/logs/view-all/view-all-logs.html\",\"<navbar></navbar><div id=view-all-logs><div class=container><div class=row><div class=col-12><h1 class=page-title>Histórico</h1></div></div></div><div class=\\\"container log-list\\\"><generic-list items=vm.logsList no-items-message=\\\"\\'Nenhum log registrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Contest\\',  class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',    class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Mensagem\\', class: \\'col-6\\' },\\r\\n\t\t\t\t{ label: \\'Data\\',     class: \\'col-2\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-2><a ng-href=\\\"{{ \\'contest.view\\' | url : item.contest.nickname }}\\\">{{ item.contest.name }}</a></div><div class=col-2><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-6><p>{{ item.message }}</p></div><div class=col-2><p>{{ item.date | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list></div></div>\");\n$templateCache.put(\"app/solutions/create/create-solution.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest problem=vm.problem new=\\\"\\'a solução\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar nova solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea><file-loader custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" load-callback=\\\"vm.loadCallback(err, content)\\\" remove-callback=vm.removeCallback()></file-loader></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest_nickname : vm.problem_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/edit/edit-solution.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest problem=vm.problem solution=vm.solution edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><p>{{ vm.solution.name }}</p><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea><file-loader custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" load-callback=\\\"vm.loadCallback(err, content)\\\" remove-callback=vm.removeCallback()></file-loader></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/view/view-solution.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest problem=vm.problem solution=vm.solution></breadcrumbs><div id=view-solution><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Linguagem: {{ vm.solution.language.label }}</p></div></div><div class=row><div class=col-12><p>Código fonte:</p><pre>{{ vm.solution.source_code }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Editar solução</a></div></div></div></div>\");\n$templateCache.put(\"app/solutionsRuns/list/solutionRuns-list.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }} - Execuções</h2></div></div><runs-list ng-if=!vm.loading runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutionsRuns/view/view-solutionRun.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solutionRun.list\\', vm.contest.nickname, vm.problem.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=view-solutionRun><div class=container><div class=row><div class=col-12><h2 class=page-title>Execução {{ vm.runNumber }}</h2></div></div><run-result-table ng-if=!vm.loading problem=vm.problem solutions=true test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");\n$templateCache.put(\"app/testCases/create/create-testCase.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest problem=vm.problem new=\\\"\\'o caso de teste\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><!-- for every test case --><div class=row ng-repeat=\\\"testCaseNumber in vm.form.test_cases\\\"><div class=col-12><p>#{{ vm.problem.test_cases.length + 1 + $index }} caso de teste <i class=\\\"fa fa-trash-o\\\" aria-hidden=true uib-tooltip=\\\"Remover caso de teste\\\" ng-if=\\\"vm.form.test_cases.length > 1\\\" ng-click=vm.removeTestCase($index)></i></p></div><!-- input --><div class=col-6><div class=form-group><textarea type=text name=input ng-model=testCaseNumber.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-disabled=\\\"testCaseNumber[\\'inputFile\\']\\\" ng-trim=false rows=6 maxlength=1024></textarea><single-attachment file=\\\"testCaseNumber[\\'inputFile\\']\\\" custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" signed-download-callback=\\\"vm.getSignedDownloadCallback($index, \\'input\\')\\\" signed-upload-callback=\\\"vm.getSignedUploadCallback($index, \\'input\\', file)\\\" after-upload-callback=\\\"vm.afterUploadCallback($index, \\'input\\', file)\\\" remove-callback=\\\"vm.removeCallback($index, \\'input\\')\\\"></single-attachment></div></div><!-- output --><div class=col-6><div class=form-group><textarea type=text name=output ng-model=testCaseNumber.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-disabled=\\\"testCaseNumber[\\'outputFile\\']\\\" ng-trim=false rows=6 maxlength=1024></textarea><single-attachment file=\\\"testCaseNumber[\\'outputFile\\']\\\" custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" signed-download-callback=\\\"vm.getSignedDownloadCallback($index, \\'output\\')\\\" signed-upload-callback=\\\"vm.getSignedUploadCallback($index, \\'output\\', file)\\\" after-upload-callback=\\\"vm.afterUploadCallback($index, \\'output\\', file)\\\" remove-callback=\\\"vm.removeCallback($index, \\'output\\')\\\"></single-attachment></div></div></div><div class=row style=\\\"margin-bottom: 16px\\\"><div class=col-12><button type=button class=\\\"btn btn-secondary\\\" ng-click=vm.addTestCase()>+</button></div></div><div class=row ng-if=vm.currentUploadingCount><div class=col-12><p>Aguardando upload de {{ vm.currentUploadingCount }} arquivo(s).</p></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=\\\"testCaseForm.$invalid || vm.currentUploadingCount\\\">Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/testCases/view/view-testCase.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest problem=vm.problem test-case=vm.test_case></breadcrumbs><div id=view-test-case><div class=container><div class=row><div class=col-12><h2 class=page-title>#{{ vm.test_case.order }} caso de teste</h2></div></div><!-- info --><div class=row><div class=col-6><p>Entrada:</p><pre>{{ vm.test_case.input }}</pre><button ng-if=\\\"vm.test_case.input_text_id && !vm.inputLoaded\\\" type=button class=\\\"btn btn-link\\\" ng-click=\\\"vm.loadMore(\\'input\\');\\\" ng-disabled=vm.inputLoading>Carregar entrada completa</button></div><div class=col-6><p>Saída:</p><pre>{{ vm.test_case.output }}</pre><button ng-if=\\\"vm.test_case.output_text_id && !vm.outputLoaded\\\" type=button class=\\\"btn btn-link\\\" ng-click=\\\"vm.loadMore(\\'output\\');\\\" ng-disabled=vm.outputLoading>Carregar saída completa</button></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.test_case.id }}\\\">Editar caso de teste</a></div></div></div></div>\");\n$templateCache.put(\"app/testCases/edit/edit-testCase.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest problem=vm.problem test-case=vm.testCase edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><div class=row><div class=col-6><div class=form-group><textarea type=text name=input ng-model=vm.form.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-disabled=vm.form.inputFile ng-trim=false rows=6 maxlength=1024></textarea><single-attachment file=vm.form.inputFile custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" signed-download-callback=\\\"vm.getSignedDownloadCallback(\\'input\\')\\\" signed-upload-callback=\\\"vm.getSignedUploadCallback(\\'input\\', file)\\\" after-upload-callback=\\\"vm.afterUploadCallback(\\'input\\', file)\\\" remove-callback=\\\"vm.removeCallback(\\'input\\')\\\"></single-attachment></div></div><div class=col-6><div class=form-group><textarea type=text name=output ng-model=vm.form.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-disabled=vm.form.outputFile ng-trim=false rows=6 maxlength=1024></textarea><single-attachment file=vm.form.outputFile custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" signed-download-callback=\\\"vm.getSignedDownloadCallback(\\'output\\')\\\" signed-upload-callback=\\\"vm.getSignedUploadCallback(\\'output\\', file)\\\" after-upload-callback=\\\"vm.afterUploadCallback(\\'output\\', file)\\\" remove-callback=\\\"vm.removeCallback(\\'output\\')\\\"></single-attachment></div></div></div><div class=row ng-if=vm.currentUploadingCount><div class=col-12><p>Aguardando upload de {{ vm.currentUploadingCount }} arquivo(s).</p></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.testCase.id }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=\\\"testCaseForm.$invalid || vm.currentUploadingCount\\\">Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/problems/create/create-problem.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest new=\\\"\\'o problema\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição rows=6 maxlength=1028 ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.view\\' | url : vm.contest.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=\\\"problemForm.$invalid || vm.loading\\\">Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/edit/edit-problem.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest problem=vm.problem edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"/contests/{{ vm.contest.nickname }}/problems/{{ vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=\\\"problemForm.$invalid && !vm.loading\\\">Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/view/view-problem.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest problem=vm.problem></breadcrumbs><div id=view-problem><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Descrição curta: {{ vm.problem.description }}</p></div><div class=col-12><p>Descrição completa:<single-attachment file=vm.problem.file signed-download-callback=vm.getSignedDownloadUrl() signed-upload-callback=vm.getSignedUploadUrl(file) after-upload-callback=vm.uploadProblemFile(file) remove-callback=vm.removeProblemFile()></single-attachment></p></div><div class=col-12><p>Tempo limite: {{ vm.problem.time_limit }}</p></div></div></div><!-- solutions list --><div class=\\\"container solutions-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Soluções:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar solução</a></div></div><generic-list items=vm.problem.solutions no-items-message=\\\"\\'Nenhuma solução cadastrada.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',            class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Casos validados\\', class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\',           class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><span ng-if=!item.validatedTestCases>{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }} </span><a ng-if=item.validatedTestCases ng-href=\\\"{{ \\'contest.problem.solution.run.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname : item.runs[ item.runs.length-1 ].number }}\\\">{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}</a></div><div class=col-4><!-- remover --> <button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteSolution(item) modal-confirm-title=\\\"\\'Remover solução\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover esta solução?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button><!-- validar --> <button class=\\\"btn btn-primary\\\" ng-class=\\\"{ \\'loading-button\\': item.validation && item.validation.status == \\'waiting\\' }\\\" type=button ng-click=list.parent.runSolution($index) ng-disabled=\\\"\\r\\n\t\t\t\t\t\t\titem.validatedTestCases == list.parent.problem.test_cases.length\\r\\n\t\t\t\t\t\t\t|| (item.validation && item.validation.status == \\'waiting\\')\\r\\n\t\t\t\t\t\t\\\"><img ng-if=\\\"item.validation && item.validation.status == \\'waiting\\'\\\" src=assets/images/ripple.svg> <i ng-if=\\\"!item.validation || item.validation.status != \\'waiting\\'\\\" class=\\\"fa fa-check\\\" aria-hidden=true></i></button></div></div><div class=row ng-if=item.validation><div class=col-12><p ng-if=\\\"item.validation.status === \\'waiting\\'\\\">Carregando</p><p ng-if=\\\"item.validation.status === \\'done\\'\\\">{{ item.validation.result.results | json }}</p></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-12><a ng-href=\\\"{{ \\'contest.problem.solutionRun.list\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Ver todas as execuções</a></div></div></div><!-- test cases list --><div class=\\\"container test-cases-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Casos de teste:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar caso de teste</a></div></div><generic-list items=vm.problem.test_cases no-items-message=\\\"\\'Nenhum caso de teste cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'#\\',     class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.id }}\\\">#{{ $index+1 }}</a></div><div class=col-4><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteTestCase(item) modal-confirm-title=\\\"\\'Remover caso de teste\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este caso de teste?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- checkers list --><!-- <div class=\\\"container checkers-list\\\">\\r\\n\t\t<div class=\\\"row\\\">\\r\\n\t\t\t<div class=\\\"col-12 list-header\\\">\\r\\n\t\t\t\t<h4>Checkers:</h4>\\r\\n\\r\\n\t\t\t\t<a\\r\\n\t\t\t\t\tng-if=\\\"!vm.problem.deleted_at\\\"\\r\\n\t\t\t\t\tclass=\\\"btn btn-primary float-right\\\"\\r\\n\t\t\t\t\trole=\\\"button\\\"\\r\\n\t\t\t\t\tng-href=\\\"{{ \\'contest.problem.checker.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\"\\r\\n\t\t\t\t>Adicionar checker</a>\\r\\n\t\t\t</div>\\r\\n\t\t</div>\\r\\n\\r\\n\t\t<generic-list\\r\\n\t\t\titems=\\\"vm.problem.checkers\\\"\\r\\n\t\t\tno-items-message=\\\"\\'Nenhum checker cadastrado.\\'\\\"\\r\\n\t\t\theaders=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',            class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Casos validados\\', class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\',           class: \\'col-4\\' }\\r\\n\t\t\t]\\\"\\r\\n\t\t\tparent=\\\"vm\\\"\\r\\n\t\t>\\r\\n\t\t\t<div class=\\\"row\\\">\\r\\n\t\t\t\t<div class=\\\"col-4\\\">\\r\\n\t\t\t\t\t<a \\r\\n\t\t\t\t\t\tng-href=\\\"{{ \\'contest.problem.checker.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\"\\r\\n\t\t\t\t\t>{{ item.name }}</a>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div class=\\\"col-4\\\">\\r\\n\t\t\t\t\t<span ng-if=\\\"!item.validatedTestCases\\\">\\r\\n\t\t\t\t\t\t{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}\\r\\n\t\t\t\t\t</span>\\r\\n\t\t\t\t\t<a\\r\\n\t\t\t\t\t\tng-if=\\\"item.validatedTestCases\\\"\\r\\n\t\t\t\t\t\tng-href=\\\"{{ \\'contest.problem.checker.run.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname : item.run[ item.run.length-1 ].number }}\\\"\\r\\n\t\t\t\t\t>{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}</a>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div class=\\\"col-4\\\">\\r\\n\t\t\t\t\t<button\\r\\n\t\t\t\t\t\tclass=\\\"btn btn-danger\\\"\\r\\n\t\t\t\t\t\ttype=\\\"button\\\"\\r\\n\t\t\t\t\t\tmodal-confirm=\\\"list.parent.deleteChecker(item)\\\"\\r\\n\t\t\t\t\t\tmodal-confirm-title=\\\"\\'Remover checker\\'\\\"\\r\\n\t\t\t\t\t\tmodal-confirm-body=\\\"\\'Tem certeza que deseja remover este checker?\\'\\\"\\r\\n\t\t\t\t\t>\\r\\n\t\t\t\t\t\t<i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\t\t\t\t\t</button>\\r\\n\\r\\n\t\t\t\t\t<button\\r\\n\t\t\t\t\t\tclass=\\\"btn btn-primary\\\"\\r\\n\t\t\t\t\t\tng-class=\\\"{ \\'loading-button\\': item.validation && item.validation.status == \\'waiting\\' }\\\"\\r\\n\t\t\t\t\t\ttype=\\\"button\\\"\\r\\n\t\t\t\t\t\tng-click=\\\"list.parent.runChecker($index)\\\"\\r\\n\t\t\t\t\t\tng-disabled=\\\"\\r\\n\t\t\t\t\t\t\titem.validatedTestCases == list.parent.problem.test_cases.length\\r\\n\t\t\t\t\t\t\t|| (item.validation && item.validation.status == \\'waiting\\')\\r\\n\t\t\t\t\t\t\\\"\\r\\n\t\t\t\t\t>\\r\\n\t\t\t\t\t\t<img\\r\\n\t\t\t\t\t\t\tng-if=\\\"item.validation && item.validation.status == \\'waiting\\'\\\"\\r\\n\t\t\t\t\t\t\tsrc=\\\"assets/images/ripple.svg\\\"\\r\\n\t\t\t\t\t\t>\\r\\n\t\t\t\t\t\t<i\\r\\n\t\t\t\t\t\t\tng-if=\\\"!item.validation || item.validation.status != \\'waiting\\'\\\"\\r\\n\t\t\t\t\t\t\tclass=\\\"fa fa-check\\\" \\r\\n\t\t\t\t\t\t\taria-hidden=\\\"true\\\"\\r\\n\t\t\t\t\t\t></i>\\r\\n\t\t\t\t\t</button>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t</div>\\r\\n\\r\\n\t\t\t<div class=\\\"row\\\" ng-if=\\\"item.validation\\\">\\r\\n\t\t\t\t<div class=\\\"col-12\\\">\\r\\n\t\t\t\t\t<p ng-if=\\\"item.validation.status === \\'waiting\\'\\\">Carregando</p>\\r\\n\t\t\t\t\t<p ng-if=\\\"item.validation.status === \\'done\\'\\\">{{ item.validation.result.results | json }}</p>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t</div>\\r\\n\t\t</generic-list>\\r\\n\\r\\n\t\t<div class=\\\"row\\\" ng-if=\\\"!vm.problem.deleted_at\\\">\\r\\n\t\t\t<div class=\\\"col-12\\\">\\r\\n\t\t\t\t<a\\r\\n\t\t\t\t\tng-href=\\\"{{ \\'contest.problem.checkerRun.list\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\"\\r\\n\t\t\t\t>Ver todas as execuções</a>\\r\\n\t\t\t</div>\\r\\n\t\t</div>\\r\\n\t</div> --><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.edit\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Editar problema</a></div></div></div></div>\");\n$templateCache.put(\"app/users/create/create-user.html\",\"<navbar></navbar><breadcrumbs users=true new=\\\"\\'o usuário\\'\\\"></breadcrumbs><div id=create-user class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo usuário</h1></div></div><div class=row><div class=col-12><form novalidate name=userForm2 ng-submit=vm.submit(); autocomplete=off><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=new-user-username ng-model=vm.form.username class=form-control id=user-username placeholder=programming_rocks_18 ng-required=true></div><div class=form-group><label for=user-email>E-mail</label><input type=email name=new-user-email ng-model=vm.form.email class=form-control id=user-email placeholder=cool_address@gmail.com ng-required=true autocomplete=off></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'user.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/users/view/view-user.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading users=true user=vm.user></breadcrumbs><alert-inactive ng-if=vm.user.deleted_at msg=\\\"\\'Esta conta de usuário está inativa.\\'\\\"></alert-inactive><div id=view-user class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.user.username }}</h1></div></div><div class=row ng-if=\\\"!vm.user.deleted_at && vm.me.permissions && vm.me.permissions.delete_user\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteUser() modal-confirm-title=\\\"\\'Desativar usuário\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este usuário?\\'\\\">Desativar usuário</button></div></div></div>\");\n$templateCache.put(\"app/users/view-all/view-all-users.html\",\"<navbar></navbar><breadcrumbs users=true></breadcrumbs><div id=view-all-users class=container><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de usuários</h1></div></div></div><div class=\\\"container user-list\\\"><generic-list items=vm.usersList no-items-message=\\\"\\'Nenhum usuário cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\', class: \\'col-12\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-12><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }} </a><span ng-if=item.deleted_at>(Desativado em {{ item.deleted_at | date:\\'dd/MM/yyyy\\' }})</span></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'user.new\\' | url }}\\\">Criar usuário</a></div></div></div></div>\");\n$templateCache.put(\"app/components/modal/modal-confirm/modal-confirm.html\",\"<div class=modal-header><h3 class=modal-title id=modal-title>{{ $ctrl.title }}</h3></div><div class=modal-body id=modal-body><p>{{ $ctrl.body }}</p></div><div class=modal-footer><button class=\\\"btn btn-danger\\\" type=button ng-click=$ctrl.cancel()>Cancelar</button> <button class=\\\"btn btn-primary\\\" type=button ng-click=$ctrl.ok()>Confirmar</button></div>\");\n$templateCache.put(\"app/checkers/runs/list/checker-runs.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/checkers/runs/view/checker-run.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.checker.run.list\\', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }} - Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=vm.checkersToShow test-cases=vm.problem.test_cases run-number=vm.runNumber custom-expected-output=\\\"\\'ok\\\\n\\'\\\"></run-result-table></div></div>\");\n$templateCache.put(\"app/solutions/runs/list/solution-runs.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execuções</h2></div></div><runs-list ng-if=!vm.loading runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutions/runs/view/solution-run.html\",\"<navbar></navbar><breadcrumbs ng-if=!vm.loading contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solution.run.list\\', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execução {{ vm.runNumber }}</h2></div></div><run-result-table ng-if=!vm.loading problem=vm.problem solutions=\\\"[ vm.solution ]\\\" test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");}]);"],"sourceRoot":"/source/"}