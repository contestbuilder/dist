{"version":3,"sources":["scripts/app.js"],"names":["angular","module","ViewSolutionRunController","$routeParams","$filter","utilService","routeContest","routeProblem","routeSolution","vm","this","init","contest","problem","solution","runNumber","run_number","solutionsToShow","solutions","filter","nickname","urlFilter","$inject","controller","ViewSolutionRunsController","runs","copy","run","getRunLink","modalConfirm","$uibModal","$document","ModalConfirmLink","scope","el","attr","ctrl","callback","bind","modalInstance","open","animation","templateUrl","ModalConfirmController","controllerAs","bindToController","result","then","$scope","$uibModalInstance","ok","close","cancel","dismiss","directive","restrict","title","body","link","ViewCheckerRunController","routeChecker","checker","checkersToShow","checkers","ViewCheckerRunsController","ViewAllUsersController","userService","routeMe","me","usersList","getUsers","permissions","delete_user","users","ViewUserController","routeUser","user","deleteUser","username","CreateUserController","$location","submit","createUser","form","email","sendEmailInvitation","path","EditTestCaseController","routeTestCase","testCaseService","fillInitialValues","input","testCase","current","output","v","length","editTestCase","_id","test_case","ViewTestCaseController","contest_nickname","problem_nickname","test_case_id","ViewProblemSolutionRunController","CreateTestCaseController","PromiseProcess","test_cases","addTestCase","push","removeTestCase","index","splice","promiseProcess","forEach","createTestCase","exec","$apply","ViewProblemSolutionRunsController","reduce","prev","concat","ViewSolutionController","solution_nickname","language","getLanguage","EditSolutionController","languages","solutionService","source_code","editSolution","CreateSolutionController","createSolution","name","ViewProblemController","downloadService","problemService","checkerService","runService","getValidatedTestCases","items","item","undefined","validatedTestCases","deleteSolution","problems","deleteChecker","runSolution","solution_index","validationResult","validation","status","runSolutions","cur","results","getSolution","runChecker","checker_index","runCheckers","getChecker","deleteTestCase","getSignedDownloadUrl","downloadProblemFile","removeProblemFile","deleteProblemFile","getSignedUploadUrl","fileName","getUploadProblemFileSignedUrl","uploadProblemFile","EditProblemController","description","lastVersion","time_limit","editProblem","CreateProblemController","fillDefaultValues","createProblem","ViewAllLogsController","logService","logsList","getLogs","logs","RegularInvitationController","$route","authService","password","user_id","editUser","login","data","reload","err","console","log","CreateContributorController","contributorService","contributors","some","contributor","createContributor","ViewAllContestsController","contestService","contestList","getContests","delete_contest","contests","ViewContestController","updateLastBocaZip","bocaZipList","Array","isArray","latestBocaZip","downloadUrl","VersionId","getToken","updateListOfProblems","problemsList","deleted_at","canI","bocaZip","action","obj","author","deleteContributor","deleteProblem","deleteContest","generateZip","problemNicknames","map","generateBocaZip","downloadZip","versionId","downloadBocaZip","signedUrl","download","CreateContestController","createContest","singleAttachment","SingleAttachmentController","Upload","loading","downloadFile","signedDownloadCallback","removeFile","removeCallback","response","file","uploadFile","errFiles","$errorMessages","maxSize","signedUploadCallback","Promise","resolve","reject","upload","url","method","key","Policy","fields","X-Amz-Algorithm","X-Amz-Credential","X-Amz-Date","X-Amz-Signature","headers","x-access-token","evt","progress","Math","min","parseInt","loaded","total","afterUploadCallback","runsList","RunsListController","solutionRuns","i","newSolutionRun","timestamp","j","sort","a","b","getLink","runResultTable","RunResultTableController","getTestCase","solutionRun","itemRun","testCases","indexOf","testCaseRunMap","selectRun","item_id","selectedRun","getTestCaseRun","unselectRun","testCaseRun","verdict","getVerdict","customExpectedOutput","navbar","NavbarController","getMainLinks","links","label","urlPath","active","menuCollapsed","isLogged","mainLinks","logout","toggleMobileMenu","genericList","$compile","GenericListController","list","transclude","noItemsMessage","parent","breadcrumbs","BreadcrumbsController","order","edit","extra","activeItem","pop","new","alertInactive","AlertInactiveController","msg","ViewProblemCheckerRunController","ViewProblemCheckerRunsController","ViewCheckerController","checker_nickname","EditCheckerController","editChecker","CreateCheckerController","createChecker","verdicts","service","languageValue","l","value","verdictValue","getValueFromObj","dotIndex","prefix","substr","suffix","$http","apiUrl","show_deleted","get","getUser","getUserById","post","put","urlService","frontUrls","getUrl","args","urls","arg","replace","hasCriticalAfter","versions","version","critical","moment","isAfter","reverse","getProblem","popupWindow","find","eq","element","append","click","remove","getContest","$q","$window","token","localStorage","setItem","setHeaderToken","removeItem","unsetHeaderToken","defaults","common","getItem","MainController","LoginController","queryMessage","search","message","errorMessage","authInterceptor","$injector","interceptor","responseError","error","setToken","routeConfig","$routeProvider","$locationProvider","$httpProvider","interceptors","when","main","invitation","regular","getMe","view","checkerRun","otherwise","redirectTo","html5Mode","AppController","$rootScope","$on","event","previous","rejection","params","paramKeys","config","customNgTransclude","$element","$attrs","$transclude","minErr","startingTag","iScopeType","clone","iChildScope","$new","on","$destroy","arguments","myDate","currentDate","inputDate","isBefore","diffInMinutes","diff","diffInHours","diffInDays","diffInMonths","floor","short","constant","removeNgTransclude","$provide","decorator","$delegate","shift","$templateCache"],"mappings":"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","file":"scripts/app-d5f279506b.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('front', [\n    \t'ngAnimate',\n    \t'ngCookies',\n    \t'ngTouch',\n    \t'ngSanitize',\n    \t'ngMessages',\n    \t'ngAria',\n    \t'ngRoute',\n    \t'ui.bootstrap',\n    \t'toastr',\n        'ngFileUpload'\n    ]);\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunController', ViewSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunController($routeParams, $filter, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.solution  = routeSolution;\r\n        vm.runNumber = $routeParams.run_number;\r\n\r\n        vm.solutionsToShow = vm.problem.solutions.filter(function(solution) {\r\n            return solution.nickname === vm.solution.nickname;\r\n        });\r\n\r\n        vm.urlFilter = $filter('url');\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunsController', ViewSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunsController($routeParams, $filter, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n        vm.solution = routeSolution;\r\n\r\n        vm.runs = angular.copy(vm.solution.run);\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.solution.run.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('modalConfirm', modalConfirm);\r\n\r\n/** @ngInject */\r\nfunction modalConfirm($uibModal, $document) {\r\n    var directive = {\r\n        restrict        : 'A',\r\n        scope           : {\r\n            callback: '&modalConfirm',\r\n            title:    '<modalConfirmTitle',\r\n            body:     '<modalConfirmBody'\r\n        },\r\n        link            : ModalConfirmLink\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmLink(scope, el, attr, ctrl) {\r\n        var callback = scope.callback();\r\n\r\n        el.bind('click', function() {\r\n            var modalInstance = $uibModal.open({\r\n                animation:        false,\r\n                templateUrl:      'app/components/modal/modal-confirm/modal-confirm.html',\r\n                controller:       ModalConfirmController,\r\n                controllerAs:     '$ctrl',\r\n                scope:            scope,\r\n                bindToController: true\r\n            });\r\n\r\n            modalInstance.result.then(function(result) {\r\n                callback();\r\n            }, function() {\r\n            });\r\n        });\r\n    }\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmController($scope, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.ok = function() {\r\n            $uibModalInstance.close();\r\n        };\r\n\r\n        vm.cancel = function() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerRunController', ViewCheckerRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerRunController($routeParams, $filter, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.checker   = routeChecker;\r\n        vm.runNumber = $routeParams.run_number;\r\n\r\n        vm.checkersToShow = vm.problem.checkers.filter(function(checker) {\r\n            return checker.nickname === vm.checker.nickname;\r\n        });\r\n\r\n        vm.urlFilter = $filter('url');\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerRunsController', ViewCheckerRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerRunsController($routeParams, $filter, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n\r\n        vm.runs = angular.copy(vm.checker.run);\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.checker.run.view', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllUsersController', ViewAllUsersController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllUsersController(userService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.usersList = [];\r\n\r\n        userService.getUsers(vm.me.permissions && vm.me.permissions.delete_user)\r\n        .then(function(users) {\r\n            vm.usersList = users;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewUserController', ViewUserController);\r\n\r\n/** @ngInject */\r\nfunction ViewUserController(userService, routeMe, routeUser) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.user = routeUser;\r\n    };\r\n\r\n    vm.deleteUser = function() {\r\n        return function() {\r\n            userService.deleteUser(vm.user.username)\r\n            .then(function(user) {\r\n                vm.user = user;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateUserController', CreateUserController);\r\n\r\n/** @ngInject */\r\nfunction CreateUserController($location, $filter, userService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    };\r\n\r\n    vm.submit = function() {\r\n        userService.createUser({\r\n            username:            vm.form.username,\r\n            email:               vm.form.email,\r\n            sendEmailInvitation: true\r\n        }).then(function(user) {\r\n            $location.path($filter('url')('user.view', user.username));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditTestCaseController', EditTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction EditTestCaseController($location, $filter, routeContest, routeProblem, routeTestCase, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n        vm.testCase = routeTestCase;\r\n        vm.testCase.current = vm.testCase.v[ vm.testCase.v.length-1 ];\r\n\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            input:  vm.testCase.current.input,\r\n            output: vm.testCase.current.output\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        testCaseService.editTestCase(vm.contest.nickname, vm.problem.nickname, vm.testCase._id, {\r\n            input:  form.input,\r\n            output: form.output\r\n        }).then(function(test_case) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.testCase.view', \r\n                vm.contest.nickname, \r\n                vm.problem.nickname, \r\n                test_case._id\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewTestCaseController', ViewTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction ViewTestCaseController($routeParams, routeContest, routeProblem, routeTestCase) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.test_case = routeTestCase;\r\n\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.test_case_id = $routeParams.test_case_id;\r\n\r\n        vm.test_case.current = vm.test_case.v[vm.test_case.v.length-1];\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunController', ViewProblemSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.runNumber = $routeParams.run_number;\r\n    };\r\n\r\n    vm.urlFilter = $filter('url');\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateTestCaseController', CreateTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction CreateTestCaseController($scope, $location, $filter, PromiseProcess, routeContest, routeProblem, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n\r\n        vm.form = {\r\n            test_cases: [{\r\n                input:  '',\r\n                output: ''\r\n            }]\r\n        };\r\n    };\r\n\r\n    vm.addTestCase = function() {\r\n        vm.form.test_cases.push({\r\n            input:  '',\r\n            output: ''\r\n        });\r\n    };\r\n\r\n    vm.removeTestCase = function(index) {\r\n        vm.form.test_cases.splice(index, 1);\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        var promiseProcess = PromiseProcess();\r\n\r\n        form.test_cases.forEach(function(test_case) {\r\n            promiseProcess.push(function() {\r\n                return testCaseService.createTestCase(vm.contest.nickname, vm.problem.nickname, {\r\n                    input:  test_case.input,\r\n                    output: test_case.output\r\n                }).then(function(test_case) {\r\n                    return test_case._id;\r\n                });\r\n            });\r\n        });\r\n\r\n        promiseProcess.exec([])\r\n        .then(function(test_case_id) {\r\n            $scope.$apply(function() {\r\n                if(form.test_cases.length == 1) {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.testCase.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname, \r\n                        test_case_id\r\n                    ));\r\n                } else {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname\r\n                    ));\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunsController', ViewProblemSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunsController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n\r\n        vm.runs = angular.copy(vm.problem.solutions.reduce(function(prev, solution) {\r\n            return prev.concat(solution.run);\r\n        }, []));\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.solutionRun.view', vm.contest.nickname, vm.problem.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionController', ViewSolutionController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionController($routeParams, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.solution = routeSolution;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.solution_nickname = $routeParams.solution_nickname;\r\n\r\n        vm.solution.current = vm.solution.v[vm.solution.v.length-1];\r\n        vm.solution.current.language = utilService.getLanguage(vm.solution.current.language);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditSolutionController', EditSolutionController);\r\n\r\n/** @ngInject */\r\nfunction EditSolutionController($location, $filter, languages, solutionService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.solution = routeSolution;\r\n        vm.solution.current = vm.solution.v[ vm.solution.v.length-1 ];\r\n\r\n        vm.languages = languages;\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            source_code: vm.solution.current.source_code,\r\n            language:    vm.solution.current.language\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.editSolution(vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, {\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.solution.view',\r\n                vm.contest.nickname,\r\n                vm.problem.nickname,\r\n                solution.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateSolutionController', CreateSolutionController);\r\n\r\n/** @ngInject */\r\nfunction CreateSolutionController($location, $filter, $routeParams, languages, solutionService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        \r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.languages = languages;\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.createSolution(vm.contest_nickname, vm.problem_nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.solution.view',\r\n                vm.contest_nickname,\r\n                vm.problem_nickname,\r\n                solution.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemController', ViewProblemController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemController($routeParams, downloadService, routeContest, routeProblem, problemService, solutionService, checkerService, testCaseService, runService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.problem.current = vm.problem.v[vm.problem.v.length-1];\r\n\r\n        getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n        getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n    };\r\n\r\n    vm.deleteSolution = function(solution) {\r\n        return function() {\r\n            solutionService.deleteSolution(vm.contest_nickname, vm.problem_nickname, solution.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteChecker = function(checker) {\r\n        return function() {\r\n            checkerService.deleteChecker(vm.contest_nickname, vm.problem_nickname, checker.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.runSolution = function(solution_index) {\r\n        var validationResult;\r\n        vm.problem.solutions[solution_index].validation = {\r\n            status: 'waiting'\r\n        };\r\n\r\n        runService.runSolutions(vm.contest.nickname, vm.problem.nickname, {\r\n            solutions:  [ vm.problem.solutions[solution_index].nickname ],\r\n            test_cases: vm.problem.test_cases.reduce(function(prev, cur) {\r\n                prev.push(cur._id);\r\n                return prev;\r\n            }, [])\r\n        })\r\n        .then(function(results) {\r\n            validationResult = results;\r\n\r\n            return solutionService.getSolution(\r\n                vm.contest_nickname, \r\n                vm.problem_nickname, \r\n                vm.problem.solutions[solution_index].nickname\r\n            );\r\n        })\r\n        .then(function(solution) {\r\n            vm.problem.solutions[solution_index] = solution;\r\n            getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n\r\n            vm.problem.solutions[solution_index].validation = {\r\n                status: 'done',\r\n                result: validationResult\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.runChecker = function(checker_index) {\r\n        var validationResult;\r\n        vm.problem.checkers[checker_index].validation = {\r\n            status: 'waiting'\r\n        };\r\n\r\n        runService.runCheckers(vm.contest.nickname, vm.problem.nickname, {\r\n            checkers:   [ vm.problem.checkers[checker_index].nickname ],\r\n            test_cases: vm.problem.test_cases.reduce(function(prev, cur) {\r\n                prev.push(cur._id);\r\n                return prev;\r\n            }, [])\r\n        })\r\n        .then(function(results) {\r\n            validationResult = results;\r\n\r\n            return checkerService.getChecker(\r\n                vm.contest_nickname, \r\n                vm.problem_nickname, \r\n                vm.problem.checkers[checker_index].nickname\r\n            );\r\n        })\r\n        .then(function(checker) {\r\n            vm.problem.checkers[checker_index] = checker;\r\n            getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n\r\n            vm.problem.checkers[checker_index].validation = {\r\n                status: 'done',\r\n                result: validationResult\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.deleteTestCase = function(test_case) {\r\n        return function() {\r\n            testCaseService.deleteTestCase(vm.contest_nickname, vm.problem_nickname, test_case._id)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    function getValidatedTestCases(problem, items) {\r\n        items.forEach(function(item) {\r\n            if(item.validatedTestCases !== undefined) {\r\n                return;\r\n            }\r\n\r\n            item.validatedTestCases = runService.getValidatedTestCases(problem, item.run, item.v);\r\n        });\r\n    }\r\n\r\n\r\n    vm.getSignedDownloadUrl = function() {\r\n        return problemService.downloadProblemFile(vm.contest.nickname, vm.problem.nickname);\r\n    };\r\n\r\n    vm.removeProblemFile = function() {\r\n        return problemService.deleteProblemFile(vm.contest.nickname, vm.problem.nickname);\r\n    };\r\n\r\n    vm.getSignedUploadUrl = function(fileName) {\r\n        return problemService.getUploadProblemFileSignedUrl(vm.contest.nickname, vm.problem.nickname, {\r\n            name: fileName\r\n        });\r\n    };\r\n\r\n    vm.uploadProblemFile = function(fileName) {\r\n        return problemService.uploadProblemFile(vm.contest.nickname, vm.problem.nickname, {\r\n            name: fileName\r\n        });\r\n    };\r\n\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditProblemController', EditProblemController);\r\n\r\n/** @ngInject */\r\nfunction EditProblemController($location, $filter, problemService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.lastVersion = vm.problem.v[ vm.problem.v.length-1 ];\r\n\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            name:        vm.problem.name,\r\n            description: vm.lastVersion.description,\r\n            time_limit:  vm.lastVersion.time_limit\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.editProblem(vm.contest.nickname, vm.problem.nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.view',\r\n                vm.contest.nickname,\r\n                problem.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateProblemController', CreateProblemController);\r\n\r\n/** @ngInject */\r\nfunction CreateProblemController($location, $filter, $routeParams, problemService, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n\r\n        fillDefaultValues();\r\n    };\r\n\r\n    function fillDefaultValues() {\r\n        vm.form = {};\r\n        vm.form.time_limit = 1;\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.createProblem(vm.contest_nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.view',\r\n                vm.contest_nickname,\r\n                problem.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllLogsController', ViewAllLogsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllLogsController(logService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.logsList = [];\r\n\r\n        logService.getLogs()\r\n        .then(function(logs) {\r\n            vm.logsList = logs;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('RegularInvitationController', RegularInvitationController);\r\n\r\n/** @ngInject */\r\nfunction RegularInvitationController($location, $routeParams, $filter, $route, authService, routeUser, userService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.user_id = $routeParams.user_id;\r\n        vm.user = routeUser;\r\n\r\n        fillDefaultValues();\r\n    };\r\n\r\n    function fillDefaultValues() {\r\n        vm.form = {\r\n            email:    routeUser.email,\r\n            username: routeUser.username || '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        userService.editUser(vm.user_id, {\r\n            username: form.username,\r\n            password: form.password\r\n        })\r\n        .then(function(user) {\r\n            return authService.login(form.username, form.password);\r\n        })\r\n        .then(function(data) {\r\n            $route.reload();\r\n            $location.path($filter('url', 'main'));\r\n        })\r\n        .catch(function(err) {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContributorController', CreateContributorController);\r\n\r\n/** @ngInject */\r\nfunction CreateContributorController($location, $filter, userService, contributorService, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tvm.contest = routeContest;\r\n    \tvm.usersList = [];\r\n\r\n    \tuserService.getUsers()\r\n    \t.then(function(users) {\r\n    \t\tvm.usersList = users.filter(function(user) {\r\n    \t\t\treturn !vm.contest.contributors.some(function(contributor) {\r\n    \t\t\t\treturn contributor.username === user.username;\r\n    \t\t\t});\r\n    \t\t});\r\n    \t});\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contributorService.createContributor(vm.contest.nickname, {\r\n            user_id: vm.form.user._id\r\n        })\r\n        .then(function(contest) {\r\n            $location.path($filter('url')(\r\n                'contest.view',\r\n                vm.contest.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllContestsController', ViewAllContestsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllContestsController(contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.contestList = [];\r\n\r\n        contestService.getContests(vm.me.permissions && vm.me.permissions.delete_contest)\r\n        .then(function(contests) {\r\n            vm.contestList = contests;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewContestController', ViewContestController);\r\n\r\n/** @ngInject */\r\nfunction ViewContestController(authService, downloadService, contestService, contributorService, problemService, routeMe, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me      = routeMe;\r\n        vm.contest = routeContest;\r\n\r\n        updateListOfProblems(vm.contest.problems);\r\n        updateLastBocaZip(vm.contest.bocaZip);\r\n    };\r\n\r\n    vm.canI = function(action, obj) {\r\n        switch(action) {\r\n            case 'delete_contributor':\r\n                return vm.contest.author._id == vm.me._id;\r\n            case 'delete_problem':\r\n                return vm.contest.author._id == vm.me._id;\r\n            default:\r\n                return false;\r\n        }\r\n    };\r\n\r\n    vm.deleteContributor = function(contributor) {\r\n        return function() {\r\n            contributorService.deleteContributor(vm.contest.nickname, contributor._id)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteProblem = function(problem) {\r\n        return function() {\r\n            problemService.deleteProblem(vm.contest.nickname, problem.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                updateListOfProblems(vm.contest.problems);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteContest = function() {\r\n        return function() {\r\n            contestService.deleteContest(vm.contest.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    function updateLastBocaZip(bocaZipList) {\r\n        if(!Array.isArray(bocaZipList) || !bocaZipList.length) {\r\n            return vm.latestBocaZip = null;\r\n        }\r\n\r\n        vm.latestBocaZip = bocaZipList[ bocaZipList.length-1 ];\r\n        vm.latestBocaZip.downloadUrl = 'http://localhost:3010/api/v1' +\r\n            '/contest/' + vm.contest.nickname + \r\n            '/boca/download' +\r\n            '?VersionId=' + vm.latestBocaZip.VersionId + \r\n            '&token=' + authService.getToken();\r\n\r\n        // last file edition on the contest\r\n\r\n        return vm.latestBocaZip;\r\n    }\r\n\r\n    function updateListOfProblems(problems) {\r\n        return vm.problemsList = problems.filter(function(problem) {\r\n            return !problem.deleted_at || vm.canI('delete_problem');\r\n        });\r\n    }\r\n\r\n    vm.generateZip = function() {\r\n        var problemNicknames = vm.contest.problems.map(function(problem) {\r\n            return problem.nickname;\r\n        });\r\n\r\n        contestService.generateBocaZip(vm.contest.nickname, {\r\n            problems: problemNicknames\r\n        })\r\n            .then(function(bocaZip) {\r\n                vm.contest.bocaZip.push(bocaZip);\r\n                updateLastBocaZip(vm.contest.bocaZip);\r\n            })\r\n            .catch(function(err) {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    vm.downloadZip = function(versionId) {\r\n        contestService.downloadBocaZip(vm.contest.nickname, versionId)\r\n            .then(function(signedUrl) {\r\n                downloadService.download(signedUrl);\r\n            })\r\n            .catch(function(err) {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContestController', CreateContestController);\r\n\r\n/** @ngInject */\r\nfunction CreateContestController($location, $filter, contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contestService.createContest({\r\n            name: vm.form.name\r\n        }).then(function(contest) {\r\n            $location.path($filter('url')(\r\n                'contest.list'\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('singleAttachment', singleAttachment);\r\n\r\n/** @ngInject */\r\nfunction singleAttachment() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/single-attachment/single-attachment.html',\r\n        scope           : {\r\n            // the file object (must have a name property).\r\n            file: '<',\r\n\r\n            // callbacks\r\n            signedDownloadCallback: '<',\r\n            signedUploadCallback:   '<',\r\n            afterUploadCallback:    '<',\r\n            removeCallback:         '<'\r\n        },\r\n        controller      : SingleAttachmentController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function SingleAttachmentController(downloadService, Upload) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.loading = false;\r\n        };\r\n\r\n        vm.downloadFile = function() {\r\n            vm.loading = true;\r\n\r\n            vm.signedDownloadCallback()\r\n                .then(function(signedUrl) {\r\n                    vm.loading = false;\r\n\r\n                    downloadService.download(signedUrl);\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível baixar este arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.removeFile = function() {\r\n            vm.loading = true;\r\n\r\n            vm.removeCallback()\r\n                .then(function(response) {\r\n                    vm.loading = false;\r\n\r\n                    vm.file = undefined;\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível excluir este arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.uploadFile = function(file, errFiles) {\r\n            if(errFiles && errFiles[0]) {\r\n                errFiles = errFiles[0];\r\n\r\n                if(errFiles.$errorMessages && errFiles.$errorMessages.maxSize) {\r\n                    return vm.err = 'O arquivo selecionado ultrapassa o limite de 4MB.';\r\n                }\r\n\r\n                return vm.err = 'Erro desconhecido.';\r\n            }\r\n\r\n            if(!file) {\r\n                return;\r\n            }\r\n            var fileName = file.name;\r\n\r\n            vm.loading = true;\r\n            vm.signedUploadCallback(fileName)\r\n                .then(function(signedUrl) {\r\n                    return new Promise(function(resolve, reject) {\r\n                        Upload.upload({\r\n                            url:    signedUrl.url,\r\n                            method: 'POST',\r\n                            data:   {\r\n                                key:                signedUrl.key,\r\n                                Policy:             signedUrl.fields.Policy,\r\n                                'X-Amz-Algorithm':  signedUrl.fields['X-Amz-Algorithm'],\r\n                                'X-Amz-Credential': signedUrl.fields['X-Amz-Credential'],\r\n                                'X-Amz-Date':       signedUrl.fields['X-Amz-Date'],\r\n                                'X-Amz-Signature':  signedUrl.fields['X-Amz-Signature'],\r\n                                file:               file\r\n                            },\r\n                            headers: {\r\n                                'x-access-token': undefined\r\n                            }\r\n                        })\r\n                        .then(function finishCallback(response) {\r\n                            return resolve(response.data);\r\n                        }, function errCallback(err) {\r\n                            return reject(err);\r\n                        }, function progressCallback(evt) {\r\n                            file.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n                        });\r\n                    });\r\n                })\r\n                .then(function(result) {\r\n                    return vm.afterUploadCallback(fileName);\r\n                })\r\n                .then(function(response) {\r\n                    vm.loading = false;\r\n\r\n                    vm.file = {\r\n                        name: fileName\r\n                    };\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível fazer upload deste arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runsList', runsList);\r\n\r\n/** @ngInject */\r\nfunction runsList() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/runs-list/runs-list.html',\r\n        scope           : {\r\n            runs:    '<',\r\n            getLink: '<'\r\n        },\r\n        controller      : RunsListController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunsListController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.solutionRuns = [];\r\n            for(var i=0; i<vm.runs.length; i++) {\r\n                var newSolutionRun = {\r\n                    run_number: vm.runs[i].run_number,\r\n                    runs:       [ vm.runs[i] ],\r\n                    timestamp:  vm.runs[i].timestamp\r\n                };\r\n\r\n                for(var j=vm.runs.length-1; j>i; j--) {\r\n                    if(vm.runs[i].run_number === vm.runs[j].run_number) {\r\n                        newSolutionRun.runs.push(vm.runs[j]);\r\n                        vm.runs.splice(j, 1);\r\n                    }\r\n                }\r\n\r\n                vm.solutionRuns.push(newSolutionRun);\r\n            }\r\n            vm.solutionRuns.sort(function(a, b) {\r\n                return b.run_number - a.run_number;\r\n            });\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runResultTable', runResultTable);\r\n\r\n/** @ngInject */\r\nfunction runResultTable() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/run-result-table/run-result-table.html',\r\n        scope           : {\r\n            problem:   '<',\r\n            solutions: '<',\r\n            checkers:  '<',\r\n            testCases: '<',\r\n            runNumber: '<',\r\n\r\n            customExpectedOutput: '<'\r\n        },\r\n        controller      : RunResultTableController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunResultTableController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            // if not defined which solutions should be shown, \r\n            // it will show all the solutions that were run.\r\n            if(typeof vm.solutions === 'boolean' && vm.solutions) {\r\n                vm.items = vm.problem.solutions.filter(function(solution) {\r\n                    return solution.run.some(function(solutionRun) {\r\n                        return solutionRun.run_number == vm.runNumber;\r\n                    });\r\n                });\r\n            } else if(Array.isArray(vm.solutions)) {\r\n                vm.items = vm.solutions;\r\n            }\r\n\r\n            // if not defined which checkers should be shown, \r\n            // it will show all the checkers that were run.\r\n            if(typeof vm.checkers === 'boolean' && vm.checkers) {\r\n                vm.items = vm.problem.checkers.filter(function(solution) {\r\n                    return solution.run.some(function(solutionRun) {\r\n                        return solutionRun.run_number == vm.runNumber;\r\n                    });\r\n                });\r\n            } else if(Array.isArray(vm.checkers)) {\r\n                vm.items = vm.checkers;\r\n            }\r\n\r\n            // all the runs with the run_number.\r\n            vm.runs = vm.items.reduce(function(prev, item) {\r\n                return prev.concat(\r\n                    item.run\r\n                    .filter(function(itemRun) {\r\n                        return itemRun.run_number == vm.runNumber;\r\n                    })\r\n                    .map(function(itemRun) {\r\n                        itemRun.item              = item;\r\n                        itemRun.test_case         = getTestCase(vm.problem, itemRun.test_case_id);\r\n                        itemRun.test_case.current = itemRun.test_case.v[ itemRun.test_case.v.length-1 ];\r\n\r\n                        return itemRun;\r\n                    })\r\n                );\r\n            }, []);\r\n\r\n            // all the test_cases that were tested.\r\n            vm.testCases = vm.runs.reduce(function(prev, solutionRun) {\r\n                if(prev.indexOf(solutionRun.test_case) === -1) {\r\n                    prev.push(solutionRun.test_case);\r\n                }\r\n                return prev;\r\n            }, []);\r\n\r\n            // map with all the item/test_case results.\r\n            vm.testCaseRunMap = {};\r\n        };\r\n\r\n        function getTestCase(problem, test_case_id) {\r\n            return problem.test_cases.filter(function(test_case) {\r\n                return test_case._id == test_case_id;\r\n            })[0];\r\n        }\r\n\r\n        vm.selectRun = function(runs, item_id, test_case_id) {\r\n            vm.selectedRun = vm.getTestCaseRun(runs, item_id, test_case_id);\r\n        };\r\n\r\n        vm.unselectRun = function() {\r\n            vm.selectedRun = null;\r\n        };\r\n\r\n        vm.getTestCaseRun = function(runs, item_id, test_case_id) {\r\n            if(vm.testCaseRunMap[item_id + '-' + test_case_id] === undefined) {\r\n                var testCaseRun = runs.filter(function(run) {\r\n                    return run.item._id  == item_id\r\n                        && run.test_case._id == test_case_id;\r\n                })[0];\r\n\r\n                testCaseRun.verdict = utilService.getVerdict(testCaseRun.verdict);\r\n\r\n                vm.testCaseRunMap[item_id + '-' + test_case_id] = testCaseRun;\r\n            }\r\n\r\n            return vm.testCaseRunMap[item_id + '-' + test_case_id];\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .directive('navbar', navbar);\n\n/** @ngInject */\nfunction navbar() {\n    var directive = {\n        restrict        : 'E',\n        templateUrl     : 'app/components/navbar/navbar.html',\n        scope           : {},\n        controller      : NavbarController,\n        controllerAs    : 'vm',\n        bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController($route, $location, $scope, $filter, authService) {\n        var vm = this;\n\n        vm.init = function() {\n            vm.menuCollapsed = true;\n\n            vm.isLogged = authService.isLogged();\n\n            vm.mainLinks = getMainLinks();\n        };\n\n        function getMainLinks() {\n            var links = [{\n                label:   'Home',\n                urlPath: 'main' \n            }, {\n                label:   'Contests',\n                urlPath: 'contest.list'\n            }, {\n                label:   'Usuários',\n                urlPath: 'user.list'\n            }, {\n                label:   'Histórico',\n                urlPath: 'log'\n            }];\n\n            links.forEach(function(link) {\n                link.active = $location.path() == $filter('url')(link.urlPath);\n            });\n\n            return links;\n        }\n\n        vm.logout = function() {\n            authService.logout();\n            $location.path('/');\n            $route.reload();\n        };\n\n        vm.toggleMobileMenu = function() {\n            vm.menuCollapsed = !vm.menuCollapsed;\n        };\n\n        vm.init();\n        return vm;\n    }\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('genericList', genericList);\r\n\r\n/** @ngInject */\r\nfunction genericList($compile) {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/generic-list/generic-list.html',\r\n        transclude      : true,\r\n        controller      : GenericListController,\r\n        controllerAs    : 'list',\r\n        scope: {\r\n            items:          '<', // list\r\n            noItemsMessage: '<', // string\r\n            headers:        '<', // list\r\n            parent:         '<'  // controller\r\n        },\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function GenericListController() {\r\n        var list = this;\r\n\r\n        list.init = function() {\r\n        };\r\n\r\n        list.init();\r\n        return list;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('breadcrumbs', breadcrumbs);\r\n\r\n/** @ngInject */\r\nfunction breadcrumbs() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/breadcrumbs/breadcrumbs.html',\r\n        scope           : {\r\n            new:      '<', // string of what is being added\r\n            edit:     '<', // true or false\r\n\r\n            users:    '<', // true or false\r\n            user:     '<',\r\n\r\n            contests: '<',\r\n            contest:  '<',\r\n            problem:  '<',\r\n            solution: '<',\r\n            checker:  '<',\r\n            testCase: '<',\r\n\r\n            extra:    '<'  // list of extra labels/urls (for those who don't fit a pattern (yet))\r\n        },\r\n        controller      : BreadcrumbsController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function BreadcrumbsController($filter) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.items = [];\r\n\r\n            // contests list\r\n            if(vm.contests) {\r\n                vm.items.push({\r\n                    label: 'Contests',\r\n                    url:   $filter('url')('contest.list')\r\n                });\r\n\r\n                // contest X\r\n                if(vm.contest) {\r\n                    vm.items.push({\r\n                        label: vm.contest.name,\r\n                        url:   $filter('url')('contest.view', vm.contest.nickname)\r\n                    });\r\n\r\n                    // problem Y\r\n                    if(vm.problem) {\r\n                        vm.items.push({\r\n                            label: vm.problem.name,\r\n                            url:   $filter('url')('contest.problem.view', vm.contest.nickname, vm.problem.nickname)\r\n                        });\r\n\r\n                        // solution Z\r\n                        if(vm.solution) {\r\n                            vm.items.push({\r\n                                label: vm.solution.name,\r\n                                url:   $filter('url')('contest.problem.solution.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\r\n                            });\r\n                        }\r\n\r\n                        // checker Q\r\n                        if(vm.checker) {\r\n                            vm.items.push({\r\n                                label: vm.checker.name,\r\n                                url:   $filter('url')('contest.problem.checker.view', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname)\r\n                            });\r\n                        }\r\n\r\n                        // testcase W\r\n                        if(vm.testCase) {\r\n                            vm.items.push({\r\n                                label: '#' + vm.testCase.v[ vm.testCase.v.length-1 ].order + ' caso de teste',\r\n                                url:   $filter('url')('contest.problem.testCase.view', vm.contest.nickname, vm.problem.nickname, vm.testCase._id)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // users list\r\n            if(vm.users) {\r\n                vm.items.push({\r\n                    label: 'Usuários',\r\n                    url:   $filter('url')('user.list')\r\n                });\r\n\r\n                // user X\r\n                if(vm.user) {\r\n                    vm.items.push({\r\n                        label: vm.user.username,\r\n                        url:   $filter('url')('user.view')\r\n                    });\r\n                }\r\n            }\r\n\r\n            // is an editing page?\r\n            if(vm.edit) {\r\n                vm.items.push({\r\n                    label: 'Editar'\r\n                });\r\n            }\r\n\r\n            // is a creating page?\r\n            if(vm.new) {\r\n                vm.items.push({\r\n                    label: 'Nov' + vm.new\r\n                });\r\n            }\r\n\r\n            if(vm.extra && vm.extra.length) {\r\n                vm.extra.forEach(function(extra) {\r\n                    vm.items.push({\r\n                        label: extra.label,\r\n                        url:   extra.url\r\n                    });\r\n                });\r\n            }\r\n\r\n            // the last item is the selected one\r\n            if(vm.items.length) {\r\n                vm.activeItem = vm.items.pop();\r\n            }\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('alertInactive', alertInactive);\r\n\r\n/** @ngInject */\r\nfunction alertInactive() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/alert-inactive/alert-inactive.html',\r\n        scope           : {\r\n            msg: '<'\r\n        },\r\n        controller      : AlertInactiveController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function AlertInactiveController() {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemCheckerRunController', ViewProblemCheckerRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemCheckerRunController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.runNumber = $routeParams.run_number;\r\n    };\r\n\r\n    vm.urlFilter = $filter('url');\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemCheckerRunsController', ViewProblemCheckerRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemCheckerRunsController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n\r\n        vm.runs = angular.copy(vm.problem.checkers.reduce(function(prev, checker) {\r\n            return prev.concat(checker.run);\r\n        }, []));\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.checkerRun.view', vm.contest.nickname, vm.problem.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerController', ViewCheckerController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerController($routeParams, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.checker_nickname = $routeParams.checker_nickname;\r\n\r\n        vm.checker.current = vm.checker.v[vm.checker.v.length-1];\r\n        vm.checker.current.language = utilService.getLanguage(vm.checker.current.language);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditCheckerController', EditCheckerController);\r\n\r\n/** @ngInject */\r\nfunction EditCheckerController($location, $filter, languages, checkerService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n        vm.checker.current = vm.checker.v[ vm.checker.v.length-1 ];\r\n\r\n        vm.languages = languages;\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            source_code: vm.checker.current.source_code,\r\n            language:    vm.checker.current.language\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        checkerService.editChecker(vm.contest.nickname, vm.problem.nickname, vm.checker.nickname, {\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(checker) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.checker.view',\r\n                vm.contest.nickname,\r\n                vm.problem.nickname,\r\n                checker.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateCheckerController', CreateCheckerController);\r\n\r\n/** @ngInject */\r\nfunction CreateCheckerController($location, $filter, $routeParams, languages, checkerService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        \r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.languages = languages;\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        checkerService.createChecker(vm.contest_nickname, vm.problem_nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(checker) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.checker.view',\r\n                vm.contest_nickname,\r\n                vm.problem_nickname,\r\n                checker.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('utilService', utilService);\r\n\r\n/** @ngInject */\r\nfunction utilService(languages, verdicts) {\r\n    var service = this;\r\n\r\n    service.getLanguage = function(languageValue) {\r\n        return languages.filter(function(l) {\r\n            return l.value == languageValue;\r\n        })[0] || languages[0];\r\n    };\r\n\r\n    service.getVerdict = function(verdictValue) {\r\n        return verdicts.filter(function(v) {\r\n            return v.value == verdictValue;\r\n        })[0] || verdicts[0];\r\n    };\r\n\r\n    service.getValueFromObj = function(obj, path) {\r\n    \tvar dotIndex = path.indexOf('.');\r\n    \t\r\n    \tif(dotIndex !== -1) {\r\n    \t\tvar prefix = path.substr(0, dotIndex);\r\n    \t\tvar suffix = path.substr(dotIndex+1);\r\n\r\n    \t\tif(typeof obj[prefix] !== 'object') {\r\n    \t\t\treturn null;\r\n    \t\t}\r\n\r\n    \t\treturn service.getValueFromObj(obj[prefix], suffix);\r\n    \t} else {\r\n    \t\treturn obj[path];\r\n    \t}\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('userService', userService);\r\n\r\n/** @ngInject */\r\nfunction userService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getUsers = function(show_deleted) {\r\n        return $http.get(apiUrl + 'user' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.users;\r\n        });\r\n    };\r\n\r\n    service.getUser = function(username) {\r\n        return $http.get(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.getUserById = function(_id) {\r\n        return $http.get(apiUrl + 'user/' + _id)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.createUser = function(user) {\r\n        return $http.post(apiUrl + 'user', user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.editUser = function(username, user) {\r\n        return $http.put(apiUrl + 'user/' + username, user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.deleteUser = function(username) {\r\n        return $http.delete(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('urlService', urlService);\r\n\r\n/** @ngInject */\r\nfunction urlService(frontUrls, utilService) {\r\n    var service = this;\r\n\r\n    service.getUrl = function(path, args) {\r\n        var url = utilService.getValueFromObj(frontUrls.urls, path);\r\n        if(!url) {\r\n            return null;\r\n        }\r\n\r\n        if(args.length) {\r\n            args.forEach(function(arg) {\r\n                url = url.replace(/:\\w*/, arg);\r\n            });\r\n        }\r\n\r\n        return url;\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('testCaseService', testCaseService);\r\n\r\n/** @ngInject */\r\nfunction testCaseService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getTestCase = function(contest_nickname, problem_nickname, test_case_id) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.createTestCase = function(contest_nickname, problem_nickname, test_case) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case', \r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.editTestCase = function(contest_nickname, problem_nickname, test_case_id, test_case) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id,\r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.deleteTestCase = function(contest_nickname, problem_nickname, test_case_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('solutionService', solutionService);\r\n\r\n/** @ngInject */\r\nfunction solutionService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.createSolution = function(contest_nickname, problem_nickname, solution) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution', \r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.editSolution = function(contest_nickname, problem_nickname, solution_nickname, solution) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname,\r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.deleteSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('runService', runService);\r\n\r\n/** @ngInject */\r\nfunction runService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.runSolutions = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/run/solutions', \r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.results;\r\n        });\r\n    };\r\n\r\n    service.runCheckers = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/run/checkers', \r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.results;\r\n        });\r\n    };\r\n\r\n    service.getValidatedTestCases = function(problem, runs, versions) {\r\n        var test_cases = angular.copy(problem.test_cases);\r\n        var runs = angular.copy(runs).reverse();\r\n\r\n        runs.forEach(function(run) {\r\n            if(hasCriticalAfter(versions, run.timestamp)) {\r\n                return;\r\n            }\r\n\r\n            for(var i=0; i<test_cases.length; i++) {\r\n                if(test_cases[i]._id == run.test_case_id) {\r\n                    if(!hasCriticalAfter(test_cases[i].v, run.timestamp)\r\n                    && run.verdict == 'Accepted') {\r\n                        test_cases.splice(i, 1);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        return problem.test_cases.length - test_cases.length;\r\n    };\r\n\r\n    function hasCriticalAfter(versions, timestamp) {\r\n        return versions.some(function(version) {\r\n            return version.critical && moment(version.timestamp).isAfter(timestamp);\r\n        });\r\n    }\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('problemService', problemService);\r\n\r\n/** @ngInject */\r\nfunction problemService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.createProblem = function(contest_nickname, problem) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem', \r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.editProblem = function(contest_nickname, problem_nickname, problem) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname,\r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.deleteProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n\r\n    service.downloadProblemFile = function(contest_nickname, problem_nickname, versionId) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file'\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.getUploadProblemFileSignedUrl = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file',\r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.uploadProblemFile = function(contest_nickname, problem_nickname, data) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file',\r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.deleteProblemFile = function(contest_nickname, problem_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file'\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('logService', logService);\r\n\r\n/** @ngInject */\r\nfunction logService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getLogs = function() {\r\n        return $http.get(apiUrl + 'log')\r\n        .then(function(result) {\r\n            return result.data.logs;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('downloadService', downloadService);\r\n\r\n/** @ngInject */\r\nfunction downloadService($document) {\r\n    var service = this;\r\n\r\n    service.download = function(url, popupWindow) {\r\n\t\tvar body = $document.find('body').eq(0);\r\n\t\tvar link = angular.element(\r\n\t\t\t'<a ' +\r\n\t\t\t'id=\"temp_link\" ' +\r\n\t\t\t'download ' +\r\n\t\t\t'href=\"' + url + '\" ' +\r\n\t\t\t'style=\"display: none;\" ' +\r\n\t\t\t(popupWindow ? 'target=\"_blank\" ' : '') +\r\n\t\t\t'>link</a>'\r\n\t\t);\r\n\t\tbody.append(link);\r\n\t\tlink[0].click();\r\n\t\tlink.remove();\r\n\t};\r\n\r\n    return service;\r\n}\r\n\r\n})();\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contributorService', contributorService);\r\n\r\n/** @ngInject */\r\nfunction contributorService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.createContributor = function(contest_nickname, user) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor',\r\n            user\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContributor = function(contest_nickname, user_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor/' + user_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contestService', contestService);\r\n\r\n/** @ngInject */\r\nfunction contestService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getContests = function(show_deleted) {\r\n        return $http.get(apiUrl + 'contest' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.contests;\r\n        });\r\n    };\r\n\r\n    service.getContest = function(nickname) {\r\n        return $http.get(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.createContest = function(contest) {\r\n        return $http.post(apiUrl + 'contest', contest)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContest = function(nickname) {\r\n        return $http.delete(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.generateBocaZip = function(nickname, data) {\r\n        return $http.post(apiUrl + 'contest/' + nickname + '/boca', data)\r\n        .then(function(result) {\r\n            return result.data.bocaZip;\r\n        });\r\n    };\r\n\r\n    service.downloadBocaZip = function(nickname, versionId) {\r\n        return $http.get(apiUrl + 'contest/' + nickname + '/boca/download')\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('checkerService', checkerService);\r\n\r\n/** @ngInject */\r\nfunction checkerService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getChecker = function(contest_nickname, problem_nickname, checker_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.createChecker = function(contest_nickname, problem_nickname, checker) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker', \r\n            checker\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.editChecker = function(contest_nickname, problem_nickname, checker_nickname, checker) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname,\r\n            checker\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.deleteChecker = function(contest_nickname, problem_nickname, checker_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authService', authService);\r\n\r\n/** @ngInject */\r\nfunction authService($q, $http, $window, apiUrl) {\r\n    var service = this;\r\n\r\n    service.login = function(username, password) {\r\n        return $http.post(apiUrl + 'login', {\r\n        \tusername: username,\r\n        \tpassword: password\r\n        })\r\n            .then(function(response) {\r\n                var token = response.data.token;\r\n\r\n                $window.localStorage.setItem('token', token);\r\n                service.setHeaderToken(token);\r\n\r\n                return $q.resolve(response.data);\r\n            });\r\n    };\r\n\r\n    service.logout = function() {\r\n        $window.localStorage.removeItem('token');\r\n        service.unsetHeaderToken();\r\n    };\r\n\r\n    service.setHeaderToken = function(token) {\r\n        $http.defaults.headers.common['x-access-token'] = token;\r\n    };\r\n\r\n    service.unsetHeaderToken = function() {\r\n        delete $http.defaults.headers.common['x-access-token'];\r\n    };\r\n\r\n    service.me = function() {\r\n        return $http.get(apiUrl + 'me')\r\n        .then(function(response) {\r\n            return response.data.me;\r\n        });\r\n    };\r\n\r\n    service.isLogged = function() {\r\n        return !!$window.localStorage.getItem('token');\r\n    };\r\n\r\n    service.getToken = function() {\r\n        return $window.localStorage.getItem('token');\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .controller('MainController', MainController);\n\n/** @ngInject */\nfunction MainController() {\n    var vm = this;\n\n    vm.init = function() {\n    };\n\n    vm.init();\n    return vm;\n}\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('LoginController', LoginController);\r\n\r\n/** @ngInject */\r\nfunction LoginController($route, $filter, $location, authService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tif(authService.isLogged()) {\r\n    \t\t$location.path($filter('url', 'main'));\r\n    \t}\r\n\r\n        var queryMessage = $location.search().message;\r\n        if(queryMessage) {\r\n            switch(queryMessage) {\r\n                case 'access_denied':\r\n                    vm.errorMessage = 'Acesso negado.';\r\n                    break;\r\n\r\n                case 'token_expired':\r\n                    vm.errorMessage = 'Acesso expirado. Refaça seu login.';\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.submit = function() {\r\n    \tauthService.login(vm.form.username, vm.form.password)\r\n    \t.then(function(data) {\r\n    \t\t$route.reload();\r\n    \t})\r\n    \t.catch(function(err) {\r\n    \t\tconsole.log(err);\r\n    \t});\r\n    };\r\n\r\n    vm.init();\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authInterceptor', authInterceptor);\r\n\r\n/** @ngInject */\r\nfunction authInterceptor($q, $injector) {\r\n    var interceptor = this;\r\n\r\n    interceptor.responseError = function(response) {\r\n        if(response.status == 500 && response.data.error == \"TokenExpiredError: jwt expired\") {\r\n            $injector.get('authService').logout();\r\n            return $q.reject(response);\r\n        } else {\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n\r\n    return interceptor;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n\t.module('front')\n\t.run(setToken);\n\n/** @ngInject */\nfunction setToken($http, $window, authService) {\n    var token = $window.localStorage.getItem('token');\n\n    if(token) {\n    \tauthService.setHeaderToken(token);\n    }\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .config(routeConfig)\n  .controller('AppController', AppController);\n\n/** @ngInject */\nfunction routeConfig(frontUrls, $routeProvider, $locationProvider, $httpProvider) {\n    $httpProvider.interceptors.push('authInterceptor');\n\n\n    $routeProvider\n\n    /* main */\n    .when(frontUrls.urls.main, {\n        templateUrl : 'app/main/main.html',\n        controller  : 'MainController',\n        controllerAs: 'vm'\n    })\n\n\n    /* login */\n    .when(frontUrls.urls.login, {\n        templateUrl : 'app/login/login.html',\n        controller  : 'LoginController',\n        controllerAs: 'vm'\n    })\n\n\n    /* invitations */\n    .when(frontUrls.urls.invitation.regular, {\n        templateUrl : 'app/invitations/regular/regular-invitation.html',\n        controller  : 'RegularInvitationController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeUser: getUserById\n        }\n    })\n\n\n    /* logs */\n    .when(frontUrls.urls.log, {\n        templateUrl : 'app/logs/view-all/view-all-logs.html',\n        controller  : 'ViewAllLogsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* users */\n    .when(frontUrls.urls.user.new, {\n        templateUrl : 'app/users/create/create-user.html',\n        controller  : 'CreateUserController',\n        controllerAs: 'vm'\n    })\n    .when(frontUrls.urls.user.view, {\n        templateUrl : 'app/users/view/view-user.html',\n        controller  : 'ViewUserController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe:   getMe,\n            routeUser: getUser\n        }\n    })\n    .when(frontUrls.urls.user.list, {\n        templateUrl : 'app/users/view-all/view-all-users.html',\n        controller  : 'ViewAllUsersController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contests */\n    .when(frontUrls.urls.contest.new, {\n        templateUrl : 'app/contests/create/create-contest.html',\n        controller  : 'CreateContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n    .when(frontUrls.urls.contest.view, {\n        templateUrl : 'app/contests/view/view-contest.html',\n        controller  : 'ViewContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe:      getMe,\n            routeContest: getContest\n        }\n    })\n    .when(frontUrls.urls.contest.list, {\n        templateUrl : 'app/contests/view-all/view-all-contests.html',\n        controller  : 'ViewAllContestsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contributors */\n    .when(frontUrls.urls.contest.contributor.new, {\n        templateUrl : 'app/contributors/create/create-contributor.html',\n        controller  : 'CreateContributorController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest\n        }\n    })\n\n\n    /* problems */\n    .when(frontUrls.urls.contest.problem.new, {\n        templateUrl : 'app/problems/create/create-problem.html',\n        controller  : 'CreateProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest\n        }\n    })\n    .when(frontUrls.urls.contest.problem.view, {\n        templateUrl : 'app/problems/view/view-problem.html',\n        controller  : 'ViewProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.edit, {\n        templateUrl : 'app/problems/edit/edit-problem.html',\n        controller  : 'EditProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    /* solutions */\n    .when(frontUrls.urls.contest.problem.solution.new, {\n        templateUrl : 'app/solutions/create/create-solution.html',\n        controller  : 'CreateSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.view, {\n        templateUrl : 'app/solutions/view/view-solution.html',\n        controller  : 'ViewSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest:  getContest,\n            routeProblem:  getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.edit, {\n        templateUrl : 'app/solutions/edit/edit-solution.html',\n        controller  : 'EditSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest:  getContest,\n            routeProblem:  getProblem,\n            routeSolution: getSolution\n        }\n    })\n\n\n    /* checkers */\n    .when(frontUrls.urls.contest.problem.checker.new, {\n        templateUrl : 'app/checkers/create/create-checker.html',\n        controller  : 'CreateCheckerController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checker.view, {\n        templateUrl : 'app/checkers/view/view-checker.html',\n        controller  : 'ViewCheckerController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checker.edit, {\n        templateUrl : 'app/checkers/edit/edit-checker.html',\n        controller  : 'EditCheckerController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n\n\n    /* test cases */\n    .when(frontUrls.urls.contest.problem.testCase.new, {\n        templateUrl : 'app/testCases/create/create-testCase.html',\n        controller  : 'CreateTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.view, {\n        templateUrl : 'app/testCases/view/view-testCase.html',\n        controller  : 'ViewTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeTestCase: getTestCase\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.edit, {\n        templateUrl : 'app/testCases/edit/edit-testCase.html',\n        controller  : 'EditTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeTestCase: getTestCase\n        }\n    })\n\n\n    /* solution runs */\n    .when(frontUrls.urls.contest.problem.solution.run.list, {\n        templateUrl : 'app/solutions/runs/list/solution-runs.html',\n        controller  : 'ViewSolutionRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.run.view, {\n        templateUrl : 'app/solutions/runs/view/solution-run.html',\n        controller  : 'ViewSolutionRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.list, {\n        templateUrl : 'app/solutionsRuns/list/solutionRuns-list.html',\n        controller  : 'ViewProblemSolutionRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.view, {\n        templateUrl : 'app/solutionsRuns/view/view-solutionRun.html',\n        controller  : 'ViewProblemSolutionRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    /* checker runs */\n    .when(frontUrls.urls.contest.problem.checker.run.list, {\n        templateUrl : 'app/checkers/runs/list/checker-runs.html',\n        controller  : 'ViewCheckerRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checker.run.view, {\n        templateUrl : 'app/checkers/runs/view/checker-run.html',\n        controller  : 'ViewCheckerRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checkerRun.list, {\n        templateUrl : 'app/checkersRuns/list/checkerRuns-list.html',\n        controller  : 'ViewProblemCheckerRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checkerRun.view, {\n        templateUrl : 'app/checkersRuns/view/view-checkerRun.html',\n        controller  : 'ViewProblemCheckerRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    .otherwise({\n        redirectTo: '/'\n    });\n\n\n    $locationProvider.html5Mode(true);\n}\n\n/** @ngInject */\nfunction AppController($rootScope, $location, $filter) {\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n        if(rejection && rejection.data && rejection.data.error) {\n            switch(rejection.data.error) {\n                case 'Access denied':\n                    $location.search('message', 'access_denied');\n                    $location.path($filter('url')('login'));\n                    break;\n                \n                case 'TokenExpiredError: jwt expired':\n                    $location.search('message', 'token_expired');\n                    $location.path($filter('url')('login'));\n                    return;\n\n                default:\n                    $location.path($filter('url')('login'));\n                    return;\n            }\n        }\n\n        $location.path($filter('url')('login'));\n    });\n}\n\nfunction getMe(authService) {\n    return authService.me();\n}\n\nfunction getUser($route, frontUrls, userService) {\n    return userService.getUser(\n        $route.current.params[frontUrls.paramKeys.user]\n    );\n}\n\nfunction getUserById($route, frontUrls, userService) {\n    return userService.getUserById(\n        $route.current.params[frontUrls.paramKeys.user_id]\n    );\n}\n\nfunction getContest($route, frontUrls, contestService) {\n    return contestService.getContest(\n        $route.current.params[frontUrls.paramKeys.contest]\n    );\n}\n\nfunction getProblem($route, frontUrls, problemService) {\n    return problemService.getProblem(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem]\n    );\n}\n\nfunction getSolution($route, frontUrls, solutionService) {\n    return solutionService.getSolution(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.solution]\n    );\n}\n\nfunction getChecker($route, frontUrls, checkerService) {\n    return checkerService.getChecker(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.checker]\n    );\n}\n\nfunction getTestCase($route, frontUrls, testCaseService) {\n    return testCaseService.getTestCase(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.testCase]\n    );\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.directive('ngTransclude', customNgTransclude);\r\n\r\n/** @ngInject */\r\nfunction customNgTransclude() {\r\n    return {\r\n        restrict: 'EAC',\r\n        link: function($scope, $element, $attrs, controller, $transclude) {\r\n            if(!$transclude) {\r\n                throw minErr('ngTransclude')(\r\n\t\t\t\t\t'orphan',\r\n\t\t\t\t\t'Illegal use of ngTransclude directive in the template! ' +\r\n\t\t\t\t\t'No parent directive that requires a transclusion found. ' +\r\n\t\t\t\t\t'Element: {0}',\r\n\t\t\t\t\tstartingTag($element)\r\n\t\t\t\t);\r\n            }\r\n\r\n            var iScopeType = $attrs['ngTransclude'] || 'sibling';\r\n\r\n            switch(iScopeType) {\r\n                case 'sibling':\r\n                    $transclude(function(clone) {\r\n                        $element.append(clone);\r\n                    });\r\n                    break;\r\n\r\n                case 'parent':\r\n                    $transclude($scope, function(clone) {\r\n                        if(clone.length) {\r\n                            $element.append(clone);\r\n                        }\r\n                    });\r\n                    break;\r\n\r\n                case 'child':\r\n                    var iChildScope = $scope.$new();\r\n                    $transclude(iChildScope, function(clone) {\r\n                        $element.append(clone);\r\n                        $element.on('$destroy', function() {\r\n                            iChildScope.$destroy();\r\n                        });\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.filter('url', url)\r\n\t.filter('myDate', myDate);\r\n\r\n/** @ngInject */\r\nfunction url(urlService) {\r\n\treturn function(input) {\r\n\t\tvar args = [];\r\n\t\tfor(var i=1; i<arguments.length; i++) {\r\n\t\t\targs.push(arguments[i]);\r\n\t\t}\r\n\r\n\t\treturn urlService.getUrl(input, args);\r\n\t};\r\n}\r\n\r\n/** @ngInject */\r\nfunction myDate() {\r\n\treturn function(input) {\r\n\t\tvar currentDate = moment(),\r\n\t\t\tinputDate   = moment(input);\r\n\r\n\t\tif(inputDate.isBefore(currentDate)) {\r\n\t\t\tvar diffInMinutes = currentDate.diff(inputDate, 'minutes', true),\r\n\t\t\t\tdiffInHours   = currentDate.diff(inputDate, 'hours', true),\r\n\t\t\t\tdiffInDays    = currentDate.diff(inputDate, 'days', true),\r\n\t\t\t\tdiffInMonths  = currentDate.diff(inputDate, 'months', true);\r\n\r\n\t\t\tif(diffInMinutes <= 1) {\r\n\t\t\t\treturn 'agora';\r\n\t\t\t} else if(diffInHours < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMinutes) + ' minuto' + (diffInMinutes >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInDays < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInHours) + ' hora' + (diffInHours >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInMonths < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInDays) + ' dia' + (diffInDays >= 2 ? 's' : '');\r\n\t\t\t} else {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMonths) + ' mes' + (diffInMonths >= 2 ? 's' : '');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t}\r\n\t}\r\n}\r\n\r\n})();\r\n\n/* global moment:false */\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .constant('moment', moment)\n    .constant('PromiseProcess', promiseProcess)\n    // .constant('apiUrl', 'http://localhost:3010/api/v1/')\n    .constant('apiUrl', 'http://contestbuilder.ddns.net/api/v1/')\n    .constant('languages', languages())\n    .constant('verdicts', verdicts())\n    .constant('frontUrls', frontUrls());\n\n// list of languages\nfunction languages() {\n\treturn [{\n\t\tlabel: 'Outra',\n\t\tvalue: 'other'\n\t}, {\n\t\tlabel: 'C++',\n\t\tvalue: 'cpp'\n\t}, {\n\t\tlabel: 'C',\n\t\tvalue: 'c'\n\t}];\n}\n\n// list of verdicts\nfunction verdicts() {\n\treturn [{\n\t\tlabel: 'Other',\n\t\tshort: 'Other',\n\t\tvalue: 'Other'\n\t}, {\n\t\tlabel: 'Accepted',\n\t\tshort: 'AC',\n\t\tvalue: 'Accepted'\n\t}, {\n\t\tlabel: 'Presentation error',\n\t\tshort: 'PE',\n\t\tvalue: 'Presentation error'\n\t}, {\n\t\tlabel: 'Wrong answer',\n\t\tshort: 'WA',\n\t\tvalue: 'Wrong answer'\n\t}, {\n\t\tlabel: 'Time limit exceeded',\n\t\tshort: 'TLE',\n\t\tvalue: 'Time limit exceeded'\n\t}, {\n\t\tlabel: 'Compilation error',\n\t\tshort: 'CE',\n\t\tvalue: 'Compilation error'\n\t}];\n}\n\n// list of urls\nfunction frontUrls() {\n\tvar paramKeys = {\n\t\tuser:        'user_nickname',\n\t\tcontest:     'contest_nickname',\n\t\tproblem:     'problem_nickname',\n\t\tsolution:    'solution_nickname',\n\t\tchecker:     'checker_nickname',\n\t\ttestCase:    'test_case_id',\n\t\tsolutionRun: 'run_number',\n\t\tuser_id:     'user_id'\n\t};\n\n\tvar urls = {\n\t\tmain:  '/',\n\t\tlogin: '/login',\n\t\tlog:   '/logs',\n\t\tuser:  {\n\t\t\tnew:  '/users/new',\n\t\t\tview: '/users/:user_nickname',\n\t\t\tlist: '/users'\n\t\t},\n\t\tinvitation: {\n\t\t\tregular: '/invitation/:user_id'\n\t\t},\n\t\tcontest: {\n\t\t\tnew:  '/contests/new',\n\t\t\tview: '/contests/:contest_nickname',\n\t\t\tlist: '/contests',\n\n\t\t\tcontributor: {\n\t\t\t\tnew: '/contests/:contest_nickname/contributors/new'\n\t\t\t},\n\n\t\t\tproblem: {\n\t\t\t\tnew:  '/contests/:contest_nickname/problems/new',\n\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname',\n\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/edit',\n\n\t\t\t\tsolution: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/solutions/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/edit',\n\n\t\t\t\t\trun: {\n\t\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs',\n\t\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs/:run_number'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tchecker: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/checkers/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/edit',\n\n\t\t\t\t\trun: {\n\t\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/runs',\n\t\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/runs/:run_number'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\ttestCase: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/test_cases/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id/edit'\n\t\t\t\t},\n\n\t\t\t\tsolutionRun: {\n\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs/:run_number'\n\t\t\t\t},\n\n\t\t\t\tcheckerRun: {\n\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/checker_runs',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checker_runs/:run_number'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\tparamKeys: paramKeys,\n\t\turls:      urls\n\t};\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .config(removeNgTransclude);\n\n/** @ngInject */\nfunction removeNgTransclude($provide) {\n    $provide.decorator('ngTranscludeDirective', ['$delegate', function ($delegate) {\n        $delegate.shift();\n        return $delegate;\n    }]);\n}\n\n})();\n\nangular.module(\"front\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/login/login.html\",\"<navbar></navbar><alert-inactive ng-if=vm.errorMessage msg=vm.errorMessage></alert-inactive><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Login</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=loginForm ng-submit=vm.submit();><div class=form-group><input type=text name=username ng-model=vm.form.username class=form-control id=login-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><input type=password name=password ng-model=vm.form.password class=form-control id=login-password placeholder=Senha ng-required=true></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=loginForm.$invalid>Login</button></form></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<navbar></navbar><div class=jumbotron><div class=container><h1 class=display-3>Olá!</h1><p>This is a template for a simple marketing or informational website. It includes a large callout called a jumbotron and three supporting pieces of content. Use it as a starting point to create something more unique.</p><p><a class=\\\"btn btn-primary btn-lg\\\" href=/login role=button>Faça login &raquo;</a></p></div></div><div class=container><div class=row><div class=col-12><p>Testing</p></div></div></div>\");\n$templateCache.put(\"app/checkers/edit/edit-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar checker</h1></div></div><div class=row><div class=col-12><form novalidate name=checkerForm ng-submit=vm.submit(vm.form);><p>{{ vm.checker.name }}</p><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=checker-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=checker-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.checker.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.checker.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=checkerForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/checkers/create/create-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'o checker\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo checker</h1></div></div><div class=row><div class=col-12><form novalidate name=checkerForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest_nickname : vm.problem_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=checkerForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/checkers/view/view-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker></breadcrumbs><div id=view-checker><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Linguagem: {{ vm.checker.current.language.label }}</p></div></div><div class=row><div class=col-12><p>Código fonte:</p><pre>{{ vm.checker.current.source_code }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.checker.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.checker.nickname }}\\\">Editar checker</a></div></div></div></div>\");\n$templateCache.put(\"app/components/alert-inactive/alert-inactive.html\",\"<div id=alert-inactive class=\\\"alert alert-danger\\\" role=alert><strong>{{ vm.msg }}</strong></div>\");\n$templateCache.put(\"app/components/breadcrumbs/breadcrumbs.html\",\"<div class=container><div class=row><div class=col-12><nav class=breadcrumb><a ng-repeat=\\\"item in vm.items\\\" class=breadcrumb-item ng-href=\\\"{{ item.url }}\\\">{{ item.label }}</a> <span class=\\\"breadcrumb-item active\\\">{{ vm.activeItem.label }}</span></nav></div></div></div>\");\n$templateCache.put(\"app/components/generic-list/generic-list.html\",\"<div class=generic-list><div ng-if=list.items.length class=\\\"row header-row\\\"><div ng-repeat=\\\"header in list.headers\\\" class=header-col ng-class=header.class>{{ header.label }}</div></div><div ng-repeat=\\\"item in list.items\\\" ng-transclude=parent class=item></div><div ng-if=!list.items.length class=row><div class=col-12><p>{{ list.noItemsMessage }}</p></div></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-toggleable-md navbar-inverse bg-inverse\\\"><button class=\\\"navbar-toggler navbar-toggler-right\\\" type=button data-toggle=collapse data-target=#navbarsExampleDefault aria-controls=navbarsExampleDefault aria-expanded=false aria-label=\\\"Toggle navigation\\\" ng-click=vm.toggleMobileMenu()><span class=navbar-toggler-icon></span></button> <a class=navbar-brand href=/ >Contest Builder</a><div class=\\\"collapse navbar-collapse\\\" id=navbarsExampleDefault ng-class=\\\"{ \\'show\\': !vm.menuCollapsed }\\\"><ul class=\\\"navbar-nav mr-auto\\\"><li ng-repeat=\\\"link in vm.mainLinks\\\" class=nav-item ng-class=\\\"{ \\'active\\': link.active }\\\"><a class=nav-link ng-href=\\\"{{ link.urlPath | url }}\\\">{{ link.label }}</a></li></ul><div class=\\\"my-2 my-md-0\\\"><a ng-if=!vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" role=button ng-href=\\\"{{ \\'login\\' | url }}\\\">Login</a> <button ng-if=vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=button ng-click=vm.logout();>Logout</button></div></div></nav>\");\n$templateCache.put(\"app/components/run-result-table/run-result-table.html\",\"<div class=row><div class=col-12><table class=\\\"table table-sm\\\"><thead><tr><th></th><th ng-repeat=\\\"test_case in vm.testCases\\\">#{{ test_case.current.order }}</th></tr></thead><tbody><tr ng-repeat=\\\"item in vm.items\\\"><td>{{ item.name }}</td><td ng-repeat=\\\"test_case in vm.testCases\\\"><span ng-if=\\\"vm.getTestCaseRun(vm.runs, item._id, test_case._id)\\\" ng-click=\\\"vm.selectRun(vm.runs, item._id, test_case._id)\\\">{{ vm.getTestCaseRun(vm.runs, item._id, test_case._id).verdict.short }}</span></td></tr></tbody></table></div></div><div class=row ng-if=vm.selectedRun><div class=col-12><p><span><strong>{{ vm.selectedRun.item.name }} / #{{ vm.selectedRun.test_case.current.order }}</strong> </span><span style=\\\"float: right\\\"><i class=\\\"fa fa-times\\\" aria-hidden=true ng-click=vm.unselectRun()></i></span></p><p><strong>Veredito:</strong> {{ vm.selectedRun.verdict.label }}</p></div><div class=col-6><p><strong>Saída esperada:</strong></p><pre>{{ vm.customExpectedOutput ? vm.customExpectedOutput : vm.selectedRun.test_case.current.output }}</pre></div><div class=col-6><p><strong>Saída:</strong></p><pre>{{ vm.selectedRun.output }}</pre></div></div><div class=row ng-if=!vm.selectedRun><div class=col-12><p>Selecione um item da tabela para ver mais detalhes.</p></div></div>\");\n$templateCache.put(\"app/components/single-attachment/single-attachment.html\",\"<button ng-if=!vm.file type=file ngf-select=\\\"vm.uploadFile($file, $invalidFiles)\\\" accept=\\\"\\'*\\'\\\" ngf-max-size=4MB class=\\\"btn btn-link\\\">Adicionar arquivo</button> <button ng-if=vm.file type=button class=\\\"btn btn-link\\\" ng-click=vm.downloadFile();>{{ vm.file.name }}</button> <span ng-if=vm.file ng-click=vm.removeFile();>x</span> <img ng-if=vm.loading src=assets/images/loading.gif><p ng-if=vm.err>{{ vm.err }}</p>\");\n$templateCache.put(\"app/components/runs-list/runs-list.html\",\"<div class=runs-list><div class=row ng-repeat=\\\"run in vm.solutionRuns\\\"><div class=col-12><p><a ng-href=\\\"{{ vm.getLink(run.run_number) }}\\\">Execução {{ run.run_number }}</a> - {{ run.timestamp | myDate }}</p></div></div></div>\");\n$templateCache.put(\"app/checkersRuns/list/checkerRuns-list.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/checkersRuns/view/view-checkerRun.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.checkerRun.list\\', vm.contest.nickname, vm.problem.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=view-checkerRun><div class=container><div class=row><div class=col-12><h2 class=page-title>Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem checkers=true test-cases=vm.problem.test_cases run-number=vm.runNumber custom-expected-output=\\\"\\'ok\\\\n\\'\\\"></run-result-table></div></div>\");\n$templateCache.put(\"app/contests/create/create-contest.html\",\"<navbar></navbar><breadcrumbs contests=true new=\\\"\\'o contest\\'\\\"></breadcrumbs><div id=create-contest class=container><div class=row><div class=col-12><h1 class=page-title>Criar contest</h1></div></div><div class=row><div class=\\\"col-sm-12 col-lg-6\\\"><form novalidate name=contestForm ng-submit=vm.submit();><div class=form-group><label for=contest-name>Nome</label><input type=text name=name ng-model=vm.form.name class=form-control id=contest-name placeholder=\\\"Super Contest 2017\\\" ng-required=true></div><div class=form-group><label class=form-label-static for=contest-name>Autor</label><p>{{ vm.me.username }}</p></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"{{ \\'contest.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=contestForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/contests/view/view-contest.html\",\"<navbar></navbar><alert-inactive ng-if=vm.contest.deleted_at msg=\\\"\\'Este contest está inativo.\\'\\\"></alert-inactive><breadcrumbs contests=true contest=vm.contest></breadcrumbs><div id=view-contest><div class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.contest.name }}</h1></div></div><!-- info --><div class=row><div class=col-12><p>Autor: <a ng-href=\\\"{{ \\'user.view\\' | url : vm.contest.author.username }}\\\">{{ vm.contest.author.username }}</a></p></div></div><div class=row><div class=col-12><p>Criado em: <span>{{ vm.contest.created_at | date:\\'dd/MM/yyyy\\' }}</span></p></div></div></div><!-- contributors list --><div class=\\\"container contributors-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Contribuidores:</h4><a ng-if=!vm.contest.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.contributor.new\\' | url : vm.contest.nickname }}\\\">Adicionar contribuidor</a></div></div><generic-list items=vm.contest.contributors no-items-message=\\\"\\'Nenhum contribuidor cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }}</a></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_contributor\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteContributor(item) modal-confirm-title=\\\"\\'Remover contribuidor\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este contribuidor?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- problems list --><div class=\\\"container problems-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Problemas:</h4><a ng-if=!vm.contest.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.new\\' | url : vm.contest.nickname }}\\\">Adicionar problema</a></div></div><generic-list items=vm.problemsList no-items-message=\\\"\\'Nenhum problema cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.view\\' | url : list.parent.contest.nickname : item.nickname }}\\\">{{ item.name }}</a> <span ng-if=item.deleted_at>(Removido em {{ item.deleted_at | date:\\'dd/MM/yyyy\\' }})</span></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_problem\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteProblem(item) modal-confirm-title=\\\"\\'Remover problema\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este problema?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- boca zip list --><div class=\\\"container boca-list\\\"><div class=row><div class=col-12><h4>Exportar arquivos:</h4></div></div><div class=row ng-if=!vm.latestBocaZip><div class=col-12><p>Contest ainda não foi exportado.</p></div></div><div class=row ng-if=vm.latestBocaZip><div class=col-12><p>Data da última exportação: {{ vm.latestBocaZip.timestamp | date : \\'dd/MM/yyyy HH:mm\\' }}</p></div></div><div class=row><div class=col-12><button type=button class=\\\"btn btn-primary\\\" ng-click=vm.generateZip();><i class=\\\"fa fa-file-archive-o\\\" aria-hidden=true></i> Exportar</button> <button ng-if=vm.latestBocaZip type=button class=\\\"btn btn-primary\\\" ng-click=vm.downloadZip(vm.latestBocaZip.versionId);><i class=\\\"fa fa-download\\\" aria-hidden=true></i> Download</button></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row ng-if=\\\"!vm.contest.deleted_at && vm.me.permissions && vm.me.permissions.delete_contest\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteContest(problem) modal-confirm-title=\\\"\\'Desativer contest\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este contest?\\'\\\">Desativar contest</button></div></div></div></div>\");\n$templateCache.put(\"app/contributors/create/create-contributor.html\",\"<navbar></navbar><div class=container><div class=row><div class=col-12><h1 class=page-title>Adicionar novo contribuidor</h1></div></div><div class=row><div class=col-12 ng-if=vm.loading><p>Carregando.</p></div><div class=col-12 ng-if=\\\"!vm.loading && !vm.usersList.length\\\"><p>Não há mais quem adicionar.</p></div><div class=\\\"col-12 col-lg-6\\\" ng-if=\\\"!vm.loading && !!vm.usersList.length\\\"><form novalidate name=userForm ng-submit=vm.submit();><div class=form-group><select name=user ng-model=vm.form.user ng-options=\\\"user as user.username for user in vm.usersList\\\" class=form-control id=contributor-user placeholder=\\\"Nome de usuário\\\" ng-required=true></select></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/contests/view-all/view-all-contests.html\",\"<navbar></navbar><breadcrumbs contests=true></breadcrumbs><div id=view-all-contests><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de contests</h1></div></div></div><div class=\\\"container contest-list\\\"><generic-list items=vm.contestList no-items-message=\\\"\\'Nenhum contest cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',      class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',     class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Criado em\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.view\\' | url : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-4><p>{{ item.created_at | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.new\\' | url }}\\\">Criar contest</a></div></div></div></div>\");\n$templateCache.put(\"app/invitations/regular/regular-invitation.html\",\"<navbar></navbar><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Faça seu cadastro</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=invitationForm ng-submit=vm.submit(vm.form);><div class=form-group><label class=form-label-static for=contest-name>E-mail</label><p>{{ vm.form.email }}</p></div><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=username ng-model=vm.form.username class=form-control id=user-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><label for=user-password>Senha</label><input type=password name=password ng-model=vm.form.password class=form-control id=user-password placeholder=Senha ng-required=true></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'main\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=invitationForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/logs/view-all/view-all-logs.html\",\"<navbar></navbar><div id=view-all-logs><div class=container><div class=row><div class=col-12><h1 class=page-title>Histórico</h1></div></div></div><div class=\\\"container log-list\\\"><generic-list items=vm.logsList no-items-message=\\\"\\'Nenhum log registrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Contest\\',  class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',    class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Mensagem\\', class: \\'col-6\\' },\\r\\n\t\t\t\t{ label: \\'Data\\',     class: \\'col-2\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-2><a ng-href=\\\"{{ \\'contest.view\\' | url : item.contest.nickname }}\\\">{{ item.contest.name }}</a></div><div class=col-2><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-6><p>{{ item.message }}</p></div><div class=col-2><p>{{ item.date | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list></div></div>\");\n$templateCache.put(\"app/problems/create/create-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest new=\\\"\\'o problema\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.view\\' | url : vm.contest_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=problemForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/edit/edit-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"/contests/{{ vm.contest.nickname }}/problems/{{ vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=problemForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/view/view-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem></breadcrumbs><div id=view-problem><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Descrição curta: {{ vm.problem.current.description }}</p></div><div class=col-12><p>Descrição completa:<single-attachment file=vm.problem.file signed-download-callback=vm.getSignedDownloadUrl signed-upload-callback=vm.getSignedUploadUrl after-upload-callback=vm.uploadProblemFile remove-callback=vm.removeProblemFile></single-attachment></p></div><div class=col-12><p>Tempo limite: {{ vm.problem.current.time_limit }}</p></div></div></div><!-- solutions list --><div class=\\\"container solutions-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Soluções:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar solução</a></div></div><generic-list items=vm.problem.solutions no-items-message=\\\"\\'Nenhuma solução cadastrada.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',            class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Casos validados\\', class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\',           class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><span ng-if=!item.validatedTestCases>{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }} </span><a ng-if=item.validatedTestCases ng-href=\\\"{{ \\'contest.problem.solution.run.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname : item.run[ item.run.length-1 ].run_number }}\\\">{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}</a></div><div class=col-4><!-- remover --> <button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteSolution(item) modal-confirm-title=\\\"\\'Remover solução\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover esta solução?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button><!-- validar --> <button class=\\\"btn btn-primary\\\" ng-class=\\\"{ \\'loading-button\\': item.validation && item.validation.status == \\'waiting\\' }\\\" type=button ng-click=list.parent.runSolution($index) ng-disabled=\\\"\\r\\n\t\t\t\t\t\t\titem.validatedTestCases == list.parent.problem.test_cases.length\\r\\n\t\t\t\t\t\t\t|| (item.validation && item.validation.status == \\'waiting\\')\\r\\n\t\t\t\t\t\t\\\"><img ng-if=\\\"item.validation && item.validation.status == \\'waiting\\'\\\" src=assets/images/ripple.svg> <i ng-if=\\\"!item.validation || item.validation.status != \\'waiting\\'\\\" class=\\\"fa fa-check\\\" aria-hidden=true></i></button></div></div><div class=row ng-if=item.validation><div class=col-12><p ng-if=\\\"item.validation.status === \\'waiting\\'\\\">Carregando</p><p ng-if=\\\"item.validation.status === \\'done\\'\\\">{{ item.validation.result.results | json }}</p></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-12><a ng-href=\\\"{{ \\'contest.problem.solutionRun.list\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Ver todas as execuções</a></div></div></div><!-- test cases list --><div class=\\\"container test-cases-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Casos de teste:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar caso de teste</a></div></div><generic-list items=vm.problem.test_cases no-items-message=\\\"\\'Nenhum caso de teste cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'#\\',     class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item._id }}\\\">#{{ $index+1 }}</a></div><div class=col-4><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteTestCase(item) modal-confirm-title=\\\"\\'Remover caso de teste\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este caso de teste?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- checkers list --><div class=\\\"container checkers-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Checkers:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.checker.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar checker</a></div></div><generic-list items=vm.problem.checkers no-items-message=\\\"\\'Nenhum checker cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',            class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Casos validados\\', class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\',           class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.problem.checker.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><span ng-if=!item.validatedTestCases>{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }} </span><a ng-if=item.validatedTestCases ng-href=\\\"{{ \\'contest.problem.checker.run.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname : item.run[ item.run.length-1 ].run_number }}\\\">{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}</a></div><div class=col-4><!-- remover --> <button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteChecker(item) modal-confirm-title=\\\"\\'Remover checker\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este checker?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button><!-- validar --> <button class=\\\"btn btn-primary\\\" ng-class=\\\"{ \\'loading-button\\': item.validation && item.validation.status == \\'waiting\\' }\\\" type=button ng-click=list.parent.runChecker($index) ng-disabled=\\\"\\r\\n\t\t\t\t\t\t\titem.validatedTestCases == list.parent.problem.test_cases.length\\r\\n\t\t\t\t\t\t\t|| (item.validation && item.validation.status == \\'waiting\\')\\r\\n\t\t\t\t\t\t\\\"><img ng-if=\\\"item.validation && item.validation.status == \\'waiting\\'\\\" src=assets/images/ripple.svg> <i ng-if=\\\"!item.validation || item.validation.status != \\'waiting\\'\\\" class=\\\"fa fa-check\\\" aria-hidden=true></i></button></div></div><div class=row ng-if=item.validation><div class=col-12><p ng-if=\\\"item.validation.status === \\'waiting\\'\\\">Carregando</p><p ng-if=\\\"item.validation.status === \\'done\\'\\\">{{ item.validation.result.results | json }}</p></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-12><a ng-href=\\\"{{ \\'contest.problem.checkerRun.list\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Ver todas as execuções</a></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.edit\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Editar problema</a></div></div></div></div>\");\n$templateCache.put(\"app/solutions/create/create-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'a solução\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar nova solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest_nickname : vm.problem_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/edit/edit-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><p>{{ vm.solution.name }}</p><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/view/view-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution></breadcrumbs><div id=view-solution><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Linguagem: {{ vm.solution.current.language.label }}</p></div></div><div class=row><div class=col-12><p>Código fonte:</p><pre>{{ vm.solution.current.source_code }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Editar solução</a></div></div></div></div>\");\n$templateCache.put(\"app/solutionsRuns/list/solutionRuns-list.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutionsRuns/view/view-solutionRun.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solutionRun.list\\', vm.contest.nickname, vm.problem.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=view-solutionRun><div class=container><div class=row><div class=col-12><h2 class=page-title>Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=true test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");\n$templateCache.put(\"app/testCases/create/create-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'o caso de teste\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><!-- for every test case --><div class=row ng-repeat=\\\"testCaseNumber in vm.form.test_cases\\\"><div class=col-12><p>#{{ vm.problem.test_cases.length + 1 + $index }} caso de teste <i class=\\\"fa fa-trash-o\\\" aria-hidden=true uib-tooltip=\\\"Remover caso de teste\\\" ng-if=\\\"vm.form.test_cases.length > 1\\\" ng-click=vm.removeTestCase($index)></i></p></div><!-- input --><div class=col-6><div class=form-group><textarea type=text name=input ng-model=testCaseNumber.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-trim=false rows=6></textarea></div></div><!-- output --><div class=col-6><div class=form-group><textarea type=text name=output ng-model=testCaseNumber.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-trim=false rows=6></textarea></div></div></div><div class=row style=\\\"margin-bottom: 16px\\\"><div class=col-12><button type=button class=\\\"btn btn-secondary\\\" ng-click=vm.addTestCase()>+</button></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=testCaseForm.$invalid>Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/testCases/edit/edit-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem test-case=vm.testCase edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><div class=row><div class=col-6><div class=form-group><textarea type=text name=input ng-model=vm.form.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-trim=false rows=6></textarea></div></div><div class=col-6><div class=form-group><textarea type=text name=output ng-model=vm.form.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-trim=false rows=6></textarea></div></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.testCase._id }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=testCaseForm.$invalid>Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/testCases/view/view-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem test-case=vm.test_case></breadcrumbs><div id=view-test-case><div class=container><div class=row><div class=col-12><h2 class=page-title>#{{ vm.test_case.current.order }} caso de teste</h2></div></div><!-- info --><div class=row><div class=col-6><p>Entrada:</p><pre>{{ vm.test_case.current.input }}</pre></div><div class=col-6><p>Saída:</p><pre>{{ vm.test_case.current.output }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.test_case._id }}\\\">Editar caso de teste</a></div></div></div></div>\");\n$templateCache.put(\"app/users/create/create-user.html\",\"<navbar></navbar><breadcrumbs users=true new=\\\"\\'o usuário\\'\\\"></breadcrumbs><div id=create-user class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo usuário</h1></div></div><div class=row><div class=col-12><form novalidate name=userForm2 ng-submit=vm.submit(); autocomplete=off><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=new-user-username ng-model=vm.form.username class=form-control id=user-username placeholder=programming_rocks_18 ng-required=true></div><div class=form-group><label for=user-email>E-mail</label><input type=email name=new-user-email ng-model=vm.form.email class=form-control id=user-email placeholder=cool_address@gmail.com ng-required=true autocomplete=off></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'user.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/users/view/view-user.html\",\"<navbar></navbar><breadcrumbs users=true user=vm.user></breadcrumbs><alert-inactive ng-if=vm.user.deleted_at msg=\\\"\\'Esta conta de usuário está inativa.\\'\\\"></alert-inactive><div id=view-user class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.user.username }}</h1></div></div><div class=row ng-if=\\\"!vm.user.deleted_at && vm.me.permissions && vm.me.permissions.delete_user\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteUser() modal-confirm-title=\\\"\\'Desativar usuário\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este usuário?\\'\\\">Desativar usuário</button></div></div></div>\");\n$templateCache.put(\"app/users/view-all/view-all-users.html\",\"<navbar></navbar><breadcrumbs users=true></breadcrumbs><div id=view-all-users class=container><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de usuários</h1></div></div></div><div class=\\\"container user-list\\\"><generic-list items=vm.usersList no-items-message=\\\"\\'Nenhum usuário cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\', class: \\'col-12\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-12><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }} </a><span ng-if=item.deleted_at>(Desativado em {{ item.deleted_at | date:\\'dd/MM/yyyy\\' }})</span></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'user.new\\' | url }}\\\">Criar usuário</a></div></div></div></div>\");\n$templateCache.put(\"app/checkers/runs/list/checker-runs.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/checkers/runs/view/checker-run.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.checker.run.list\\', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }} - Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=vm.checkersToShow test-cases=vm.problem.test_cases run-number=vm.runNumber custom-expected-output=\\\"\\'ok\\\\n\\'\\\"></run-result-table></div></div>\");\n$templateCache.put(\"app/components/modal/modal-confirm/modal-confirm.html\",\"<div class=modal-header><h3 class=modal-title id=modal-title>{{ $ctrl.title }}</h3></div><div class=modal-body id=modal-body><p>{{ $ctrl.body }}</p></div><div class=modal-footer><button class=\\\"btn btn-danger\\\" type=button ng-click=$ctrl.cancel()>Cancelar</button> <button class=\\\"btn btn-primary\\\" type=button ng-click=$ctrl.ok()>Confirmar</button></div>\");\n$templateCache.put(\"app/solutions/runs/list/solution-runs.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutions/runs/view/solution-run.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solution.run.list\\', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=vm.solutionsToShow test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");}]);"],"sourceRoot":"/source/"}