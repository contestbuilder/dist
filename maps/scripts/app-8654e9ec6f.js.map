{"version":3,"sources":["scripts/app.js"],"names":["angular","module","ViewSolutionRunController","$routeParams","$filter","utilService","routeContest","routeProblem","routeSolution","vm","this","init","contest","problem","solution","runNumber","run_number","solutionsToShow","solutions","filter","nickname","urlFilter","$inject","controller","ViewSolutionRunsController","runs","copy","run","getRunLink","modalConfirm","$uibModal","$document","ModalConfirmLink","scope","el","attr","ctrl","callback","bind","modalInstance","open","animation","templateUrl","ModalConfirmController","controllerAs","bindToController","result","then","$scope","$uibModalInstance","ok","close","cancel","dismiss","directive","restrict","title","body","link","ViewCheckerRunController","routeChecker","checker","checkersToShow","checkers","ViewCheckerRunsController","ViewAllUsersController","userService","routeMe","me","usersList","getUsers","permissions","delete_user","users","ViewUserController","routeUser","user","deleteUser","username","CreateUserController","$location","submit","createUser","form","email","sendEmailInvitation","path","ViewTestCaseController","testCaseService","routeTestCase","test_case","contest_nickname","problem_nickname","test_case_id","loadMore","inputType","query","getTestCase","current","CreateTestCaseController","Upload","PromiseProcess","test_cases","input","output","currentUploadingCount","addTestCase","push","removeTestCase","index","splice","promiseProcess","forEach","params","inputSignedUrl","input_file_name","file_name","outputSignedUrl","output_file_name","createTestCase","_id","exec","$apply","length","loadTestCaseFromFile","fileType","file","fileReader","FileReader","onload","evt","substr","onerror","readAsText","getSignedDownloadCallback","getDownloadFileSignedUrl","getSignedUploadCallback","getUploadFileSignedUrl","signedUrl","afterUploadCallback","Promise","resolve","removeCallback","deleteFile","data","EditTestCaseController","fillInitialValues","testCase","sample_input","large_input","sample_output","large_output","inputFile","original","name","outputFile","editTestCase","ViewSolutionController","solution_nickname","v","language","getLanguage","EditSolutionController","languages","solutionService","source_code","editSolution","CreateSolutionController","createSolution","ViewProblemSolutionRunsController","reduce","prev","concat","ViewProblemSolutionRunController","ViewProblemController","downloadService","problemService","checkerService","runService","getValidatedTestCases","items","item","undefined","validatedTestCases","deleteSolution","problems","deleteChecker","runSolution","solution_index","validationResult","validation","status","runSolutions","cur","results","getSolution","runChecker","checker_index","runCheckers","getChecker","deleteTestCase","success","getSignedDownloadUrl","downloadProblemFile","getSignedUploadUrl","getUploadProblemFileSignedUrl","uploadProblemFile","removeProblemFile","deleteProblemFile","CreateProblemController","fillDefaultValues","time_limit","createProblem","description","EditProblemController","lastVersion","editProblem","ViewAllLogsController","logService","logsList","getLogs","logs","RegularInvitationController","$route","authService","password","user_id","editUser","login","reload","err","console","log","CreateContributorController","contributorService","contributors","some","contributor","createContributor","ViewAllContestsController","contestService","contestList","getContests","delete_contest","contests","ViewContestController","updateLastBocaZip","bocaZipList","Array","isArray","latestBocaZip","downloadUrl","VersionId","getToken","updateListOfProblems","problemsList","deleted_at","canI","sort","a","b","order","bocaZip","action","obj","author","deleteContributor","deleteProblem","deleteContest","generateZip","problemNicknames","map","generateBocaZip","downloadZip","versionId","downloadBocaZip","download","getProblemLetter","String","fromCharCode","CreateContestController","createContest","singleAttachment","SingleAttachmentController","loading","downloadFile","signedDownloadCallback","removeFile","response","uploadFile","errFiles","$errorMessages","maxSize","fileName","signedUploadCallback","reject","upload","url","method","key","Policy","fields","X-Amz-Algorithm","X-Amz-Credential","X-Amz-Date","X-Amz-Signature","headers","x-access-token","progress","Math","min","parseInt","loaded","total","customAttachText","runsList","RunsListController","solutionRuns","i","newSolutionRun","timestamp","j","getLink","runResultTable","RunResultTableController","solutionRun","itemRun","testCases","indexOf","testCaseRunMap","selectRun","item_id","selectedRun","getTestCaseRun","unselectRun","testCaseRun","verdict","getVerdict","customExpectedOutput","navbar","NavbarController","getMainLinks","links","label","urlPath","active","menuCollapsed","isLogged","mainLinks","logout","toggleMobileMenu","genericList","$compile","GenericListController","list","transclude","noItemsMessage","parent","breadcrumbs","BreadcrumbsController","edit","extra","activeItem","pop","new","alertInactive","AlertInactiveController","msg","ViewProblemCheckerRunController","ViewProblemCheckerRunsController","ViewCheckerController","checker_nickname","CreateCheckerController","createChecker","EditCheckerController","editChecker","verdicts","service","languageValue","l","value","verdictValue","getValueFromObj","dotIndex","prefix","suffix","$http","apiUrl","show_deleted","get","getUser","getUserById","post","put","urlService","frontUrls","getUrl","args","urls","arg","replace","hasCriticalAfter","versions","version","critical","moment","isAfter","reverse","getProblem","popupWindow","filename","find","eq","element","append","click","remove","getContest","$q","$window","token","localStorage","setItem","setHeaderToken","removeItem","unsetHeaderToken","defaults","common","getItem","MainController","authInterceptor","$injector","interceptor","responseError","error","LoginController","queryMessage","search","message","errorMessage","setToken","routeConfig","$routeProvider","$locationProvider","$httpProvider","interceptors","when","main","invitation","regular","getMe","view","checkerRun","otherwise","redirectTo","html5Mode","AppController","$rootScope","$on","event","previous","rejection","paramKeys","config","customNgTransclude","$element","$attrs","$transclude","minErr","startingTag","iScopeType","clone","iChildScope","$new","on","$destroy","arguments","myDate","currentDate","inputDate","isBefore","diffInMinutes","diff","diffInHours","diffInDays","diffInMonths","floor","short","constant","removeNgTransclude","$provide","decorator","$delegate","shift","$templateCache"],"mappings":"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","file":"scripts/app-8654e9ec6f.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('front', [\n    \t'ngAnimate',\n    \t'ngCookies',\n    \t'ngTouch',\n    \t'ngSanitize',\n    \t'ngMessages',\n    \t'ngAria',\n    \t'ngRoute',\n    \t'ui.bootstrap',\n    \t'toastr',\n        'ngFileUpload'\n    ]);\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunController', ViewSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunController($routeParams, $filter, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.solution  = routeSolution;\r\n        vm.runNumber = $routeParams.run_number;\r\n\r\n        vm.solutionsToShow = vm.problem.solutions.filter(function(solution) {\r\n            return solution.nickname === vm.solution.nickname;\r\n        });\r\n\r\n        vm.urlFilter = $filter('url');\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunsController', ViewSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunsController($routeParams, $filter, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n        vm.solution = routeSolution;\r\n\r\n        vm.runs = angular.copy(vm.solution.run);\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.solution.run.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('modalConfirm', modalConfirm);\r\n\r\n/** @ngInject */\r\nfunction modalConfirm($uibModal, $document) {\r\n    var directive = {\r\n        restrict        : 'A',\r\n        scope           : {\r\n            callback: '&modalConfirm',\r\n            title:    '<modalConfirmTitle',\r\n            body:     '<modalConfirmBody'\r\n        },\r\n        link            : ModalConfirmLink\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmLink(scope, el, attr, ctrl) {\r\n        var callback = scope.callback();\r\n\r\n        el.bind('click', function() {\r\n            var modalInstance = $uibModal.open({\r\n                animation:        false,\r\n                templateUrl:      'app/components/modal/modal-confirm/modal-confirm.html',\r\n                controller:       ModalConfirmController,\r\n                controllerAs:     '$ctrl',\r\n                scope:            scope,\r\n                bindToController: true\r\n            });\r\n\r\n            modalInstance.result.then(function(result) {\r\n                callback();\r\n            }, function() {\r\n            });\r\n        });\r\n    }\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmController($scope, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.ok = function() {\r\n            $uibModalInstance.close();\r\n        };\r\n\r\n        vm.cancel = function() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerRunController', ViewCheckerRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerRunController($routeParams, $filter, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.checker   = routeChecker;\r\n        vm.runNumber = $routeParams.run_number;\r\n\r\n        vm.checkersToShow = vm.problem.checkers.filter(function(checker) {\r\n            return checker.nickname === vm.checker.nickname;\r\n        });\r\n\r\n        vm.urlFilter = $filter('url');\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerRunsController', ViewCheckerRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerRunsController($routeParams, $filter, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n\r\n        vm.runs = angular.copy(vm.checker.run);\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.checker.run.view', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllUsersController', ViewAllUsersController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllUsersController(userService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.usersList = [];\r\n\r\n        userService.getUsers(vm.me.permissions && vm.me.permissions.delete_user)\r\n        .then(function(users) {\r\n            vm.usersList = users;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewUserController', ViewUserController);\r\n\r\n/** @ngInject */\r\nfunction ViewUserController(userService, routeMe, routeUser) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.user = routeUser;\r\n    };\r\n\r\n    vm.deleteUser = function() {\r\n        return function() {\r\n            userService.deleteUser(vm.user.username)\r\n            .then(function(user) {\r\n                vm.user = user;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateUserController', CreateUserController);\r\n\r\n/** @ngInject */\r\nfunction CreateUserController($location, $filter, userService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    };\r\n\r\n    vm.submit = function() {\r\n        userService.createUser({\r\n            username:            vm.form.username,\r\n            email:               vm.form.email,\r\n            sendEmailInvitation: true\r\n        }).then(function(user) {\r\n            $location.path($filter('url')('user.view', user.username));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewTestCaseController', ViewTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction ViewTestCaseController($routeParams, testCaseService, routeContest, routeProblem, routeTestCase) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.test_case = routeTestCase;\r\n\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.test_case_id = $routeParams.test_case_id;\r\n    };\r\n\r\n    vm.loadMore = function(inputType) {\r\n        var query = {};\r\n        query['complete_' + inputType] = 'true';\r\n\r\n        vm[inputType + 'Loading'] = true;\r\n        testCaseService.getTestCase(\r\n            vm.contest_nickname,\r\n            vm.problem_nickname,\r\n            vm.test_case_id,\r\n            query\r\n        )\r\n        .then(function(test_case) {\r\n            vm.test_case.current[inputType] = test_case.current[inputType];\r\n            vm[inputType + 'Loaded'] = true;\r\n            vm[inputType + 'Loading'] = false;\r\n        })\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateTestCaseController', CreateTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction CreateTestCaseController($scope, $location, $filter, Upload, PromiseProcess, routeContest, routeProblem, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n\r\n        vm.form = {\r\n            test_cases: [{\r\n                input:  '',\r\n                output: ''\r\n            }]\r\n        };\r\n\r\n        vm.currentUploadingCount = 0;\r\n    };\r\n\r\n    vm.addTestCase = function() {\r\n        vm.form.test_cases.push({\r\n            input:  '',\r\n            output: ''\r\n        });\r\n    };\r\n\r\n    vm.removeTestCase = function(index) {\r\n        vm.form.test_cases.splice(index, 1);\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        var promiseProcess = PromiseProcess();\r\n\r\n        form.test_cases.forEach(function(test_case) {\r\n            promiseProcess.push(function() {\r\n                var params = {};\r\n\r\n                if(test_case.inputSignedUrl) {\r\n                    params.input_file_name = test_case.inputSignedUrl.file_name;\r\n                } else {\r\n                    params.input = test_case.input;\r\n                }\r\n\r\n                if(test_case.outputSignedUrl) {\r\n                    params.output_file_name = test_case.outputSignedUrl.file_name;\r\n                } else {\r\n                    params.output = test_case.output;\r\n                }\r\n\r\n                return testCaseService.createTestCase(vm.contest.nickname, vm.problem.nickname, params)\r\n                .then(function(test_case) {\r\n                    return test_case._id;\r\n                });\r\n            });\r\n        });\r\n\r\n        promiseProcess.exec([])\r\n        .then(function(test_case_id) {\r\n            $scope.$apply(function() {\r\n                if(form.test_cases.length == 1) {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.testCase.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname, \r\n                        test_case_id\r\n                    ));\r\n                } else {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname\r\n                    ));\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    vm.loadTestCaseFromFile = function(index, fileType, file) {\r\n        if(!file) {\r\n            return;\r\n        }\r\n\r\n        var fileReader = new FileReader();\r\n        fileReader.onload = function(evt) {\r\n            $scope.$apply(function () {\r\n                if(fileReader.result.length > 500) {\r\n                    vm.form.test_cases[index][fileType] = fileReader.result.substr(0, 497) + '...';\r\n                } else {\r\n                    vm.form.test_cases[index][fileType] = fileReader.result;\r\n                }\r\n            });\r\n        };\r\n        fileReader.onerror = function(evt) {\r\n        };\r\n        fileReader.readAsText(file);\r\n    };\r\n\r\n    vm.getSignedDownloadCallback = function(index, fileType) {\r\n        return testCaseService.getDownloadFileSignedUrl(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname, \r\n            vm.form.test_cases[index][fileType + 'SignedUrl'].file_name\r\n        );\r\n    };\r\n\r\n    vm.getSignedUploadCallback = function(index, fileType, file) {\r\n        return testCaseService.getUploadFileSignedUrl(vm.contest.nickname, vm.problem.nickname, {})\r\n            .then(function(signedUrl) {\r\n                vm.loadTestCaseFromFile(index, fileType, file);\r\n\r\n                vm.form.test_cases[index][fileType + 'File'] = file;\r\n                vm.form.test_cases[index][fileType + 'SignedUrl'] = signedUrl;\r\n                vm.currentUploadingCount++;\r\n\r\n                return signedUrl;\r\n            });\r\n    };\r\n\r\n    vm.afterUploadCallback = function(index, fileType, file) {\r\n        vm.currentUploadingCount--;\r\n\r\n        return Promise.resolve();\r\n    };\r\n\r\n    vm.removeCallback = function(index, fileType) {\r\n        return testCaseService.deleteFile(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname, \r\n            vm.form.test_cases[index][fileType + 'SignedUrl'].file_name\r\n        )\r\n        .then(function(data) {\r\n            delete vm.form.test_cases[index][fileType + 'File'];\r\n            delete vm.form.test_cases[index][fileType + 'SignedUrl'];\r\n            vm.form.test_cases[index][fileType] = '';\r\n\r\n            return data;\r\n        });\r\n    };\r\n\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditTestCaseController', EditTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction EditTestCaseController($scope, $location, $filter, routeContest, routeProblem, routeTestCase, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n        vm.testCase = routeTestCase;\r\n\r\n        fillInitialValues();\r\n\r\n        vm.currentUploadingCount = 0;\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            input:  vm.testCase.current.sample_input + (vm.testCase.current.large_input ? '...' : ''),\r\n            output: vm.testCase.current.sample_output + (vm.testCase.current.large_output ? '...' : '')\r\n        };\r\n\r\n        if(vm.testCase.current.input_file_name) {\r\n            vm.form.inputFile = {\r\n                original: true,\r\n                name:     vm.testCase.current.input_file_name\r\n            };\r\n        }\r\n        if(vm.testCase.current.output_file_name) {\r\n            vm.form.outputFile = {\r\n                original: true,\r\n                name:     vm.testCase.current.output_file_name\r\n            };\r\n        }\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        var params = {};\r\n\r\n        if(form.inputFile) {\r\n            if(form.inputSignedUrl) {\r\n                params.input_file_name = form.inputSignedUrl.file_name;\r\n            } else {\r\n                params.input_file_name = form.inputFile.name;\r\n            }\r\n        } else {\r\n            params.input = form.input;\r\n        }\r\n\r\n        if(form.outputFile) {\r\n            if(form.outputSignedUrl) {\r\n                params.output_file_name = form.outputSignedUrl.file_name;\r\n            } else {\r\n                params.output_file_name = form.outputFile.name;\r\n            }\r\n        } else {\r\n            params.output = form.output;\r\n        }\r\n\r\n        testCaseService.editTestCase(vm.contest.nickname, vm.problem.nickname, vm.testCase._id, params)\r\n        .then(function(test_case) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.testCase.view', \r\n                vm.contest.nickname, \r\n                vm.problem.nickname, \r\n                test_case._id\r\n            ));\r\n        });\r\n    };\r\n\r\n\r\n    vm.loadTestCaseFromFile = function(fileType, file) {\r\n        if(!file) {\r\n            return;\r\n        }\r\n\r\n        var fileReader = new FileReader();\r\n        fileReader.onload = function(evt) {\r\n            $scope.$apply(function () {\r\n                if(fileReader.result.length > 500) {\r\n                    vm.form[fileType] = fileReader.result.substr(0, 497) + '...';\r\n                } else {\r\n                    vm.form[fileType] = fileReader.result;\r\n                }\r\n            });\r\n        };\r\n        fileReader.onerror = function(evt) {\r\n        };\r\n        fileReader.readAsText(file);\r\n    };\r\n\r\n    vm.getSignedDownloadCallback = function(fileType) {\r\n        return testCaseService.getDownloadFileSignedUrl(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname, \r\n            vm.form.inputFile.name\r\n        );\r\n    };\r\n\r\n    vm.getSignedUploadCallback = function(fileType, file) {\r\n        return testCaseService.getUploadFileSignedUrl(vm.contest.nickname, vm.problem.nickname, {})\r\n            .then(function(signedUrl) {\r\n                vm.loadTestCaseFromFile(fileType, file);\r\n\r\n                vm.form[fileType + 'File'] = file;\r\n                vm.form[fileType + 'SignedUrl'] = signedUrl;\r\n                vm.currentUploadingCount++;\r\n\r\n                return signedUrl;\r\n            });\r\n    };\r\n\r\n    vm.afterUploadCallback = function(fileType, file) {\r\n        vm.currentUploadingCount--;\r\n\r\n        return Promise.resolve();\r\n    };\r\n\r\n    vm.removeCallback = function(fileType) {\r\n        if(vm.form[fileType + 'File'].original) {\r\n            delete vm.form[fileType + 'File'];\r\n            vm.form[fileType] = '';\r\n\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return testCaseService.deleteFile(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname, \r\n            vm.form[fileType + 'SignedUrl'].file_name\r\n        )\r\n        .then(function(data) {\r\n            delete vm.form[fileType + 'File'];\r\n            delete vm.form[fileType + 'SignedUrl'];\r\n            vm.form[fileType] = '';\r\n\r\n            return data;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionController', ViewSolutionController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionController($routeParams, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.solution = routeSolution;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.solution_nickname = $routeParams.solution_nickname;\r\n\r\n        vm.solution.current = vm.solution.v[vm.solution.v.length-1];\r\n        vm.solution.current.language = utilService.getLanguage(vm.solution.current.language);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditSolutionController', EditSolutionController);\r\n\r\n/** @ngInject */\r\nfunction EditSolutionController($location, $filter, languages, solutionService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.solution = routeSolution;\r\n        vm.solution.current = vm.solution.v[ vm.solution.v.length-1 ];\r\n\r\n        vm.languages = languages;\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            source_code: vm.solution.current.source_code,\r\n            language:    vm.solution.current.language\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.editSolution(vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, {\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.solution.view',\r\n                vm.contest.nickname,\r\n                vm.problem.nickname,\r\n                solution.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateSolutionController', CreateSolutionController);\r\n\r\n/** @ngInject */\r\nfunction CreateSolutionController($location, $filter, $routeParams, languages, solutionService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        \r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.languages = languages;\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.createSolution(vm.contest_nickname, vm.problem_nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.solution.view',\r\n                vm.contest_nickname,\r\n                vm.problem_nickname,\r\n                solution.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunsController', ViewProblemSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunsController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n\r\n        vm.runs = angular.copy(vm.problem.solutions.reduce(function(prev, solution) {\r\n            return prev.concat(solution.run);\r\n        }, []));\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.solutionRun.view', vm.contest.nickname, vm.problem.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunController', ViewProblemSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.runNumber = $routeParams.run_number;\r\n    };\r\n\r\n    vm.urlFilter = $filter('url');\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemController', ViewProblemController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemController($routeParams, downloadService, routeContest, routeProblem, problemService, solutionService, checkerService, testCaseService, runService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.problem.current = vm.problem.v[vm.problem.v.length-1];\r\n\r\n        getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n        getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n    };\r\n\r\n    vm.deleteSolution = function(solution) {\r\n        return function() {\r\n            solutionService.deleteSolution(vm.contest_nickname, vm.problem_nickname, solution.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteChecker = function(checker) {\r\n        return function() {\r\n            checkerService.deleteChecker(vm.contest_nickname, vm.problem_nickname, checker.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.runSolution = function(solution_index) {\r\n        var validationResult;\r\n        vm.problem.solutions[solution_index].validation = {\r\n            status: 'waiting'\r\n        };\r\n\r\n        runService.runSolutions(vm.contest.nickname, vm.problem.nickname, {\r\n            solutions:  [ vm.problem.solutions[solution_index].nickname ],\r\n            test_cases: vm.problem.test_cases.reduce(function(prev, cur) {\r\n                prev.push(cur._id);\r\n                return prev;\r\n            }, [])\r\n        })\r\n        .then(function(results) {\r\n            validationResult = results;\r\n\r\n            return solutionService.getSolution(\r\n                vm.contest_nickname, \r\n                vm.problem_nickname, \r\n                vm.problem.solutions[solution_index].nickname\r\n            );\r\n        })\r\n        .then(function(solution) {\r\n            vm.problem.solutions[solution_index] = solution;\r\n            getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n\r\n            vm.problem.solutions[solution_index].validation = {\r\n                status: 'done',\r\n                result: validationResult\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.runChecker = function(checker_index) {\r\n        var validationResult;\r\n        vm.problem.checkers[checker_index].validation = {\r\n            status: 'waiting'\r\n        };\r\n\r\n        runService.runCheckers(vm.contest.nickname, vm.problem.nickname, {\r\n            checkers:   [ vm.problem.checkers[checker_index].nickname ],\r\n            test_cases: vm.problem.test_cases.reduce(function(prev, cur) {\r\n                prev.push(cur._id);\r\n                return prev;\r\n            }, [])\r\n        })\r\n        .then(function(results) {\r\n            validationResult = results;\r\n\r\n            return checkerService.getChecker(\r\n                vm.contest_nickname, \r\n                vm.problem_nickname, \r\n                vm.problem.checkers[checker_index].nickname\r\n            );\r\n        })\r\n        .then(function(checker) {\r\n            vm.problem.checkers[checker_index] = checker;\r\n            getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n\r\n            vm.problem.checkers[checker_index].validation = {\r\n                status: 'done',\r\n                result: validationResult\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.deleteTestCase = function(test_case) {\r\n        return function() {\r\n            testCaseService.deleteTestCase(vm.contest_nickname, vm.problem_nickname, test_case._id)\r\n            .then(function(success) {\r\n                return;\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    function getValidatedTestCases(problem, items) {\r\n        items.forEach(function(item) {\r\n            if(item.validatedTestCases !== undefined) {\r\n                return;\r\n            }\r\n\r\n            item.validatedTestCases = runService.getValidatedTestCases(problem, item.run, item.v);\r\n        });\r\n    }\r\n\r\n\r\n    vm.getSignedDownloadUrl = function() {\r\n        return problemService.downloadProblemFile(vm.contest.nickname, vm.problem.nickname);\r\n    };\r\n\r\n    vm.getSignedUploadUrl = function(file) {\r\n        return problemService.getUploadProblemFileSignedUrl(vm.contest.nickname, vm.problem.nickname, {\r\n            name: file.name\r\n        });\r\n    };\r\n\r\n    vm.uploadProblemFile = function(file) {\r\n        return problemService.uploadProblemFile(vm.contest.nickname, vm.problem.nickname, {\r\n            name: file.name\r\n        });\r\n    };\r\n\r\n    vm.removeProblemFile = function() {\r\n        return problemService.deleteProblemFile(vm.contest.nickname, vm.problem.nickname);\r\n    };\r\n\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateProblemController', CreateProblemController);\r\n\r\n/** @ngInject */\r\nfunction CreateProblemController($location, $filter, $routeParams, problemService, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n\r\n        fillDefaultValues();\r\n    };\r\n\r\n    function fillDefaultValues() {\r\n        vm.form = {};\r\n        vm.form.time_limit = 1;\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.createProblem(vm.contest_nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.view',\r\n                vm.contest_nickname,\r\n                problem.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditProblemController', EditProblemController);\r\n\r\n/** @ngInject */\r\nfunction EditProblemController($location, $filter, problemService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.lastVersion = vm.problem.v[ vm.problem.v.length-1 ];\r\n\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            name:        vm.problem.name,\r\n            description: vm.lastVersion.description,\r\n            time_limit:  vm.lastVersion.time_limit\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.editProblem(vm.contest.nickname, vm.problem.nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.view',\r\n                vm.contest.nickname,\r\n                problem.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllLogsController', ViewAllLogsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllLogsController(logService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.logsList = [];\r\n\r\n        logService.getLogs()\r\n        .then(function(logs) {\r\n            vm.logsList = logs;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('RegularInvitationController', RegularInvitationController);\r\n\r\n/** @ngInject */\r\nfunction RegularInvitationController($location, $routeParams, $filter, $route, authService, routeUser, userService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.user_id = $routeParams.user_id;\r\n        vm.user = routeUser;\r\n\r\n        fillDefaultValues();\r\n    };\r\n\r\n    function fillDefaultValues() {\r\n        vm.form = {\r\n            email:    routeUser.email,\r\n            username: routeUser.username || '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        userService.editUser(vm.user_id, {\r\n            username: form.username,\r\n            password: form.password\r\n        })\r\n        .then(function(user) {\r\n            return authService.login(form.username, form.password);\r\n        })\r\n        .then(function(data) {\r\n            $route.reload();\r\n            $location.path($filter('url', 'main'));\r\n        })\r\n        .catch(function(err) {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContributorController', CreateContributorController);\r\n\r\n/** @ngInject */\r\nfunction CreateContributorController($location, $filter, userService, contributorService, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tvm.contest = routeContest;\r\n    \tvm.usersList = [];\r\n\r\n    \tuserService.getUsers()\r\n    \t.then(function(users) {\r\n    \t\tvm.usersList = users.filter(function(user) {\r\n    \t\t\treturn !vm.contest.contributors.some(function(contributor) {\r\n    \t\t\t\treturn contributor.username === user.username;\r\n    \t\t\t});\r\n    \t\t});\r\n    \t});\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contributorService.createContributor(vm.contest.nickname, {\r\n            user_id: vm.form.user._id\r\n        })\r\n        .then(function(contest) {\r\n            $location.path($filter('url')(\r\n                'contest.view',\r\n                vm.contest.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllContestsController', ViewAllContestsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllContestsController(contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.contestList = [];\r\n\r\n        contestService.getContests(vm.me.permissions && vm.me.permissions.delete_contest)\r\n        .then(function(contests) {\r\n            vm.contestList = contests;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewContestController', ViewContestController);\r\n\r\n/** @ngInject */\r\nfunction ViewContestController(authService, downloadService, contestService, contributorService, problemService, routeMe, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me      = routeMe;\r\n        vm.contest = routeContest;\r\n\r\n        updateListOfProblems(vm.contest.problems);\r\n        updateLastBocaZip(vm.contest.bocaZip);\r\n    };\r\n\r\n    vm.canI = function(action, obj) {\r\n        switch(action) {\r\n            case 'delete_contributor':\r\n                return vm.contest.author._id == vm.me._id;\r\n            case 'delete_problem':\r\n                return vm.contest.author._id == vm.me._id;\r\n            default:\r\n                return false;\r\n        }\r\n    };\r\n\r\n    vm.deleteContributor = function(contributor) {\r\n        return function() {\r\n            contributorService.deleteContributor(vm.contest.nickname, contributor._id)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteProblem = function(problem) {\r\n        return function() {\r\n            problemService.deleteProblem(vm.contest.nickname, problem.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                updateListOfProblems(vm.contest.problems);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteContest = function() {\r\n        return function() {\r\n            contestService.deleteContest(vm.contest.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    function updateLastBocaZip(bocaZipList) {\r\n        if(!Array.isArray(bocaZipList) || !bocaZipList.length) {\r\n            return vm.latestBocaZip = null;\r\n        }\r\n\r\n        vm.latestBocaZip = bocaZipList[ bocaZipList.length-1 ];\r\n        vm.latestBocaZip.downloadUrl = 'http://localhost:3010/api/v1' +\r\n            '/contest/' + vm.contest.nickname + \r\n            '/boca/download' +\r\n            '?VersionId=' + vm.latestBocaZip.VersionId + \r\n            '&token=' + authService.getToken();\r\n\r\n        // last file edition on the contest\r\n\r\n        return vm.latestBocaZip;\r\n    }\r\n\r\n    function updateListOfProblems(problems) {\r\n        return vm.problemsList = problems.filter(function(problem) {\r\n            return !problem.deleted_at || vm.canI('delete_problem');\r\n        }).sort(function(a, b) {\r\n            return a.current.order - b.current.order;\r\n        });\r\n    }\r\n\r\n    vm.generateZip = function() {\r\n        var problemNicknames = vm.contest.problems.map(function(problem) {\r\n            return problem.nickname;\r\n        });\r\n\r\n        contestService.generateBocaZip(vm.contest.nickname, {\r\n            problems: problemNicknames\r\n        })\r\n            .then(function(bocaZip) {\r\n                vm.contest.bocaZip.push(bocaZip);\r\n                updateLastBocaZip(vm.contest.bocaZip);\r\n            })\r\n            .catch(function(err) {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    vm.downloadZip = function(versionId) {\r\n        contestService.downloadBocaZip(vm.contest.nickname, versionId)\r\n            .then(function(signedUrl) {\r\n                downloadService.download(signedUrl);\r\n            })\r\n            .catch(function(err) {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    vm.getProblemLetter = function(order) {\r\n        return String.fromCharCode(64 + order);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContestController', CreateContestController);\r\n\r\n/** @ngInject */\r\nfunction CreateContestController($location, $filter, contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contestService.createContest({\r\n            name: vm.form.name\r\n        }).then(function(contest) {\r\n            $location.path($filter('url')(\r\n                'contest.list'\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('singleAttachment', singleAttachment);\r\n\r\n/** @ngInject */\r\nfunction singleAttachment() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/single-attachment/single-attachment.html',\r\n        scope           : {\r\n            // the file object (must have a name property).\r\n            file: '<',\r\n\r\n            // text to show on 'attach' button.\r\n            customAttachText: '<',\r\n\r\n            // callbacks\r\n            signedDownloadCallback: '&',\r\n            signedUploadCallback:   '&',\r\n            afterUploadCallback:    '&',\r\n            removeCallback:         '&'\r\n        },\r\n        controller      : SingleAttachmentController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function SingleAttachmentController(downloadService, Upload) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.loading = false;\r\n        };\r\n\r\n        vm.downloadFile = function() {\r\n            vm.loading = true;\r\n\r\n            vm.signedDownloadCallback()\r\n                .then(function(signedUrl) {\r\n                    vm.loading = false;\r\n\r\n                    downloadService.download(signedUrl, false, vm.file.name);\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível baixar este arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.removeFile = function() {\r\n            vm.loading = true;\r\n\r\n            vm.removeCallback()\r\n                .then(function(response) {\r\n                    vm.loading = false;\r\n\r\n                    vm.file = undefined;\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível excluir este arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.uploadFile = function(file, errFiles) {\r\n            if(errFiles && errFiles[0]) {\r\n                errFiles = errFiles[0];\r\n\r\n                if(errFiles.$errorMessages && errFiles.$errorMessages.maxSize) {\r\n                    return vm.err = 'O arquivo selecionado ultrapassa o limite de 4MB.';\r\n                }\r\n\r\n                return vm.err = 'Erro desconhecido.';\r\n            }\r\n\r\n            if(!file) {\r\n                return;\r\n            }\r\n            var fileName = file.name;\r\n\r\n            vm.loading = true;\r\n            vm.signedUploadCallback({ file: file })\r\n                .then(function(signedUrl) {\r\n                    return new Promise(function(resolve, reject) {\r\n                        Upload.upload({\r\n                            url:    signedUrl.url,\r\n                            method: 'POST',\r\n                            data:   {\r\n                                key:                signedUrl.key,\r\n                                Policy:             signedUrl.fields.Policy,\r\n                                'X-Amz-Algorithm':  signedUrl.fields['X-Amz-Algorithm'],\r\n                                'X-Amz-Credential': signedUrl.fields['X-Amz-Credential'],\r\n                                'X-Amz-Date':       signedUrl.fields['X-Amz-Date'],\r\n                                'X-Amz-Signature':  signedUrl.fields['X-Amz-Signature'],\r\n                                file:               file\r\n                            },\r\n                            headers: {\r\n                                'x-access-token': undefined\r\n                            }\r\n                        })\r\n                        .then(function finishCallback(response) {\r\n                            return resolve(response.data);\r\n                        }, function errCallback(err) {\r\n                            return reject(err);\r\n                        }, function progressCallback(evt) {\r\n                            file.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n                        });\r\n                    });\r\n                })\r\n                .then(function(result) {\r\n                    return vm.afterUploadCallback({ file: file });\r\n                })\r\n                .then(function(response) {\r\n                    vm.loading = false;\r\n\r\n                    vm.file = {\r\n                        name: fileName\r\n                    };\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível fazer upload deste arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runsList', runsList);\r\n\r\n/** @ngInject */\r\nfunction runsList() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/runs-list/runs-list.html',\r\n        scope           : {\r\n            runs:    '<',\r\n            getLink: '<'\r\n        },\r\n        controller      : RunsListController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunsListController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.solutionRuns = [];\r\n            for(var i=0; i<vm.runs.length; i++) {\r\n                var newSolutionRun = {\r\n                    run_number: vm.runs[i].run_number,\r\n                    runs:       [ vm.runs[i] ],\r\n                    timestamp:  vm.runs[i].timestamp\r\n                };\r\n\r\n                for(var j=vm.runs.length-1; j>i; j--) {\r\n                    if(vm.runs[i].run_number === vm.runs[j].run_number) {\r\n                        newSolutionRun.runs.push(vm.runs[j]);\r\n                        vm.runs.splice(j, 1);\r\n                    }\r\n                }\r\n\r\n                vm.solutionRuns.push(newSolutionRun);\r\n            }\r\n            vm.solutionRuns.sort(function(a, b) {\r\n                return b.run_number - a.run_number;\r\n            });\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runResultTable', runResultTable);\r\n\r\n/** @ngInject */\r\nfunction runResultTable() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/run-result-table/run-result-table.html',\r\n        scope           : {\r\n            problem:   '<',\r\n            solutions: '<',\r\n            checkers:  '<',\r\n            testCases: '<',\r\n            runNumber: '<',\r\n\r\n            customExpectedOutput: '<'\r\n        },\r\n        controller      : RunResultTableController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunResultTableController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            // if not defined which solutions should be shown, \r\n            // it will show all the solutions that were run.\r\n            if(typeof vm.solutions === 'boolean' && vm.solutions) {\r\n                vm.items = vm.problem.solutions.filter(function(solution) {\r\n                    return solution.run.some(function(solutionRun) {\r\n                        return solutionRun.run_number == vm.runNumber;\r\n                    });\r\n                });\r\n            } else if(Array.isArray(vm.solutions)) {\r\n                vm.items = vm.solutions;\r\n            }\r\n\r\n            // if not defined which checkers should be shown, \r\n            // it will show all the checkers that were run.\r\n            if(typeof vm.checkers === 'boolean' && vm.checkers) {\r\n                vm.items = vm.problem.checkers.filter(function(solution) {\r\n                    return solution.run.some(function(solutionRun) {\r\n                        return solutionRun.run_number == vm.runNumber;\r\n                    });\r\n                });\r\n            } else if(Array.isArray(vm.checkers)) {\r\n                vm.items = vm.checkers;\r\n            }\r\n\r\n            // all the runs with the run_number.\r\n            vm.runs = vm.items.reduce(function(prev, item) {\r\n                return prev.concat(\r\n                    item.run\r\n                    .filter(function(itemRun) {\r\n                        return itemRun.run_number == vm.runNumber;\r\n                    })\r\n                    .map(function(itemRun) {\r\n                        itemRun.item              = item;\r\n                        itemRun.test_case         = getTestCase(vm.problem, itemRun.test_case_id);\r\n                        itemRun.test_case.current = itemRun.test_case.v[ itemRun.test_case.v.length-1 ];\r\n\r\n                        return itemRun;\r\n                    })\r\n                );\r\n            }, []);\r\n\r\n            // all the test_cases that were tested.\r\n            vm.testCases = vm.runs.reduce(function(prev, solutionRun) {\r\n                if(prev.indexOf(solutionRun.test_case) === -1) {\r\n                    prev.push(solutionRun.test_case);\r\n                }\r\n                return prev;\r\n            }, []);\r\n\r\n            // map with all the item/test_case results.\r\n            vm.testCaseRunMap = {};\r\n        };\r\n\r\n        function getTestCase(problem, test_case_id) {\r\n            return problem.test_cases.filter(function(test_case) {\r\n                return test_case._id == test_case_id;\r\n            })[0];\r\n        }\r\n\r\n        vm.selectRun = function(runs, item_id, test_case_id) {\r\n            vm.selectedRun = vm.getTestCaseRun(runs, item_id, test_case_id);\r\n        };\r\n\r\n        vm.unselectRun = function() {\r\n            vm.selectedRun = null;\r\n        };\r\n\r\n        vm.getTestCaseRun = function(runs, item_id, test_case_id) {\r\n            if(vm.testCaseRunMap[item_id + '-' + test_case_id] === undefined) {\r\n                var testCaseRun = runs.filter(function(run) {\r\n                    return run.item._id  == item_id\r\n                        && run.test_case._id == test_case_id;\r\n                })[0];\r\n\r\n                testCaseRun.verdict = utilService.getVerdict(testCaseRun.verdict);\r\n\r\n                vm.testCaseRunMap[item_id + '-' + test_case_id] = testCaseRun;\r\n            }\r\n\r\n            return vm.testCaseRunMap[item_id + '-' + test_case_id];\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .directive('navbar', navbar);\n\n/** @ngInject */\nfunction navbar() {\n    var directive = {\n        restrict        : 'E',\n        templateUrl     : 'app/components/navbar/navbar.html',\n        scope           : {},\n        controller      : NavbarController,\n        controllerAs    : 'vm',\n        bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController($route, $location, $scope, $filter, authService) {\n        var vm = this;\n\n        vm.init = function() {\n            vm.menuCollapsed = true;\n\n            vm.isLogged = authService.isLogged();\n\n            vm.mainLinks = getMainLinks();\n        };\n\n        function getMainLinks() {\n            var links = [{\n                label:   'Home',\n                urlPath: 'main' \n            }, {\n                label:   'Contests',\n                urlPath: 'contest.list'\n            }, {\n                label:   'Usuários',\n                urlPath: 'user.list'\n            }, {\n                label:   'Histórico',\n                urlPath: 'log'\n            }];\n\n            links.forEach(function(link) {\n                link.active = $location.path() == $filter('url')(link.urlPath);\n            });\n\n            return links;\n        }\n\n        vm.logout = function() {\n            authService.logout();\n            $location.path('/');\n            $route.reload();\n        };\n\n        vm.toggleMobileMenu = function() {\n            vm.menuCollapsed = !vm.menuCollapsed;\n        };\n\n        vm.init();\n        return vm;\n    }\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('genericList', genericList);\r\n\r\n/** @ngInject */\r\nfunction genericList($compile) {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/generic-list/generic-list.html',\r\n        transclude      : true,\r\n        controller      : GenericListController,\r\n        controllerAs    : 'list',\r\n        scope: {\r\n            items:          '<', // list\r\n            noItemsMessage: '<', // string\r\n            headers:        '<', // list\r\n            parent:         '<'  // controller\r\n        },\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function GenericListController() {\r\n        var list = this;\r\n\r\n        list.init = function() {\r\n        };\r\n\r\n        list.init();\r\n        return list;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('breadcrumbs', breadcrumbs);\r\n\r\n/** @ngInject */\r\nfunction breadcrumbs() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/breadcrumbs/breadcrumbs.html',\r\n        scope           : {\r\n            new:      '<', // string of what is being added\r\n            edit:     '<', // true or false\r\n\r\n            users:    '<', // true or false\r\n            user:     '<',\r\n\r\n            contests: '<',\r\n            contest:  '<',\r\n            problem:  '<',\r\n            solution: '<',\r\n            checker:  '<',\r\n            testCase: '<',\r\n\r\n            extra:    '<'  // list of extra labels/urls (for those who don't fit a pattern (yet))\r\n        },\r\n        controller      : BreadcrumbsController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function BreadcrumbsController($filter) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.items = [];\r\n\r\n            // contests list\r\n            if(vm.contests) {\r\n                vm.items.push({\r\n                    label: 'Contests',\r\n                    url:   $filter('url')('contest.list')\r\n                });\r\n\r\n                // contest X\r\n                if(vm.contest) {\r\n                    vm.items.push({\r\n                        label: vm.contest.name,\r\n                        url:   $filter('url')('contest.view', vm.contest.nickname)\r\n                    });\r\n\r\n                    // problem Y\r\n                    if(vm.problem) {\r\n                        vm.items.push({\r\n                            label: vm.problem.name,\r\n                            url:   $filter('url')('contest.problem.view', vm.contest.nickname, vm.problem.nickname)\r\n                        });\r\n\r\n                        // solution Z\r\n                        if(vm.solution) {\r\n                            vm.items.push({\r\n                                label: vm.solution.name,\r\n                                url:   $filter('url')('contest.problem.solution.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\r\n                            });\r\n                        }\r\n\r\n                        // checker Q\r\n                        if(vm.checker) {\r\n                            vm.items.push({\r\n                                label: vm.checker.name,\r\n                                url:   $filter('url')('contest.problem.checker.view', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname)\r\n                            });\r\n                        }\r\n\r\n                        // testcase W\r\n                        if(vm.testCase) {\r\n                            var order;\r\n                            if(vm.testCase.current) {\r\n                                order = vm.testCase.current.order;\r\n                            } else if(Array.isArray(vm.testCase.v)) {\r\n                                order = vm.testCase.v[ vm.testCase.v.length-1 ].order;\r\n                            } else {\r\n                                order = 1;\r\n                            }\r\n\r\n                            vm.items.push({\r\n                                label: '#' + order + ' caso de teste',\r\n                                url:   $filter('url')('contest.problem.testCase.view', vm.contest.nickname, vm.problem.nickname, vm.testCase._id)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // users list\r\n            if(vm.users) {\r\n                vm.items.push({\r\n                    label: 'Usuários',\r\n                    url:   $filter('url')('user.list')\r\n                });\r\n\r\n                // user X\r\n                if(vm.user) {\r\n                    vm.items.push({\r\n                        label: vm.user.username,\r\n                        url:   $filter('url')('user.view')\r\n                    });\r\n                }\r\n            }\r\n\r\n            // is an editing page?\r\n            if(vm.edit) {\r\n                vm.items.push({\r\n                    label: 'Editar'\r\n                });\r\n            }\r\n\r\n            // is a creating page?\r\n            if(vm.new) {\r\n                vm.items.push({\r\n                    label: 'Nov' + vm.new\r\n                });\r\n            }\r\n\r\n            if(vm.extra && vm.extra.length) {\r\n                vm.extra.forEach(function(extra) {\r\n                    vm.items.push({\r\n                        label: extra.label,\r\n                        url:   extra.url\r\n                    });\r\n                });\r\n            }\r\n\r\n            // the last item is the selected one\r\n            if(vm.items.length) {\r\n                vm.activeItem = vm.items.pop();\r\n            }\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('alertInactive', alertInactive);\r\n\r\n/** @ngInject */\r\nfunction alertInactive() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/alert-inactive/alert-inactive.html',\r\n        scope           : {\r\n            msg: '<'\r\n        },\r\n        controller      : AlertInactiveController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function AlertInactiveController() {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemCheckerRunController', ViewProblemCheckerRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemCheckerRunController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.runNumber = $routeParams.run_number;\r\n    };\r\n\r\n    vm.urlFilter = $filter('url');\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemCheckerRunsController', ViewProblemCheckerRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemCheckerRunsController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n\r\n        vm.runs = angular.copy(vm.problem.checkers.reduce(function(prev, checker) {\r\n            return prev.concat(checker.run);\r\n        }, []));\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.checkerRun.view', vm.contest.nickname, vm.problem.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerController', ViewCheckerController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerController($routeParams, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.checker_nickname = $routeParams.checker_nickname;\r\n\r\n        vm.checker.current = vm.checker.v[vm.checker.v.length-1];\r\n        vm.checker.current.language = utilService.getLanguage(vm.checker.current.language);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateCheckerController', CreateCheckerController);\r\n\r\n/** @ngInject */\r\nfunction CreateCheckerController($location, $filter, $routeParams, languages, checkerService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        \r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.languages = languages;\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        checkerService.createChecker(vm.contest_nickname, vm.problem_nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(checker) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.checker.view',\r\n                vm.contest_nickname,\r\n                vm.problem_nickname,\r\n                checker.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditCheckerController', EditCheckerController);\r\n\r\n/** @ngInject */\r\nfunction EditCheckerController($location, $filter, languages, checkerService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n        vm.checker.current = vm.checker.v[ vm.checker.v.length-1 ];\r\n\r\n        vm.languages = languages;\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            source_code: vm.checker.current.source_code,\r\n            language:    vm.checker.current.language\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        checkerService.editChecker(vm.contest.nickname, vm.problem.nickname, vm.checker.nickname, {\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(checker) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.checker.view',\r\n                vm.contest.nickname,\r\n                vm.problem.nickname,\r\n                checker.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('utilService', utilService);\r\n\r\n/** @ngInject */\r\nfunction utilService(languages, verdicts) {\r\n    var service = this;\r\n\r\n    service.getLanguage = function(languageValue) {\r\n        return languages.filter(function(l) {\r\n            return l.value == languageValue;\r\n        })[0] || languages[0];\r\n    };\r\n\r\n    service.getVerdict = function(verdictValue) {\r\n        return verdicts.filter(function(v) {\r\n            return v.value == verdictValue;\r\n        })[0] || verdicts[0];\r\n    };\r\n\r\n    service.getValueFromObj = function(obj, path) {\r\n    \tvar dotIndex = path.indexOf('.');\r\n    \t\r\n    \tif(dotIndex !== -1) {\r\n    \t\tvar prefix = path.substr(0, dotIndex);\r\n    \t\tvar suffix = path.substr(dotIndex+1);\r\n\r\n    \t\tif(typeof obj[prefix] !== 'object') {\r\n    \t\t\treturn null;\r\n    \t\t}\r\n\r\n    \t\treturn service.getValueFromObj(obj[prefix], suffix);\r\n    \t} else {\r\n    \t\treturn obj[path];\r\n    \t}\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('userService', userService);\r\n\r\n/** @ngInject */\r\nfunction userService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getUsers = function(show_deleted) {\r\n        return $http.get(apiUrl + 'user' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.users;\r\n        });\r\n    };\r\n\r\n    service.getUser = function(username) {\r\n        return $http.get(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.getUserById = function(_id) {\r\n        return $http.get(apiUrl + 'user/' + _id)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.createUser = function(user) {\r\n        return $http.post(apiUrl + 'user', user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.editUser = function(username, user) {\r\n        return $http.put(apiUrl + 'user/' + username, user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.deleteUser = function(username) {\r\n        return $http.delete(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('urlService', urlService);\r\n\r\n/** @ngInject */\r\nfunction urlService(frontUrls, utilService) {\r\n    var service = this;\r\n\r\n    service.getUrl = function(path, args) {\r\n        var url = utilService.getValueFromObj(frontUrls.urls, path);\r\n        if(!url) {\r\n            return null;\r\n        }\r\n\r\n        if(args.length) {\r\n            args.forEach(function(arg) {\r\n                url = url.replace(/:\\w*/, arg);\r\n            });\r\n        }\r\n\r\n        return url;\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('testCaseService', testCaseService);\r\n\r\n/** @ngInject */\r\nfunction testCaseService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getTestCase = function(contest_nickname, problem_nickname, test_case_id, query) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id,\r\n            {\r\n                params: query\r\n            }\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.createTestCase = function(contest_nickname, problem_nickname, test_case) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case', \r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.editTestCase = function(contest_nickname, problem_nickname, test_case_id, test_case) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id,\r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.deleteTestCase = function(contest_nickname, problem_nickname, test_case_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.success;\r\n        });\r\n    };\r\n\r\n\r\n    service.getDownloadFileSignedUrl = function(contest_nickname, problem_nickname, file_name) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/file/' + file_name\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.getUploadFileSignedUrl = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/file',\r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.deleteFile = function(contest_nickname, problem_nickname, file_name) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/file/' + file_name\r\n        )\r\n        .then(function(result) {\r\n            return result.data.success;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('solutionService', solutionService);\r\n\r\n/** @ngInject */\r\nfunction solutionService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.createSolution = function(contest_nickname, problem_nickname, solution) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution', \r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.editSolution = function(contest_nickname, problem_nickname, solution_nickname, solution) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname,\r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.deleteSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('runService', runService);\r\n\r\n/** @ngInject */\r\nfunction runService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.runSolutions = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/run/solutions', \r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.results;\r\n        });\r\n    };\r\n\r\n    service.runCheckers = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/run/checkers', \r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.results;\r\n        });\r\n    };\r\n\r\n    service.getValidatedTestCases = function(problem, runs, versions) {\r\n        var test_cases = angular.copy(problem.test_cases);\r\n        var runs = angular.copy(runs).reverse();\r\n\r\n        runs.forEach(function(run) {\r\n            if(hasCriticalAfter(versions, run.timestamp)) {\r\n                return;\r\n            }\r\n\r\n            for(var i=0; i<test_cases.length; i++) {\r\n                if(test_cases[i]._id == run.test_case_id) {\r\n                    if(!hasCriticalAfter(test_cases[i].v, run.timestamp)\r\n                    && run.verdict == 'Accepted') {\r\n                        test_cases.splice(i, 1);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        return problem.test_cases.length - test_cases.length;\r\n    };\r\n\r\n    function hasCriticalAfter(versions, timestamp) {\r\n        return versions.some(function(version) {\r\n            return version.critical && moment(version.timestamp).isAfter(timestamp);\r\n        });\r\n    }\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('problemService', problemService);\r\n\r\n/** @ngInject */\r\nfunction problemService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.createProblem = function(contest_nickname, problem) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem', \r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.editProblem = function(contest_nickname, problem_nickname, problem) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname,\r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.deleteProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n\r\n    service.downloadProblemFile = function(contest_nickname, problem_nickname, versionId) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file'\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.getUploadProblemFileSignedUrl = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file',\r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.uploadProblemFile = function(contest_nickname, problem_nickname, data) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file',\r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.deleteProblemFile = function(contest_nickname, problem_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file'\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('logService', logService);\r\n\r\n/** @ngInject */\r\nfunction logService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getLogs = function() {\r\n        return $http.get(apiUrl + 'log')\r\n        .then(function(result) {\r\n            return result.data.logs;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('downloadService', downloadService);\r\n\r\n/** @ngInject */\r\nfunction downloadService($document) {\r\n    var service = this;\r\n\r\n    service.download = function(url, popupWindow, filename) {\r\n\t\tvar body = $document.find('body').eq(0);\r\n\t\tvar link = angular.element(\r\n\t\t\t'<a ' +\r\n\t\t\t'id=\"temp_link\" ' +\r\n\t\t\t(filename ? 'download=\"' + filename + '\" ' : 'download ') +\r\n\t\t\t'href=\"' + url + '\" ' +\r\n\t\t\t'style=\"display: none;\" ' +\r\n\t\t\t(popupWindow ? 'target=\"_blank\" ' : '') +\r\n\t\t\t'>link</a>'\r\n\t\t);\r\n\t\tbody.append(link);\r\n\t\tlink[0].click();\r\n\t\tlink.remove();\r\n\t};\r\n\r\n    return service;\r\n}\r\n\r\n})();\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contributorService', contributorService);\r\n\r\n/** @ngInject */\r\nfunction contributorService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.createContributor = function(contest_nickname, user) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor',\r\n            user\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContributor = function(contest_nickname, user_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor/' + user_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contestService', contestService);\r\n\r\n/** @ngInject */\r\nfunction contestService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getContests = function(show_deleted) {\r\n        return $http.get(apiUrl + 'contest' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.contests;\r\n        });\r\n    };\r\n\r\n    service.getContest = function(nickname) {\r\n        return $http.get(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.createContest = function(contest) {\r\n        return $http.post(apiUrl + 'contest', contest)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContest = function(nickname) {\r\n        return $http.delete(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.generateBocaZip = function(nickname, data) {\r\n        return $http.post(apiUrl + 'contest/' + nickname + '/boca', data)\r\n        .then(function(result) {\r\n            return result.data.bocaZip;\r\n        });\r\n    };\r\n\r\n    service.downloadBocaZip = function(nickname, versionId) {\r\n        return $http.get(apiUrl + 'contest/' + nickname + '/boca/download')\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('checkerService', checkerService);\r\n\r\n/** @ngInject */\r\nfunction checkerService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getChecker = function(contest_nickname, problem_nickname, checker_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.createChecker = function(contest_nickname, problem_nickname, checker) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker', \r\n            checker\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.editChecker = function(contest_nickname, problem_nickname, checker_nickname, checker) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname,\r\n            checker\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.deleteChecker = function(contest_nickname, problem_nickname, checker_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authService', authService);\r\n\r\n/** @ngInject */\r\nfunction authService($q, $http, $window, apiUrl) {\r\n    var service = this;\r\n\r\n    service.login = function(username, password) {\r\n        return $http.post(apiUrl + 'login', {\r\n        \tusername: username,\r\n        \tpassword: password\r\n        })\r\n            .then(function(response) {\r\n                var token = response.data.token;\r\n\r\n                $window.localStorage.setItem('token', token);\r\n                service.setHeaderToken(token);\r\n\r\n                return $q.resolve(response.data);\r\n            });\r\n    };\r\n\r\n    service.logout = function() {\r\n        $window.localStorage.removeItem('token');\r\n        service.unsetHeaderToken();\r\n    };\r\n\r\n    service.setHeaderToken = function(token) {\r\n        $http.defaults.headers.common['x-access-token'] = token;\r\n    };\r\n\r\n    service.unsetHeaderToken = function() {\r\n        delete $http.defaults.headers.common['x-access-token'];\r\n    };\r\n\r\n    service.me = function() {\r\n        return $http.get(apiUrl + 'me')\r\n        .then(function(response) {\r\n            return response.data.me;\r\n        });\r\n    };\r\n\r\n    service.isLogged = function() {\r\n        return !!$window.localStorage.getItem('token');\r\n    };\r\n\r\n    service.getToken = function() {\r\n        return $window.localStorage.getItem('token');\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .controller('MainController', MainController);\n\n/** @ngInject */\nfunction MainController() {\n    var vm = this;\n\n    vm.init = function() {\n    };\n\n    vm.init();\n    return vm;\n}\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authInterceptor', authInterceptor);\r\n\r\n/** @ngInject */\r\nfunction authInterceptor($q, $injector) {\r\n    var interceptor = this;\r\n\r\n    interceptor.responseError = function(response) {\r\n        if(response.status == 500 && response.data.error == \"TokenExpiredError: jwt expired\") {\r\n            $injector.get('authService').logout();\r\n            return $q.reject(response);\r\n        } else {\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n\r\n    return interceptor;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('LoginController', LoginController);\r\n\r\n/** @ngInject */\r\nfunction LoginController($route, $filter, $location, authService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tif(authService.isLogged()) {\r\n    \t\t$location.path($filter('url', 'main'));\r\n    \t}\r\n\r\n        var queryMessage = $location.search().message;\r\n        if(queryMessage) {\r\n            switch(queryMessage) {\r\n                case 'access_denied':\r\n                    vm.errorMessage = 'Acesso negado.';\r\n                    break;\r\n\r\n                case 'token_expired':\r\n                    vm.errorMessage = 'Acesso expirado. Refaça seu login.';\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.submit = function() {\r\n    \tauthService.login(vm.form.username, vm.form.password)\r\n    \t.then(function(data) {\r\n    \t\t$route.reload();\r\n    \t})\r\n    \t.catch(function(err) {\r\n    \t\tconsole.log(err);\r\n    \t});\r\n    };\r\n\r\n    vm.init();\r\n}\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n\t.module('front')\n\t.run(setToken);\n\n/** @ngInject */\nfunction setToken($http, $window, authService) {\n    var token = $window.localStorage.getItem('token');\n\n    if(token) {\n    \tauthService.setHeaderToken(token);\n    }\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .config(routeConfig)\n  .controller('AppController', AppController);\n\n/** @ngInject */\nfunction routeConfig(frontUrls, $routeProvider, $locationProvider, $httpProvider) {\n    $httpProvider.interceptors.push('authInterceptor');\n\n\n    $routeProvider\n\n    /* main */\n    .when(frontUrls.urls.main, {\n        templateUrl : 'app/main/main.html',\n        controller  : 'MainController',\n        controllerAs: 'vm'\n    })\n\n\n    /* login */\n    .when(frontUrls.urls.login, {\n        templateUrl : 'app/login/login.html',\n        controller  : 'LoginController',\n        controllerAs: 'vm'\n    })\n\n\n    /* invitations */\n    .when(frontUrls.urls.invitation.regular, {\n        templateUrl : 'app/invitations/regular/regular-invitation.html',\n        controller  : 'RegularInvitationController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeUser: getUserById\n        }\n    })\n\n\n    /* logs */\n    .when(frontUrls.urls.log, {\n        templateUrl : 'app/logs/view-all/view-all-logs.html',\n        controller  : 'ViewAllLogsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* users */\n    .when(frontUrls.urls.user.new, {\n        templateUrl : 'app/users/create/create-user.html',\n        controller  : 'CreateUserController',\n        controllerAs: 'vm'\n    })\n    .when(frontUrls.urls.user.view, {\n        templateUrl : 'app/users/view/view-user.html',\n        controller  : 'ViewUserController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe:   getMe,\n            routeUser: getUser\n        }\n    })\n    .when(frontUrls.urls.user.list, {\n        templateUrl : 'app/users/view-all/view-all-users.html',\n        controller  : 'ViewAllUsersController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contests */\n    .when(frontUrls.urls.contest.new, {\n        templateUrl : 'app/contests/create/create-contest.html',\n        controller  : 'CreateContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n    .when(frontUrls.urls.contest.view, {\n        templateUrl : 'app/contests/view/view-contest.html',\n        controller  : 'ViewContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe:      getMe,\n            routeContest: getContest\n        }\n    })\n    .when(frontUrls.urls.contest.list, {\n        templateUrl : 'app/contests/view-all/view-all-contests.html',\n        controller  : 'ViewAllContestsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contributors */\n    .when(frontUrls.urls.contest.contributor.new, {\n        templateUrl : 'app/contributors/create/create-contributor.html',\n        controller  : 'CreateContributorController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest\n        }\n    })\n\n\n    /* problems */\n    .when(frontUrls.urls.contest.problem.new, {\n        templateUrl : 'app/problems/create/create-problem.html',\n        controller  : 'CreateProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest\n        }\n    })\n    .when(frontUrls.urls.contest.problem.view, {\n        templateUrl : 'app/problems/view/view-problem.html',\n        controller  : 'ViewProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.edit, {\n        templateUrl : 'app/problems/edit/edit-problem.html',\n        controller  : 'EditProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    /* solutions */\n    .when(frontUrls.urls.contest.problem.solution.new, {\n        templateUrl : 'app/solutions/create/create-solution.html',\n        controller  : 'CreateSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.view, {\n        templateUrl : 'app/solutions/view/view-solution.html',\n        controller  : 'ViewSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest:  getContest,\n            routeProblem:  getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.edit, {\n        templateUrl : 'app/solutions/edit/edit-solution.html',\n        controller  : 'EditSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest:  getContest,\n            routeProblem:  getProblem,\n            routeSolution: getSolution\n        }\n    })\n\n\n    /* checkers */\n    .when(frontUrls.urls.contest.problem.checker.new, {\n        templateUrl : 'app/checkers/create/create-checker.html',\n        controller  : 'CreateCheckerController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checker.view, {\n        templateUrl : 'app/checkers/view/view-checker.html',\n        controller  : 'ViewCheckerController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checker.edit, {\n        templateUrl : 'app/checkers/edit/edit-checker.html',\n        controller  : 'EditCheckerController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n\n\n    /* test cases */\n    .when(frontUrls.urls.contest.problem.testCase.new, {\n        templateUrl : 'app/testCases/create/create-testCase.html',\n        controller  : 'CreateTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.view, {\n        templateUrl : 'app/testCases/view/view-testCase.html',\n        controller  : 'ViewTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeTestCase: getTestCase\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.edit, {\n        templateUrl : 'app/testCases/edit/edit-testCase.html',\n        controller  : 'EditTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeTestCase: getTestCase\n        }\n    })\n\n\n    /* solution runs */\n    .when(frontUrls.urls.contest.problem.solution.run.list, {\n        templateUrl : 'app/solutions/runs/list/solution-runs.html',\n        controller  : 'ViewSolutionRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.run.view, {\n        templateUrl : 'app/solutions/runs/view/solution-run.html',\n        controller  : 'ViewSolutionRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.list, {\n        templateUrl : 'app/solutionsRuns/list/solutionRuns-list.html',\n        controller  : 'ViewProblemSolutionRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.view, {\n        templateUrl : 'app/solutionsRuns/view/view-solutionRun.html',\n        controller  : 'ViewProblemSolutionRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    /* checker runs */\n    .when(frontUrls.urls.contest.problem.checker.run.list, {\n        templateUrl : 'app/checkers/runs/list/checker-runs.html',\n        controller  : 'ViewCheckerRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checker.run.view, {\n        templateUrl : 'app/checkers/runs/view/checker-run.html',\n        controller  : 'ViewCheckerRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checkerRun.list, {\n        templateUrl : 'app/checkersRuns/list/checkerRuns-list.html',\n        controller  : 'ViewProblemCheckerRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checkerRun.view, {\n        templateUrl : 'app/checkersRuns/view/view-checkerRun.html',\n        controller  : 'ViewProblemCheckerRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    .otherwise({\n        redirectTo: '/'\n    });\n\n\n    $locationProvider.html5Mode(true);\n}\n\n/** @ngInject */\nfunction AppController($rootScope, $location, $filter) {\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n        if(rejection && rejection.data && rejection.data.error) {\n            switch(rejection.data.error) {\n                case 'Access denied':\n                    $location.search('message', 'access_denied');\n                    $location.path($filter('url')('login'));\n                    break;\n                \n                case 'TokenExpiredError: jwt expired':\n                    $location.search('message', 'token_expired');\n                    $location.path($filter('url')('login'));\n                    return;\n\n                default:\n                    $location.path($filter('url')('login'));\n                    return;\n            }\n        }\n\n        $location.path($filter('url')('login'));\n    });\n}\n\nfunction getMe(authService) {\n    return authService.me();\n}\n\nfunction getUser($route, frontUrls, userService) {\n    return userService.getUser(\n        $route.current.params[frontUrls.paramKeys.user]\n    );\n}\n\nfunction getUserById($route, frontUrls, userService) {\n    return userService.getUserById(\n        $route.current.params[frontUrls.paramKeys.user_id]\n    );\n}\n\nfunction getContest($route, frontUrls, contestService) {\n    return contestService.getContest(\n        $route.current.params[frontUrls.paramKeys.contest]\n    );\n}\n\nfunction getProblem($route, frontUrls, problemService) {\n    return problemService.getProblem(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem]\n    );\n}\n\nfunction getSolution($route, frontUrls, solutionService) {\n    return solutionService.getSolution(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.solution]\n    );\n}\n\nfunction getChecker($route, frontUrls, checkerService) {\n    return checkerService.getChecker(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.checker]\n    );\n}\n\nfunction getTestCase($route, frontUrls, testCaseService) {\n    return testCaseService.getTestCase(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.testCase]\n    );\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.directive('ngTransclude', customNgTransclude);\r\n\r\n/** @ngInject */\r\nfunction customNgTransclude() {\r\n    return {\r\n        restrict: 'EAC',\r\n        link: function($scope, $element, $attrs, controller, $transclude) {\r\n            if(!$transclude) {\r\n                throw minErr('ngTransclude')(\r\n\t\t\t\t\t'orphan',\r\n\t\t\t\t\t'Illegal use of ngTransclude directive in the template! ' +\r\n\t\t\t\t\t'No parent directive that requires a transclusion found. ' +\r\n\t\t\t\t\t'Element: {0}',\r\n\t\t\t\t\tstartingTag($element)\r\n\t\t\t\t);\r\n            }\r\n\r\n            var iScopeType = $attrs['ngTransclude'] || 'sibling';\r\n\r\n            switch(iScopeType) {\r\n                case 'sibling':\r\n                    $transclude(function(clone) {\r\n                        $element.append(clone);\r\n                    });\r\n                    break;\r\n\r\n                case 'parent':\r\n                    $transclude($scope, function(clone) {\r\n                        if(clone.length) {\r\n                            $element.append(clone);\r\n                        }\r\n                    });\r\n                    break;\r\n\r\n                case 'child':\r\n                    var iChildScope = $scope.$new();\r\n                    $transclude(iChildScope, function(clone) {\r\n                        $element.append(clone);\r\n                        $element.on('$destroy', function() {\r\n                            iChildScope.$destroy();\r\n                        });\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.filter('url', url)\r\n\t.filter('myDate', myDate);\r\n\r\n/** @ngInject */\r\nfunction url(urlService) {\r\n\treturn function(input) {\r\n\t\tvar args = [];\r\n\t\tfor(var i=1; i<arguments.length; i++) {\r\n\t\t\targs.push(arguments[i]);\r\n\t\t}\r\n\r\n\t\treturn urlService.getUrl(input, args);\r\n\t};\r\n}\r\n\r\n/** @ngInject */\r\nfunction myDate() {\r\n\treturn function(input) {\r\n\t\tvar currentDate = moment(),\r\n\t\t\tinputDate   = moment(input);\r\n\r\n\t\tif(inputDate.isBefore(currentDate)) {\r\n\t\t\tvar diffInMinutes = currentDate.diff(inputDate, 'minutes', true),\r\n\t\t\t\tdiffInHours   = currentDate.diff(inputDate, 'hours', true),\r\n\t\t\t\tdiffInDays    = currentDate.diff(inputDate, 'days', true),\r\n\t\t\t\tdiffInMonths  = currentDate.diff(inputDate, 'months', true);\r\n\r\n\t\t\tif(diffInMinutes <= 1) {\r\n\t\t\t\treturn 'agora';\r\n\t\t\t} else if(diffInHours < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMinutes) + ' minuto' + (diffInMinutes >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInDays < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInHours) + ' hora' + (diffInHours >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInMonths < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInDays) + ' dia' + (diffInDays >= 2 ? 's' : '');\r\n\t\t\t} else {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMonths) + ' mes' + (diffInMonths >= 2 ? 's' : '');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t}\r\n\t}\r\n}\r\n\r\n})();\r\n\n/* global moment:false */\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .constant('moment', moment)\n    .constant('PromiseProcess', promiseProcess)\n    // .constant('apiUrl', 'http://localhost:3010/api/v1/')\n    .constant('apiUrl', 'http://contestbuilder.ddns.net/api/v1/')\n    .constant('languages', languages())\n    .constant('verdicts', verdicts())\n    .constant('frontUrls', frontUrls());\n\n// list of languages\nfunction languages() {\n\treturn [{\n\t\tlabel: 'Outra',\n\t\tvalue: 'other'\n\t}, {\n\t\tlabel: 'C++',\n\t\tvalue: 'cpp'\n\t}, {\n\t\tlabel: 'C',\n\t\tvalue: 'c'\n\t}];\n}\n\n// list of verdicts\nfunction verdicts() {\n\treturn [{\n\t\tlabel: 'Other',\n\t\tshort: 'Other',\n\t\tvalue: 'Other'\n\t}, {\n\t\tlabel: 'Accepted',\n\t\tshort: 'AC',\n\t\tvalue: 'Accepted'\n\t}, {\n\t\tlabel: 'Presentation error',\n\t\tshort: 'PE',\n\t\tvalue: 'Presentation error'\n\t}, {\n\t\tlabel: 'Wrong answer',\n\t\tshort: 'WA',\n\t\tvalue: 'Wrong answer'\n\t}, {\n\t\tlabel: 'Time limit exceeded',\n\t\tshort: 'TLE',\n\t\tvalue: 'Time limit exceeded'\n\t}, {\n\t\tlabel: 'Compilation error',\n\t\tshort: 'CE',\n\t\tvalue: 'Compilation error'\n\t}];\n}\n\n// list of urls\nfunction frontUrls() {\n\tvar paramKeys = {\n\t\tuser:        'user_nickname',\n\t\tcontest:     'contest_nickname',\n\t\tproblem:     'problem_nickname',\n\t\tsolution:    'solution_nickname',\n\t\tchecker:     'checker_nickname',\n\t\ttestCase:    'test_case_id',\n\t\tsolutionRun: 'run_number',\n\t\tuser_id:     'user_id'\n\t};\n\n\tvar urls = {\n\t\tmain:  '/',\n\t\tlogin: '/login',\n\t\tlog:   '/logs',\n\t\tuser:  {\n\t\t\tnew:  '/users/new',\n\t\t\tview: '/users/:user_nickname',\n\t\t\tlist: '/users'\n\t\t},\n\t\tinvitation: {\n\t\t\tregular: '/invitation/:user_id'\n\t\t},\n\t\tcontest: {\n\t\t\tnew:  '/contests/new',\n\t\t\tview: '/contests/:contest_nickname',\n\t\t\tlist: '/contests',\n\n\t\t\tcontributor: {\n\t\t\t\tnew: '/contests/:contest_nickname/contributors/new'\n\t\t\t},\n\n\t\t\tproblem: {\n\t\t\t\tnew:  '/contests/:contest_nickname/problems/new',\n\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname',\n\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/edit',\n\n\t\t\t\tsolution: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/solutions/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/edit',\n\n\t\t\t\t\trun: {\n\t\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs',\n\t\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs/:run_number'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tchecker: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/checkers/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/edit',\n\n\t\t\t\t\trun: {\n\t\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/runs',\n\t\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/runs/:run_number'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\ttestCase: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/test_cases/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id/edit'\n\t\t\t\t},\n\n\t\t\t\tsolutionRun: {\n\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs/:run_number'\n\t\t\t\t},\n\n\t\t\t\tcheckerRun: {\n\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/checker_runs',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checker_runs/:run_number'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\tparamKeys: paramKeys,\n\t\turls:      urls\n\t};\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .config(removeNgTransclude);\n\n/** @ngInject */\nfunction removeNgTransclude($provide) {\n    $provide.decorator('ngTranscludeDirective', ['$delegate', function ($delegate) {\n        $delegate.shift();\n        return $delegate;\n    }]);\n}\n\n})();\n\nangular.module(\"front\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/login/login.html\",\"<navbar></navbar><alert-inactive ng-if=vm.errorMessage msg=vm.errorMessage></alert-inactive><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Login</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=loginForm ng-submit=vm.submit();><div class=form-group><input type=text name=username ng-model=vm.form.username class=form-control id=login-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><input type=password name=password ng-model=vm.form.password class=form-control id=login-password placeholder=Senha ng-required=true></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=loginForm.$invalid>Login</button></form></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<navbar></navbar><div class=jumbotron><div class=container><h1 class=display-3>Olá!</h1><p>This is a template for a simple marketing or informational website. It includes a large callout called a jumbotron and three supporting pieces of content. Use it as a starting point to create something more unique.</p><p><a class=\\\"btn btn-primary btn-lg\\\" href=/login role=button>Faça login &raquo;</a></p></div></div><div class=container><div class=row><div class=col-12><p>Testing</p></div></div></div>\");\n$templateCache.put(\"app/checkers/create/create-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'o checker\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo checker</h1></div></div><div class=row><div class=col-12><form novalidate name=checkerForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest_nickname : vm.problem_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=checkerForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/checkers/edit/edit-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar checker</h1></div></div><div class=row><div class=col-12><form novalidate name=checkerForm ng-submit=vm.submit(vm.form);><p>{{ vm.checker.name }}</p><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=checker-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=checker-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.checker.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.checker.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=checkerForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/checkers/view/view-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker></breadcrumbs><div id=view-checker><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Linguagem: {{ vm.checker.current.language.label }}</p></div></div><div class=row><div class=col-12><p>Código fonte:</p><pre>{{ vm.checker.current.source_code }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.checker.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.checker.nickname }}\\\">Editar checker</a></div></div></div></div>\");\n$templateCache.put(\"app/checkersRuns/list/checkerRuns-list.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/checkersRuns/view/view-checkerRun.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.checkerRun.list\\', vm.contest.nickname, vm.problem.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=view-checkerRun><div class=container><div class=row><div class=col-12><h2 class=page-title>Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem checkers=true test-cases=vm.problem.test_cases run-number=vm.runNumber custom-expected-output=\\\"\\'ok\\\\n\\'\\\"></run-result-table></div></div>\");\n$templateCache.put(\"app/components/breadcrumbs/breadcrumbs.html\",\"<div class=container><div class=row><div class=col-12><nav class=breadcrumb><a ng-repeat=\\\"item in vm.items\\\" class=breadcrumb-item ng-href=\\\"{{ item.url }}\\\">{{ item.label }}</a> <span class=\\\"breadcrumb-item active\\\">{{ vm.activeItem.label }}</span></nav></div></div></div>\");\n$templateCache.put(\"app/components/alert-inactive/alert-inactive.html\",\"<div id=alert-inactive class=\\\"alert alert-danger\\\" role=alert><strong>{{ vm.msg }}</strong></div>\");\n$templateCache.put(\"app/components/generic-list/generic-list.html\",\"<div class=generic-list><div ng-if=list.items.length class=\\\"row header-row\\\"><div ng-repeat=\\\"header in list.headers\\\" class=header-col ng-class=header.class>{{ header.label }}</div></div><div ng-repeat=\\\"item in list.items\\\" ng-transclude=parent class=item></div><div ng-if=!list.items.length class=row><div class=col-12><p>{{ list.noItemsMessage }}</p></div></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-toggleable-md navbar-inverse bg-inverse\\\"><button class=\\\"navbar-toggler navbar-toggler-right\\\" type=button data-toggle=collapse data-target=#navbarsExampleDefault aria-controls=navbarsExampleDefault aria-expanded=false aria-label=\\\"Toggle navigation\\\" ng-click=vm.toggleMobileMenu()><span class=navbar-toggler-icon></span></button> <a class=navbar-brand href=/ >Contest Builder</a><div class=\\\"collapse navbar-collapse\\\" id=navbarsExampleDefault ng-class=\\\"{ \\'show\\': !vm.menuCollapsed }\\\"><ul class=\\\"navbar-nav mr-auto\\\"><li ng-repeat=\\\"link in vm.mainLinks\\\" class=nav-item ng-class=\\\"{ \\'active\\': link.active }\\\"><a class=nav-link ng-href=\\\"{{ link.urlPath | url }}\\\">{{ link.label }}</a></li></ul><div class=\\\"my-2 my-md-0\\\"><a ng-if=!vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" role=button ng-href=\\\"{{ \\'login\\' | url }}\\\">Login</a> <button ng-if=vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=button ng-click=vm.logout();>Logout</button></div></div></nav>\");\n$templateCache.put(\"app/components/run-result-table/run-result-table.html\",\"<div class=row><div class=col-12><table class=\\\"table table-sm\\\"><thead><tr><th></th><th ng-repeat=\\\"test_case in vm.testCases\\\">#{{ test_case.current.order }}</th></tr></thead><tbody><tr ng-repeat=\\\"item in vm.items\\\"><td>{{ item.name }}</td><td ng-repeat=\\\"test_case in vm.testCases\\\"><span ng-if=\\\"vm.getTestCaseRun(vm.runs, item._id, test_case._id)\\\" ng-click=\\\"vm.selectRun(vm.runs, item._id, test_case._id)\\\">{{ vm.getTestCaseRun(vm.runs, item._id, test_case._id).verdict.short }}</span></td></tr></tbody></table></div></div><div class=row ng-if=vm.selectedRun><div class=col-12><p><span><strong>{{ vm.selectedRun.item.name }} / #{{ vm.selectedRun.test_case.current.order }}</strong> </span><span style=\\\"float: right\\\"><i class=\\\"fa fa-times\\\" aria-hidden=true ng-click=vm.unselectRun()></i></span></p><p><strong>Veredito:</strong> {{ vm.selectedRun.verdict.label }}</p></div><div class=col-6><p><strong>Saída esperada:</strong></p><pre>{{ vm.customExpectedOutput ? vm.customExpectedOutput : vm.selectedRun.test_case.current.output }}</pre></div><div class=col-6><p><strong>Saída:</strong></p><pre>{{ vm.selectedRun.output }}</pre></div></div><div class=row ng-if=!vm.selectedRun><div class=col-12><p>Selecione um item da tabela para ver mais detalhes.</p></div></div>\");\n$templateCache.put(\"app/components/runs-list/runs-list.html\",\"<div class=runs-list><div class=row ng-repeat=\\\"run in vm.solutionRuns\\\"><div class=col-12><p><a ng-href=\\\"{{ vm.getLink(run.run_number) }}\\\">Execução {{ run.run_number }}</a> - {{ run.timestamp | myDate }}</p></div></div></div>\");\n$templateCache.put(\"app/components/single-attachment/single-attachment.html\",\"<button ng-if=!vm.file type=button ngf-select=\\\"vm.uploadFile($file, $invalidFiles)\\\" accept=\\\"\\'*\\'\\\" ngf-max-size=4MB class=\\\"btn btn-link\\\">{{ vm.customAttachText ? vm.customAttachText : \\'Adicionar arquivo\\' }}</button> <button ng-if=vm.file type=button class=\\\"btn btn-link\\\" ng-click=vm.downloadFile();>{{ vm.file.name }}</button> <span ng-if=vm.file ng-click=vm.removeFile();>x</span> <img ng-if=vm.loading src=assets/images/loading.gif><p ng-if=vm.err>{{ vm.err }}</p>\");\n$templateCache.put(\"app/contests/create/create-contest.html\",\"<navbar></navbar><breadcrumbs contests=true new=\\\"\\'o contest\\'\\\"></breadcrumbs><div id=create-contest class=container><div class=row><div class=col-12><h1 class=page-title>Criar contest</h1></div></div><div class=row><div class=\\\"col-sm-12 col-lg-6\\\"><form novalidate name=contestForm ng-submit=vm.submit();><div class=form-group><label for=contest-name>Nome</label><input type=text name=name ng-model=vm.form.name class=form-control id=contest-name placeholder=\\\"Super Contest 2017\\\" ng-required=true></div><div class=form-group><label class=form-label-static for=contest-name>Autor</label><p>{{ vm.me.username }}</p></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"{{ \\'contest.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=contestForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/contests/view/view-contest.html\",\"<navbar></navbar><alert-inactive ng-if=vm.contest.deleted_at msg=\\\"\\'Este contest está inativo.\\'\\\"></alert-inactive><breadcrumbs contests=true contest=vm.contest></breadcrumbs><div id=view-contest><div class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.contest.name }}</h1></div></div><!-- info --><div class=row><div class=col-12><p>Autor: <a ng-href=\\\"{{ \\'user.view\\' | url : vm.contest.author.username }}\\\">{{ vm.contest.author.username }}</a></p></div></div><div class=row><div class=col-12><p>Criado em: <span>{{ vm.contest.created_at | date:\\'dd/MM/yyyy\\' }}</span></p></div></div></div><!-- contributors list --><div class=\\\"container contributors-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Contribuidores:</h4><a ng-if=!vm.contest.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.contributor.new\\' | url : vm.contest.nickname }}\\\">Adicionar contribuidor</a></div></div><generic-list items=vm.contest.contributors no-items-message=\\\"\\'Nenhum contribuidor cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }}</a></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_contributor\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteContributor(item) modal-confirm-title=\\\"\\'Remover contribuidor\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este contribuidor?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- problems list --><div class=\\\"container problems-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Problemas:</h4><a ng-if=!vm.contest.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.new\\' | url : vm.contest.nickname }}\\\">Adicionar problema</a></div></div><generic-list items=vm.problemsList no-items-message=\\\"\\'Nenhum problema cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.view\\' | url : list.parent.contest.nickname : item.nickname }}\\\">{{ list.parent.getProblemLetter(item.current.order) + \\' - \\' + item.name }}</a> <span ng-if=item.deleted_at>(Removido em {{ item.deleted_at | date:\\'dd/MM/yyyy\\' }})</span></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_problem\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteProblem(item) modal-confirm-title=\\\"\\'Remover problema\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este problema?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- boca zip list --><div class=\\\"container boca-list\\\"><div class=row><div class=col-12><h4>Exportar arquivos:</h4></div></div><div class=row ng-if=!vm.latestBocaZip><div class=col-12><p>Contest ainda não foi exportado.</p></div></div><div class=row ng-if=vm.latestBocaZip><div class=col-12><p>Data da última exportação: {{ vm.latestBocaZip.timestamp | date : \\'dd/MM/yyyy HH:mm\\' }}</p></div></div><div class=row><div class=col-12><button type=button class=\\\"btn btn-primary\\\" ng-click=vm.generateZip();><i class=\\\"fa fa-file-archive-o\\\" aria-hidden=true></i> Exportar</button> <button ng-if=vm.latestBocaZip type=button class=\\\"btn btn-primary\\\" ng-click=vm.downloadZip(vm.latestBocaZip.versionId);><i class=\\\"fa fa-download\\\" aria-hidden=true></i> Download</button></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row ng-if=\\\"!vm.contest.deleted_at && vm.me.permissions && vm.me.permissions.delete_contest\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteContest(problem) modal-confirm-title=\\\"\\'Desativer contest\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este contest?\\'\\\">Desativar contest</button></div></div></div></div>\");\n$templateCache.put(\"app/contests/view-all/view-all-contests.html\",\"<navbar></navbar><breadcrumbs contests=true></breadcrumbs><div id=view-all-contests><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de contests</h1></div></div></div><div class=\\\"container contest-list\\\"><generic-list items=vm.contestList no-items-message=\\\"\\'Nenhum contest cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',      class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',     class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Criado em\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.view\\' | url : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-4><p>{{ item.created_at | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.new\\' | url }}\\\">Criar contest</a></div></div></div></div>\");\n$templateCache.put(\"app/contributors/create/create-contributor.html\",\"<navbar></navbar><div class=container><div class=row><div class=col-12><h1 class=page-title>Adicionar novo contribuidor</h1></div></div><div class=row><div class=col-12 ng-if=vm.loading><p>Carregando.</p></div><div class=col-12 ng-if=\\\"!vm.loading && !vm.usersList.length\\\"><p>Não há mais quem adicionar.</p></div><div class=\\\"col-12 col-lg-6\\\" ng-if=\\\"!vm.loading && !!vm.usersList.length\\\"><form novalidate name=userForm ng-submit=vm.submit();><div class=form-group><select name=user ng-model=vm.form.user ng-options=\\\"user as user.username for user in vm.usersList\\\" class=form-control id=contributor-user placeholder=\\\"Nome de usuário\\\" ng-required=true></select></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/invitations/regular/regular-invitation.html\",\"<navbar></navbar><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Faça seu cadastro</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=invitationForm ng-submit=vm.submit(vm.form);><div class=form-group><label class=form-label-static for=contest-name>E-mail</label><p>{{ vm.form.email }}</p></div><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=username ng-model=vm.form.username class=form-control id=user-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><label for=user-password>Senha</label><input type=password name=password ng-model=vm.form.password class=form-control id=user-password placeholder=Senha ng-required=true></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'main\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=invitationForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/logs/view-all/view-all-logs.html\",\"<navbar></navbar><div id=view-all-logs><div class=container><div class=row><div class=col-12><h1 class=page-title>Histórico</h1></div></div></div><div class=\\\"container log-list\\\"><generic-list items=vm.logsList no-items-message=\\\"\\'Nenhum log registrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Contest\\',  class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',    class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Mensagem\\', class: \\'col-6\\' },\\r\\n\t\t\t\t{ label: \\'Data\\',     class: \\'col-2\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-2><a ng-href=\\\"{{ \\'contest.view\\' | url : item.contest.nickname }}\\\">{{ item.contest.name }}</a></div><div class=col-2><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-6><p>{{ item.message }}</p></div><div class=col-2><p>{{ item.date | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list></div></div>\");\n$templateCache.put(\"app/problems/create/create-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest new=\\\"\\'o problema\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.view\\' | url : vm.contest_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=problemForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/edit/edit-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"/contests/{{ vm.contest.nickname }}/problems/{{ vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=problemForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/view/view-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem></breadcrumbs><div id=view-problem><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Descrição curta: {{ vm.problem.current.description }}</p></div><div class=col-12><p>Descrição completa:<single-attachment file=vm.problem.file signed-download-callback=vm.getSignedDownloadUrl() signed-upload-callback=vm.getSignedUploadUrl(file) after-upload-callback=vm.uploadProblemFile(file) remove-callback=vm.removeProblemFile()></single-attachment></p></div><div class=col-12><p>Tempo limite: {{ vm.problem.current.time_limit }}</p></div></div></div><!-- solutions list --><div class=\\\"container solutions-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Soluções:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar solução</a></div></div><generic-list items=vm.problem.solutions no-items-message=\\\"\\'Nenhuma solução cadastrada.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',            class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Casos validados\\', class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\',           class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><span ng-if=!item.validatedTestCases>{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }} </span><a ng-if=item.validatedTestCases ng-href=\\\"{{ \\'contest.problem.solution.run.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname : item.run[ item.run.length-1 ].run_number }}\\\">{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}</a></div><div class=col-4><!-- remover --> <button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteSolution(item) modal-confirm-title=\\\"\\'Remover solução\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover esta solução?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button><!-- validar --> <button class=\\\"btn btn-primary\\\" ng-class=\\\"{ \\'loading-button\\': item.validation && item.validation.status == \\'waiting\\' }\\\" type=button ng-click=list.parent.runSolution($index) ng-disabled=\\\"\\r\\n\t\t\t\t\t\t\titem.validatedTestCases == list.parent.problem.test_cases.length\\r\\n\t\t\t\t\t\t\t|| (item.validation && item.validation.status == \\'waiting\\')\\r\\n\t\t\t\t\t\t\\\"><img ng-if=\\\"item.validation && item.validation.status == \\'waiting\\'\\\" src=assets/images/ripple.svg> <i ng-if=\\\"!item.validation || item.validation.status != \\'waiting\\'\\\" class=\\\"fa fa-check\\\" aria-hidden=true></i></button></div></div><div class=row ng-if=item.validation><div class=col-12><p ng-if=\\\"item.validation.status === \\'waiting\\'\\\">Carregando</p><p ng-if=\\\"item.validation.status === \\'done\\'\\\">{{ item.validation.result.results | json }}</p></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-12><a ng-href=\\\"{{ \\'contest.problem.solutionRun.list\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Ver todas as execuções</a></div></div></div><!-- test cases list --><div class=\\\"container test-cases-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Casos de teste:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar caso de teste</a></div></div><generic-list items=vm.problem.test_cases no-items-message=\\\"\\'Nenhum caso de teste cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'#\\',     class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item._id }}\\\">#{{ $index+1 }}</a></div><div class=col-4><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteTestCase(item) modal-confirm-title=\\\"\\'Remover caso de teste\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este caso de teste?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- checkers list --><div class=\\\"container checkers-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Checkers:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.checker.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar checker</a></div></div><generic-list items=vm.problem.checkers no-items-message=\\\"\\'Nenhum checker cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',            class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Casos validados\\', class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\',           class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.problem.checker.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><span ng-if=!item.validatedTestCases>{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }} </span><a ng-if=item.validatedTestCases ng-href=\\\"{{ \\'contest.problem.checker.run.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname : item.run[ item.run.length-1 ].run_number }}\\\">{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}</a></div><div class=col-4><!-- remover --> <button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteChecker(item) modal-confirm-title=\\\"\\'Remover checker\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este checker?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button><!-- validar --> <button class=\\\"btn btn-primary\\\" ng-class=\\\"{ \\'loading-button\\': item.validation && item.validation.status == \\'waiting\\' }\\\" type=button ng-click=list.parent.runChecker($index) ng-disabled=\\\"\\r\\n\t\t\t\t\t\t\titem.validatedTestCases == list.parent.problem.test_cases.length\\r\\n\t\t\t\t\t\t\t|| (item.validation && item.validation.status == \\'waiting\\')\\r\\n\t\t\t\t\t\t\\\"><img ng-if=\\\"item.validation && item.validation.status == \\'waiting\\'\\\" src=assets/images/ripple.svg> <i ng-if=\\\"!item.validation || item.validation.status != \\'waiting\\'\\\" class=\\\"fa fa-check\\\" aria-hidden=true></i></button></div></div><div class=row ng-if=item.validation><div class=col-12><p ng-if=\\\"item.validation.status === \\'waiting\\'\\\">Carregando</p><p ng-if=\\\"item.validation.status === \\'done\\'\\\">{{ item.validation.result.results | json }}</p></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-12><a ng-href=\\\"{{ \\'contest.problem.checkerRun.list\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Ver todas as execuções</a></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.edit\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Editar problema</a></div></div></div></div>\");\n$templateCache.put(\"app/solutions/create/create-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'a solução\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar nova solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest_nickname : vm.problem_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/edit/edit-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><p>{{ vm.solution.name }}</p><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/view/view-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution></breadcrumbs><div id=view-solution><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Linguagem: {{ vm.solution.current.language.label }}</p></div></div><div class=row><div class=col-12><p>Código fonte:</p><pre>{{ vm.solution.current.source_code }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Editar solução</a></div></div></div></div>\");\n$templateCache.put(\"app/solutionsRuns/list/solutionRuns-list.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutionsRuns/view/view-solutionRun.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solutionRun.list\\', vm.contest.nickname, vm.problem.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=view-solutionRun><div class=container><div class=row><div class=col-12><h2 class=page-title>Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=true test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");\n$templateCache.put(\"app/testCases/create/create-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'o caso de teste\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><!-- for every test case --><div class=row ng-repeat=\\\"testCaseNumber in vm.form.test_cases\\\"><div class=col-12><p>#{{ vm.problem.test_cases.length + 1 + $index }} caso de teste <i class=\\\"fa fa-trash-o\\\" aria-hidden=true uib-tooltip=\\\"Remover caso de teste\\\" ng-if=\\\"vm.form.test_cases.length > 1\\\" ng-click=vm.removeTestCase($index)></i></p></div><!-- input --><div class=col-6><div class=form-group><textarea type=text name=input ng-model=testCaseNumber.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-disabled=\\\"testCaseNumber[\\'inputFile\\']\\\" ng-trim=false rows=6 maxlength=500></textarea><single-attachment file=\\\"testCaseNumber[\\'inputFile\\']\\\" custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" signed-download-callback=\\\"vm.getSignedDownloadCallback($index, \\'input\\')\\\" signed-upload-callback=\\\"vm.getSignedUploadCallback($index, \\'input\\', file)\\\" after-upload-callback=\\\"vm.afterUploadCallback($index, \\'input\\', file)\\\" remove-callback=\\\"vm.removeCallback($index, \\'input\\')\\\"></single-attachment></div></div><!-- output --><div class=col-6><div class=form-group><textarea type=text name=output ng-model=testCaseNumber.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-disabled=\\\"testCaseNumber[\\'outputFile\\']\\\" ng-trim=false rows=6 maxlength=500></textarea><single-attachment file=\\\"testCaseNumber[\\'outputFile\\']\\\" custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" signed-download-callback=\\\"vm.getSignedDownloadCallback($index, \\'output\\')\\\" signed-upload-callback=\\\"vm.getSignedUploadCallback($index, \\'output\\', file)\\\" after-upload-callback=\\\"vm.afterUploadCallback($index, \\'output\\', file)\\\" remove-callback=\\\"vm.removeCallback($index, \\'output\\')\\\"></single-attachment></div></div></div><div class=row style=\\\"margin-bottom: 16px\\\"><div class=col-12><button type=button class=\\\"btn btn-secondary\\\" ng-click=vm.addTestCase()>+</button></div></div><div class=row ng-if=vm.currentUploadingCount><div class=col-12><p>Aguardando upload de {{ vm.currentUploadingCount }} arquivo(s).</p></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=\\\"testCaseForm.$invalid || vm.currentUploadingCount\\\">Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/testCases/edit/edit-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem test-case=vm.testCase edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><div class=row><div class=col-6><div class=form-group><textarea type=text name=input ng-model=vm.form.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-disabled=vm.form.inputFile ng-trim=false rows=6 maxlength=500></textarea><single-attachment file=vm.form.inputFile custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" signed-download-callback=\\\"vm.getSignedDownloadCallback(\\'input\\')\\\" signed-upload-callback=\\\"vm.getSignedUploadCallback(\\'input\\', file)\\\" after-upload-callback=\\\"vm.afterUploadCallback(\\'input\\', file)\\\" remove-callback=\\\"vm.removeCallback(\\'input\\')\\\"></single-attachment></div></div><div class=col-6><div class=form-group><textarea type=text name=output ng-model=vm.form.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-disabled=vm.form.outputFile ng-trim=false rows=6 maxlength=500></textarea><single-attachment file=vm.form.outputFile custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" signed-download-callback=\\\"vm.getSignedDownloadCallback(\\'output\\')\\\" signed-upload-callback=\\\"vm.getSignedUploadCallback(\\'output\\', file)\\\" after-upload-callback=\\\"vm.afterUploadCallback(\\'output\\', file)\\\" remove-callback=\\\"vm.removeCallback(\\'output\\')\\\"></single-attachment></div></div></div><div class=row ng-if=vm.currentUploadingCount><div class=col-12><p>Aguardando upload de {{ vm.currentUploadingCount }} arquivo(s).</p></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.testCase._id }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=\\\"testCaseForm.$invalid || vm.currentUploadingCount\\\">Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/testCases/view/view-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem test-case=vm.test_case></breadcrumbs><div id=view-test-case><div class=container><div class=row><div class=col-12><h2 class=page-title>#{{ vm.test_case.current.order }} caso de teste</h2></div></div><!-- info --><div class=row><div class=col-6><p>Entrada:</p><pre>{{\\r\\n\t\t\t\t\tvm.inputLoaded ? \\r\\n\t\t\t\t\tvm.test_case.current.input : \\r\\n\t\t\t\t\t(vm.test_case.current.sample_input + (vm.test_case.current.large_input ? \\'...\\' : \\'\\'))\\r\\n\t\t\t\t}}</pre><button ng-if=\\\"vm.test_case.current.large_input && !vm.inputLoaded\\\" type=button class=\\\"btn btn-link\\\" ng-click=\\\"vm.loadMore(\\'input\\');\\\" ng-disabled=vm.inputLoading>Carregar entrada completa</button></div><div class=col-6><p>Saída:</p><pre>{{\\r\\n\t\t\t\t\tvm.outputLoaded ? \\r\\n\t\t\t\t\tvm.test_case.current.output : \\r\\n\t\t\t\t\t(vm.test_case.current.sample_output + (vm.test_case.current.large_output ? \\'...\\' : \\'\\'))\\r\\n\t\t\t\t}}</pre><button ng-if=\\\"vm.test_case.current.large_output && !vm.outputLoaded\\\" type=button class=\\\"btn btn-link\\\" ng-click=\\\"vm.loadMore(\\'output\\');\\\" ng-disabled=vm.outputLoading>Carregar saída completa</button></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.test_case._id }}\\\">Editar caso de teste</a></div></div></div></div>\");\n$templateCache.put(\"app/users/create/create-user.html\",\"<navbar></navbar><breadcrumbs users=true new=\\\"\\'o usuário\\'\\\"></breadcrumbs><div id=create-user class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo usuário</h1></div></div><div class=row><div class=col-12><form novalidate name=userForm2 ng-submit=vm.submit(); autocomplete=off><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=new-user-username ng-model=vm.form.username class=form-control id=user-username placeholder=programming_rocks_18 ng-required=true></div><div class=form-group><label for=user-email>E-mail</label><input type=email name=new-user-email ng-model=vm.form.email class=form-control id=user-email placeholder=cool_address@gmail.com ng-required=true autocomplete=off></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'user.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/users/view/view-user.html\",\"<navbar></navbar><breadcrumbs users=true user=vm.user></breadcrumbs><alert-inactive ng-if=vm.user.deleted_at msg=\\\"\\'Esta conta de usuário está inativa.\\'\\\"></alert-inactive><div id=view-user class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.user.username }}</h1></div></div><div class=row ng-if=\\\"!vm.user.deleted_at && vm.me.permissions && vm.me.permissions.delete_user\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteUser() modal-confirm-title=\\\"\\'Desativar usuário\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este usuário?\\'\\\">Desativar usuário</button></div></div></div>\");\n$templateCache.put(\"app/users/view-all/view-all-users.html\",\"<navbar></navbar><breadcrumbs users=true></breadcrumbs><div id=view-all-users class=container><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de usuários</h1></div></div></div><div class=\\\"container user-list\\\"><generic-list items=vm.usersList no-items-message=\\\"\\'Nenhum usuário cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\', class: \\'col-12\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-12><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }} </a><span ng-if=item.deleted_at>(Desativado em {{ item.deleted_at | date:\\'dd/MM/yyyy\\' }})</span></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'user.new\\' | url }}\\\">Criar usuário</a></div></div></div></div>\");\n$templateCache.put(\"app/checkers/runs/list/checker-runs.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/checkers/runs/view/checker-run.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.checker.run.list\\', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }} - Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=vm.checkersToShow test-cases=vm.problem.test_cases run-number=vm.runNumber custom-expected-output=\\\"\\'ok\\\\n\\'\\\"></run-result-table></div></div>\");\n$templateCache.put(\"app/components/modal/modal-confirm/modal-confirm.html\",\"<div class=modal-header><h3 class=modal-title id=modal-title>{{ $ctrl.title }}</h3></div><div class=modal-body id=modal-body><p>{{ $ctrl.body }}</p></div><div class=modal-footer><button class=\\\"btn btn-danger\\\" type=button ng-click=$ctrl.cancel()>Cancelar</button> <button class=\\\"btn btn-primary\\\" type=button ng-click=$ctrl.ok()>Confirmar</button></div>\");\n$templateCache.put(\"app/solutions/runs/list/solution-runs.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutions/runs/view/solution-run.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solution.run.list\\', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=vm.solutionsToShow test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");}]);"],"sourceRoot":"/source/"}