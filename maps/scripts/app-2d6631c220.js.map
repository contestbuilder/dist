{"version":3,"sources":["scripts/app.js"],"names":["angular","module","ViewSolutionRunController","$routeParams","$filter","utilService","routeContest","routeProblem","routeSolution","vm","this","init","contest","problem","solution","runNumber","run_number","solutionsToShow","solutions","filter","nickname","urlFilter","$inject","controller","ViewSolutionRunsController","runs","copy","run","getRunLink","modalConfirm","$uibModal","$document","ModalConfirmLink","scope","el","attr","ctrl","callback","bind","modalInstance","open","animation","templateUrl","ModalConfirmController","controllerAs","bindToController","result","then","$scope","$uibModalInstance","ok","close","cancel","dismiss","directive","restrict","title","body","link","ViewCheckerRunController","routeChecker","checker","checkersToShow","checkers","ViewCheckerRunsController","ViewAllUsersController","userService","routeMe","me","usersList","getUsers","permissions","delete_user","users","ViewUserController","routeUser","user","deleteUser","username","CreateUserController","$location","submit","createUser","form","email","sendEmailInvitation","path","ViewTestCaseController","routeTestCase","test_case","contest_nickname","problem_nickname","test_case_id","current","v","length","EditTestCaseController","testCaseService","fillInitialValues","input","testCase","output","editTestCase","_id","CreateTestCaseController","PromiseProcess","test_cases","addTestCase","push","removeTestCase","index","splice","promiseProcess","forEach","createTestCase","exec","$apply","loadTestCaseFromFile","fileType","file","errFiles","name","fileReader","FileReader","onload","evt","onerror","readAsText","unnattachTestCaseFile","ViewProblemSolutionRunController","ViewProblemSolutionRunsController","reduce","prev","concat","ViewSolutionController","solution_nickname","language","getLanguage","EditSolutionController","languages","solutionService","source_code","editSolution","CreateSolutionController","createSolution","ViewProblemController","downloadService","problemService","checkerService","runService","getValidatedTestCases","items","item","undefined","validatedTestCases","deleteSolution","problems","deleteChecker","runSolution","solution_index","validationResult","validation","status","runSolutions","cur","results","getSolution","runChecker","checker_index","runCheckers","getChecker","deleteTestCase","getSignedDownloadUrl","downloadProblemFile","removeProblemFile","deleteProblemFile","getSignedUploadUrl","fileName","getUploadProblemFileSignedUrl","uploadProblemFile","EditProblemController","description","lastVersion","time_limit","editProblem","CreateProblemController","fillDefaultValues","createProblem","ViewAllLogsController","logService","logsList","getLogs","logs","RegularInvitationController","$route","authService","password","user_id","editUser","login","data","reload","err","console","log","CreateContributorController","contributorService","contributors","some","contributor","createContributor","ViewAllContestsController","contestService","contestList","getContests","delete_contest","contests","ViewContestController","updateLastBocaZip","bocaZipList","Array","isArray","latestBocaZip","downloadUrl","VersionId","getToken","updateListOfProblems","problemsList","deleted_at","canI","bocaZip","action","obj","author","deleteContributor","deleteProblem","deleteContest","generateZip","problemNicknames","map","generateBocaZip","downloadZip","versionId","downloadBocaZip","signedUrl","download","CreateContestController","createContest","singleAttachment","SingleAttachmentController","Upload","loading","downloadFile","signedDownloadCallback","removeFile","removeCallback","response","uploadFile","$errorMessages","maxSize","signedUploadCallback","Promise","resolve","reject","upload","url","method","key","Policy","fields","X-Amz-Algorithm","X-Amz-Credential","X-Amz-Date","X-Amz-Signature","headers","x-access-token","progress","Math","min","parseInt","loaded","total","afterUploadCallback","runsList","RunsListController","solutionRuns","i","newSolutionRun","timestamp","j","sort","a","b","getLink","runResultTable","RunResultTableController","getTestCase","solutionRun","itemRun","testCases","indexOf","testCaseRunMap","selectRun","item_id","selectedRun","getTestCaseRun","unselectRun","testCaseRun","verdict","getVerdict","customExpectedOutput","navbar","NavbarController","getMainLinks","links","label","urlPath","active","menuCollapsed","isLogged","mainLinks","logout","toggleMobileMenu","genericList","$compile","GenericListController","list","transclude","noItemsMessage","parent","breadcrumbs","BreadcrumbsController","order","edit","extra","activeItem","pop","new","alertInactive","AlertInactiveController","msg","ViewProblemCheckerRunController","ViewProblemCheckerRunsController","ViewCheckerController","checker_nickname","CreateCheckerController","createChecker","EditCheckerController","editChecker","verdicts","service","languageValue","l","value","verdictValue","getValueFromObj","dotIndex","prefix","substr","suffix","$http","apiUrl","show_deleted","get","getUser","getUserById","post","put","urlService","frontUrls","getUrl","args","urls","arg","replace","hasCriticalAfter","versions","version","critical","moment","isAfter","reverse","getProblem","popupWindow","find","eq","element","append","click","remove","getContest","$q","$window","token","localStorage","setItem","setHeaderToken","removeItem","unsetHeaderToken","defaults","common","getItem","MainController","LoginController","queryMessage","search","message","errorMessage","authInterceptor","$injector","interceptor","responseError","error","setToken","routeConfig","$routeProvider","$locationProvider","$httpProvider","interceptors","when","main","invitation","regular","getMe","view","checkerRun","otherwise","redirectTo","html5Mode","AppController","$rootScope","$on","event","previous","rejection","params","paramKeys","config","customNgTransclude","$element","$attrs","$transclude","minErr","startingTag","iScopeType","clone","iChildScope","$new","on","$destroy","arguments","myDate","currentDate","inputDate","isBefore","diffInMinutes","diff","diffInHours","diffInDays","diffInMonths","floor","short","constant","removeNgTransclude","$provide","decorator","$delegate","shift","$templateCache"],"mappings":"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","file":"scripts/app-2d6631c220.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('front', [\n    \t'ngAnimate',\n    \t'ngCookies',\n    \t'ngTouch',\n    \t'ngSanitize',\n    \t'ngMessages',\n    \t'ngAria',\n    \t'ngRoute',\n    \t'ui.bootstrap',\n    \t'toastr',\n        'ngFileUpload'\n    ]);\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunController', ViewSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunController($routeParams, $filter, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.solution  = routeSolution;\r\n        vm.runNumber = $routeParams.run_number;\r\n\r\n        vm.solutionsToShow = vm.problem.solutions.filter(function(solution) {\r\n            return solution.nickname === vm.solution.nickname;\r\n        });\r\n\r\n        vm.urlFilter = $filter('url');\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunsController', ViewSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunsController($routeParams, $filter, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n        vm.solution = routeSolution;\r\n\r\n        vm.runs = angular.copy(vm.solution.run);\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.solution.run.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('modalConfirm', modalConfirm);\r\n\r\n/** @ngInject */\r\nfunction modalConfirm($uibModal, $document) {\r\n    var directive = {\r\n        restrict        : 'A',\r\n        scope           : {\r\n            callback: '&modalConfirm',\r\n            title:    '<modalConfirmTitle',\r\n            body:     '<modalConfirmBody'\r\n        },\r\n        link            : ModalConfirmLink\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmLink(scope, el, attr, ctrl) {\r\n        var callback = scope.callback();\r\n\r\n        el.bind('click', function() {\r\n            var modalInstance = $uibModal.open({\r\n                animation:        false,\r\n                templateUrl:      'app/components/modal/modal-confirm/modal-confirm.html',\r\n                controller:       ModalConfirmController,\r\n                controllerAs:     '$ctrl',\r\n                scope:            scope,\r\n                bindToController: true\r\n            });\r\n\r\n            modalInstance.result.then(function(result) {\r\n                callback();\r\n            }, function() {\r\n            });\r\n        });\r\n    }\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmController($scope, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.ok = function() {\r\n            $uibModalInstance.close();\r\n        };\r\n\r\n        vm.cancel = function() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerRunController', ViewCheckerRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerRunController($routeParams, $filter, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.checker   = routeChecker;\r\n        vm.runNumber = $routeParams.run_number;\r\n\r\n        vm.checkersToShow = vm.problem.checkers.filter(function(checker) {\r\n            return checker.nickname === vm.checker.nickname;\r\n        });\r\n\r\n        vm.urlFilter = $filter('url');\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerRunsController', ViewCheckerRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerRunsController($routeParams, $filter, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n\r\n        vm.runs = angular.copy(vm.checker.run);\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.checker.run.view', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllUsersController', ViewAllUsersController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllUsersController(userService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.usersList = [];\r\n\r\n        userService.getUsers(vm.me.permissions && vm.me.permissions.delete_user)\r\n        .then(function(users) {\r\n            vm.usersList = users;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewUserController', ViewUserController);\r\n\r\n/** @ngInject */\r\nfunction ViewUserController(userService, routeMe, routeUser) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.user = routeUser;\r\n    };\r\n\r\n    vm.deleteUser = function() {\r\n        return function() {\r\n            userService.deleteUser(vm.user.username)\r\n            .then(function(user) {\r\n                vm.user = user;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateUserController', CreateUserController);\r\n\r\n/** @ngInject */\r\nfunction CreateUserController($location, $filter, userService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    };\r\n\r\n    vm.submit = function() {\r\n        userService.createUser({\r\n            username:            vm.form.username,\r\n            email:               vm.form.email,\r\n            sendEmailInvitation: true\r\n        }).then(function(user) {\r\n            $location.path($filter('url')('user.view', user.username));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewTestCaseController', ViewTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction ViewTestCaseController($routeParams, routeContest, routeProblem, routeTestCase) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.test_case = routeTestCase;\r\n\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.test_case_id = $routeParams.test_case_id;\r\n\r\n        vm.test_case.current = vm.test_case.v[vm.test_case.v.length-1];\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditTestCaseController', EditTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction EditTestCaseController($location, $filter, routeContest, routeProblem, routeTestCase, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n        vm.testCase = routeTestCase;\r\n        vm.testCase.current = vm.testCase.v[ vm.testCase.v.length-1 ];\r\n\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            input:  vm.testCase.current.input,\r\n            output: vm.testCase.current.output\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        testCaseService.editTestCase(vm.contest.nickname, vm.problem.nickname, vm.testCase._id, {\r\n            input:  form.input,\r\n            output: form.output\r\n        }).then(function(test_case) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.testCase.view', \r\n                vm.contest.nickname, \r\n                vm.problem.nickname, \r\n                test_case._id\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateTestCaseController', CreateTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction CreateTestCaseController($scope, $location, $filter, PromiseProcess, routeContest, routeProblem, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n\r\n        vm.form = {\r\n            test_cases: [{\r\n                input:  '',\r\n                output: ''\r\n            }]\r\n        };\r\n    };\r\n\r\n    vm.addTestCase = function() {\r\n        vm.form.test_cases.push({\r\n            input:  '',\r\n            output: ''\r\n        });\r\n    };\r\n\r\n    vm.removeTestCase = function(index) {\r\n        vm.form.test_cases.splice(index, 1);\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        var promiseProcess = PromiseProcess();\r\n\r\n        form.test_cases.forEach(function(test_case) {\r\n            promiseProcess.push(function() {\r\n                return testCaseService.createTestCase(vm.contest.nickname, vm.problem.nickname, {\r\n                    input:  test_case.input,\r\n                    output: test_case.output\r\n                }).then(function(test_case) {\r\n                    return test_case._id;\r\n                });\r\n            });\r\n        });\r\n\r\n        promiseProcess.exec([])\r\n        .then(function(test_case_id) {\r\n            $scope.$apply(function() {\r\n                if(form.test_cases.length == 1) {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.testCase.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname, \r\n                        test_case_id\r\n                    ));\r\n                } else {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname\r\n                    ));\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    vm.loadTestCaseFromFile = function(index, fileType, file, errFiles) {\r\n        if(!file) {\r\n            return;\r\n        }\r\n\r\n        vm.form.test_cases[index][fileType + '-file'] = file.name;\r\n\r\n        var fileReader = new FileReader();\r\n        fileReader.onload = function(evt) {\r\n            $scope.$apply(function () {\r\n                vm.form.test_cases[index][fileType] = fileReader.result;\r\n            });\r\n        };\r\n        fileReader.onerror = function(evt) {\r\n        };\r\n        fileReader.readAsText(file);\r\n    };\r\n\r\n    vm.unnattachTestCaseFile = function(index, fileType) {\r\n        delete vm.form.test_cases[index][fileType + '-file'];\r\n        vm.form.test_cases[index][fileType] = '';\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunController', ViewProblemSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.runNumber = $routeParams.run_number;\r\n    };\r\n\r\n    vm.urlFilter = $filter('url');\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunsController', ViewProblemSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunsController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n\r\n        vm.runs = angular.copy(vm.problem.solutions.reduce(function(prev, solution) {\r\n            return prev.concat(solution.run);\r\n        }, []));\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.solutionRun.view', vm.contest.nickname, vm.problem.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionController', ViewSolutionController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionController($routeParams, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.solution = routeSolution;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.solution_nickname = $routeParams.solution_nickname;\r\n\r\n        vm.solution.current = vm.solution.v[vm.solution.v.length-1];\r\n        vm.solution.current.language = utilService.getLanguage(vm.solution.current.language);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditSolutionController', EditSolutionController);\r\n\r\n/** @ngInject */\r\nfunction EditSolutionController($location, $filter, languages, solutionService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.solution = routeSolution;\r\n        vm.solution.current = vm.solution.v[ vm.solution.v.length-1 ];\r\n\r\n        vm.languages = languages;\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            source_code: vm.solution.current.source_code,\r\n            language:    vm.solution.current.language\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.editSolution(vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, {\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.solution.view',\r\n                vm.contest.nickname,\r\n                vm.problem.nickname,\r\n                solution.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateSolutionController', CreateSolutionController);\r\n\r\n/** @ngInject */\r\nfunction CreateSolutionController($location, $filter, $routeParams, languages, solutionService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        \r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.languages = languages;\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.createSolution(vm.contest_nickname, vm.problem_nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.solution.view',\r\n                vm.contest_nickname,\r\n                vm.problem_nickname,\r\n                solution.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemController', ViewProblemController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemController($routeParams, downloadService, routeContest, routeProblem, problemService, solutionService, checkerService, testCaseService, runService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.problem.current = vm.problem.v[vm.problem.v.length-1];\r\n\r\n        getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n        getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n    };\r\n\r\n    vm.deleteSolution = function(solution) {\r\n        return function() {\r\n            solutionService.deleteSolution(vm.contest_nickname, vm.problem_nickname, solution.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteChecker = function(checker) {\r\n        return function() {\r\n            checkerService.deleteChecker(vm.contest_nickname, vm.problem_nickname, checker.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.runSolution = function(solution_index) {\r\n        var validationResult;\r\n        vm.problem.solutions[solution_index].validation = {\r\n            status: 'waiting'\r\n        };\r\n\r\n        runService.runSolutions(vm.contest.nickname, vm.problem.nickname, {\r\n            solutions:  [ vm.problem.solutions[solution_index].nickname ],\r\n            test_cases: vm.problem.test_cases.reduce(function(prev, cur) {\r\n                prev.push(cur._id);\r\n                return prev;\r\n            }, [])\r\n        })\r\n        .then(function(results) {\r\n            validationResult = results;\r\n\r\n            return solutionService.getSolution(\r\n                vm.contest_nickname, \r\n                vm.problem_nickname, \r\n                vm.problem.solutions[solution_index].nickname\r\n            );\r\n        })\r\n        .then(function(solution) {\r\n            vm.problem.solutions[solution_index] = solution;\r\n            getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n\r\n            vm.problem.solutions[solution_index].validation = {\r\n                status: 'done',\r\n                result: validationResult\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.runChecker = function(checker_index) {\r\n        var validationResult;\r\n        vm.problem.checkers[checker_index].validation = {\r\n            status: 'waiting'\r\n        };\r\n\r\n        runService.runCheckers(vm.contest.nickname, vm.problem.nickname, {\r\n            checkers:   [ vm.problem.checkers[checker_index].nickname ],\r\n            test_cases: vm.problem.test_cases.reduce(function(prev, cur) {\r\n                prev.push(cur._id);\r\n                return prev;\r\n            }, [])\r\n        })\r\n        .then(function(results) {\r\n            validationResult = results;\r\n\r\n            return checkerService.getChecker(\r\n                vm.contest_nickname, \r\n                vm.problem_nickname, \r\n                vm.problem.checkers[checker_index].nickname\r\n            );\r\n        })\r\n        .then(function(checker) {\r\n            vm.problem.checkers[checker_index] = checker;\r\n            getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n\r\n            vm.problem.checkers[checker_index].validation = {\r\n                status: 'done',\r\n                result: validationResult\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.deleteTestCase = function(test_case) {\r\n        return function() {\r\n            testCaseService.deleteTestCase(vm.contest_nickname, vm.problem_nickname, test_case._id)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    function getValidatedTestCases(problem, items) {\r\n        items.forEach(function(item) {\r\n            if(item.validatedTestCases !== undefined) {\r\n                return;\r\n            }\r\n\r\n            item.validatedTestCases = runService.getValidatedTestCases(problem, item.run, item.v);\r\n        });\r\n    }\r\n\r\n\r\n    vm.getSignedDownloadUrl = function() {\r\n        return problemService.downloadProblemFile(vm.contest.nickname, vm.problem.nickname);\r\n    };\r\n\r\n    vm.removeProblemFile = function() {\r\n        return problemService.deleteProblemFile(vm.contest.nickname, vm.problem.nickname);\r\n    };\r\n\r\n    vm.getSignedUploadUrl = function(fileName) {\r\n        return problemService.getUploadProblemFileSignedUrl(vm.contest.nickname, vm.problem.nickname, {\r\n            name: fileName\r\n        });\r\n    };\r\n\r\n    vm.uploadProblemFile = function(fileName) {\r\n        return problemService.uploadProblemFile(vm.contest.nickname, vm.problem.nickname, {\r\n            name: fileName\r\n        });\r\n    };\r\n\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditProblemController', EditProblemController);\r\n\r\n/** @ngInject */\r\nfunction EditProblemController($location, $filter, problemService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.lastVersion = vm.problem.v[ vm.problem.v.length-1 ];\r\n\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            name:        vm.problem.name,\r\n            description: vm.lastVersion.description,\r\n            time_limit:  vm.lastVersion.time_limit\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.editProblem(vm.contest.nickname, vm.problem.nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.view',\r\n                vm.contest.nickname,\r\n                problem.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateProblemController', CreateProblemController);\r\n\r\n/** @ngInject */\r\nfunction CreateProblemController($location, $filter, $routeParams, problemService, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n\r\n        fillDefaultValues();\r\n    };\r\n\r\n    function fillDefaultValues() {\r\n        vm.form = {};\r\n        vm.form.time_limit = 1;\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.createProblem(vm.contest_nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.view',\r\n                vm.contest_nickname,\r\n                problem.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllLogsController', ViewAllLogsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllLogsController(logService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.logsList = [];\r\n\r\n        logService.getLogs()\r\n        .then(function(logs) {\r\n            vm.logsList = logs;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('RegularInvitationController', RegularInvitationController);\r\n\r\n/** @ngInject */\r\nfunction RegularInvitationController($location, $routeParams, $filter, $route, authService, routeUser, userService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.user_id = $routeParams.user_id;\r\n        vm.user = routeUser;\r\n\r\n        fillDefaultValues();\r\n    };\r\n\r\n    function fillDefaultValues() {\r\n        vm.form = {\r\n            email:    routeUser.email,\r\n            username: routeUser.username || '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        userService.editUser(vm.user_id, {\r\n            username: form.username,\r\n            password: form.password\r\n        })\r\n        .then(function(user) {\r\n            return authService.login(form.username, form.password);\r\n        })\r\n        .then(function(data) {\r\n            $route.reload();\r\n            $location.path($filter('url', 'main'));\r\n        })\r\n        .catch(function(err) {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContributorController', CreateContributorController);\r\n\r\n/** @ngInject */\r\nfunction CreateContributorController($location, $filter, userService, contributorService, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tvm.contest = routeContest;\r\n    \tvm.usersList = [];\r\n\r\n    \tuserService.getUsers()\r\n    \t.then(function(users) {\r\n    \t\tvm.usersList = users.filter(function(user) {\r\n    \t\t\treturn !vm.contest.contributors.some(function(contributor) {\r\n    \t\t\t\treturn contributor.username === user.username;\r\n    \t\t\t});\r\n    \t\t});\r\n    \t});\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contributorService.createContributor(vm.contest.nickname, {\r\n            user_id: vm.form.user._id\r\n        })\r\n        .then(function(contest) {\r\n            $location.path($filter('url')(\r\n                'contest.view',\r\n                vm.contest.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllContestsController', ViewAllContestsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllContestsController(contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.contestList = [];\r\n\r\n        contestService.getContests(vm.me.permissions && vm.me.permissions.delete_contest)\r\n        .then(function(contests) {\r\n            vm.contestList = contests;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewContestController', ViewContestController);\r\n\r\n/** @ngInject */\r\nfunction ViewContestController(authService, downloadService, contestService, contributorService, problemService, routeMe, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me      = routeMe;\r\n        vm.contest = routeContest;\r\n\r\n        updateListOfProblems(vm.contest.problems);\r\n        updateLastBocaZip(vm.contest.bocaZip);\r\n    };\r\n\r\n    vm.canI = function(action, obj) {\r\n        switch(action) {\r\n            case 'delete_contributor':\r\n                return vm.contest.author._id == vm.me._id;\r\n            case 'delete_problem':\r\n                return vm.contest.author._id == vm.me._id;\r\n            default:\r\n                return false;\r\n        }\r\n    };\r\n\r\n    vm.deleteContributor = function(contributor) {\r\n        return function() {\r\n            contributorService.deleteContributor(vm.contest.nickname, contributor._id)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteProblem = function(problem) {\r\n        return function() {\r\n            problemService.deleteProblem(vm.contest.nickname, problem.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                updateListOfProblems(vm.contest.problems);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteContest = function() {\r\n        return function() {\r\n            contestService.deleteContest(vm.contest.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    function updateLastBocaZip(bocaZipList) {\r\n        if(!Array.isArray(bocaZipList) || !bocaZipList.length) {\r\n            return vm.latestBocaZip = null;\r\n        }\r\n\r\n        vm.latestBocaZip = bocaZipList[ bocaZipList.length-1 ];\r\n        vm.latestBocaZip.downloadUrl = 'http://localhost:3010/api/v1' +\r\n            '/contest/' + vm.contest.nickname + \r\n            '/boca/download' +\r\n            '?VersionId=' + vm.latestBocaZip.VersionId + \r\n            '&token=' + authService.getToken();\r\n\r\n        // last file edition on the contest\r\n\r\n        return vm.latestBocaZip;\r\n    }\r\n\r\n    function updateListOfProblems(problems) {\r\n        return vm.problemsList = problems.filter(function(problem) {\r\n            return !problem.deleted_at || vm.canI('delete_problem');\r\n        });\r\n    }\r\n\r\n    vm.generateZip = function() {\r\n        var problemNicknames = vm.contest.problems.map(function(problem) {\r\n            return problem.nickname;\r\n        });\r\n\r\n        contestService.generateBocaZip(vm.contest.nickname, {\r\n            problems: problemNicknames\r\n        })\r\n            .then(function(bocaZip) {\r\n                vm.contest.bocaZip.push(bocaZip);\r\n                updateLastBocaZip(vm.contest.bocaZip);\r\n            })\r\n            .catch(function(err) {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    vm.downloadZip = function(versionId) {\r\n        contestService.downloadBocaZip(vm.contest.nickname, versionId)\r\n            .then(function(signedUrl) {\r\n                downloadService.download(signedUrl);\r\n            })\r\n            .catch(function(err) {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContestController', CreateContestController);\r\n\r\n/** @ngInject */\r\nfunction CreateContestController($location, $filter, contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contestService.createContest({\r\n            name: vm.form.name\r\n        }).then(function(contest) {\r\n            $location.path($filter('url')(\r\n                'contest.list'\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('singleAttachment', singleAttachment);\r\n\r\n/** @ngInject */\r\nfunction singleAttachment() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/single-attachment/single-attachment.html',\r\n        scope           : {\r\n            // the file object (must have a name property).\r\n            file: '<',\r\n\r\n            // callbacks\r\n            signedDownloadCallback: '<',\r\n            signedUploadCallback:   '<',\r\n            afterUploadCallback:    '<',\r\n            removeCallback:         '<'\r\n        },\r\n        controller      : SingleAttachmentController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function SingleAttachmentController(downloadService, Upload) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.loading = false;\r\n        };\r\n\r\n        vm.downloadFile = function() {\r\n            vm.loading = true;\r\n\r\n            vm.signedDownloadCallback()\r\n                .then(function(signedUrl) {\r\n                    vm.loading = false;\r\n\r\n                    downloadService.download(signedUrl);\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível baixar este arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.removeFile = function() {\r\n            vm.loading = true;\r\n\r\n            vm.removeCallback()\r\n                .then(function(response) {\r\n                    vm.loading = false;\r\n\r\n                    vm.file = undefined;\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível excluir este arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.uploadFile = function(file, errFiles) {\r\n            if(errFiles && errFiles[0]) {\r\n                errFiles = errFiles[0];\r\n\r\n                if(errFiles.$errorMessages && errFiles.$errorMessages.maxSize) {\r\n                    return vm.err = 'O arquivo selecionado ultrapassa o limite de 4MB.';\r\n                }\r\n\r\n                return vm.err = 'Erro desconhecido.';\r\n            }\r\n\r\n            if(!file) {\r\n                return;\r\n            }\r\n            var fileName = file.name;\r\n\r\n            vm.loading = true;\r\n            vm.signedUploadCallback(fileName)\r\n                .then(function(signedUrl) {\r\n                    return new Promise(function(resolve, reject) {\r\n                        Upload.upload({\r\n                            url:    signedUrl.url,\r\n                            method: 'POST',\r\n                            data:   {\r\n                                key:                signedUrl.key,\r\n                                Policy:             signedUrl.fields.Policy,\r\n                                'X-Amz-Algorithm':  signedUrl.fields['X-Amz-Algorithm'],\r\n                                'X-Amz-Credential': signedUrl.fields['X-Amz-Credential'],\r\n                                'X-Amz-Date':       signedUrl.fields['X-Amz-Date'],\r\n                                'X-Amz-Signature':  signedUrl.fields['X-Amz-Signature'],\r\n                                file:               file\r\n                            },\r\n                            headers: {\r\n                                'x-access-token': undefined\r\n                            }\r\n                        })\r\n                        .then(function finishCallback(response) {\r\n                            return resolve(response.data);\r\n                        }, function errCallback(err) {\r\n                            return reject(err);\r\n                        }, function progressCallback(evt) {\r\n                            file.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n                        });\r\n                    });\r\n                })\r\n                .then(function(result) {\r\n                    return vm.afterUploadCallback(fileName);\r\n                })\r\n                .then(function(response) {\r\n                    vm.loading = false;\r\n\r\n                    vm.file = {\r\n                        name: fileName\r\n                    };\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível fazer upload deste arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runsList', runsList);\r\n\r\n/** @ngInject */\r\nfunction runsList() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/runs-list/runs-list.html',\r\n        scope           : {\r\n            runs:    '<',\r\n            getLink: '<'\r\n        },\r\n        controller      : RunsListController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunsListController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.solutionRuns = [];\r\n            for(var i=0; i<vm.runs.length; i++) {\r\n                var newSolutionRun = {\r\n                    run_number: vm.runs[i].run_number,\r\n                    runs:       [ vm.runs[i] ],\r\n                    timestamp:  vm.runs[i].timestamp\r\n                };\r\n\r\n                for(var j=vm.runs.length-1; j>i; j--) {\r\n                    if(vm.runs[i].run_number === vm.runs[j].run_number) {\r\n                        newSolutionRun.runs.push(vm.runs[j]);\r\n                        vm.runs.splice(j, 1);\r\n                    }\r\n                }\r\n\r\n                vm.solutionRuns.push(newSolutionRun);\r\n            }\r\n            vm.solutionRuns.sort(function(a, b) {\r\n                return b.run_number - a.run_number;\r\n            });\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runResultTable', runResultTable);\r\n\r\n/** @ngInject */\r\nfunction runResultTable() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/run-result-table/run-result-table.html',\r\n        scope           : {\r\n            problem:   '<',\r\n            solutions: '<',\r\n            checkers:  '<',\r\n            testCases: '<',\r\n            runNumber: '<',\r\n\r\n            customExpectedOutput: '<'\r\n        },\r\n        controller      : RunResultTableController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunResultTableController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            // if not defined which solutions should be shown, \r\n            // it will show all the solutions that were run.\r\n            if(typeof vm.solutions === 'boolean' && vm.solutions) {\r\n                vm.items = vm.problem.solutions.filter(function(solution) {\r\n                    return solution.run.some(function(solutionRun) {\r\n                        return solutionRun.run_number == vm.runNumber;\r\n                    });\r\n                });\r\n            } else if(Array.isArray(vm.solutions)) {\r\n                vm.items = vm.solutions;\r\n            }\r\n\r\n            // if not defined which checkers should be shown, \r\n            // it will show all the checkers that were run.\r\n            if(typeof vm.checkers === 'boolean' && vm.checkers) {\r\n                vm.items = vm.problem.checkers.filter(function(solution) {\r\n                    return solution.run.some(function(solutionRun) {\r\n                        return solutionRun.run_number == vm.runNumber;\r\n                    });\r\n                });\r\n            } else if(Array.isArray(vm.checkers)) {\r\n                vm.items = vm.checkers;\r\n            }\r\n\r\n            // all the runs with the run_number.\r\n            vm.runs = vm.items.reduce(function(prev, item) {\r\n                return prev.concat(\r\n                    item.run\r\n                    .filter(function(itemRun) {\r\n                        return itemRun.run_number == vm.runNumber;\r\n                    })\r\n                    .map(function(itemRun) {\r\n                        itemRun.item              = item;\r\n                        itemRun.test_case         = getTestCase(vm.problem, itemRun.test_case_id);\r\n                        itemRun.test_case.current = itemRun.test_case.v[ itemRun.test_case.v.length-1 ];\r\n\r\n                        return itemRun;\r\n                    })\r\n                );\r\n            }, []);\r\n\r\n            // all the test_cases that were tested.\r\n            vm.testCases = vm.runs.reduce(function(prev, solutionRun) {\r\n                if(prev.indexOf(solutionRun.test_case) === -1) {\r\n                    prev.push(solutionRun.test_case);\r\n                }\r\n                return prev;\r\n            }, []);\r\n\r\n            // map with all the item/test_case results.\r\n            vm.testCaseRunMap = {};\r\n        };\r\n\r\n        function getTestCase(problem, test_case_id) {\r\n            return problem.test_cases.filter(function(test_case) {\r\n                return test_case._id == test_case_id;\r\n            })[0];\r\n        }\r\n\r\n        vm.selectRun = function(runs, item_id, test_case_id) {\r\n            vm.selectedRun = vm.getTestCaseRun(runs, item_id, test_case_id);\r\n        };\r\n\r\n        vm.unselectRun = function() {\r\n            vm.selectedRun = null;\r\n        };\r\n\r\n        vm.getTestCaseRun = function(runs, item_id, test_case_id) {\r\n            if(vm.testCaseRunMap[item_id + '-' + test_case_id] === undefined) {\r\n                var testCaseRun = runs.filter(function(run) {\r\n                    return run.item._id  == item_id\r\n                        && run.test_case._id == test_case_id;\r\n                })[0];\r\n\r\n                testCaseRun.verdict = utilService.getVerdict(testCaseRun.verdict);\r\n\r\n                vm.testCaseRunMap[item_id + '-' + test_case_id] = testCaseRun;\r\n            }\r\n\r\n            return vm.testCaseRunMap[item_id + '-' + test_case_id];\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .directive('navbar', navbar);\n\n/** @ngInject */\nfunction navbar() {\n    var directive = {\n        restrict        : 'E',\n        templateUrl     : 'app/components/navbar/navbar.html',\n        scope           : {},\n        controller      : NavbarController,\n        controllerAs    : 'vm',\n        bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController($route, $location, $scope, $filter, authService) {\n        var vm = this;\n\n        vm.init = function() {\n            vm.menuCollapsed = true;\n\n            vm.isLogged = authService.isLogged();\n\n            vm.mainLinks = getMainLinks();\n        };\n\n        function getMainLinks() {\n            var links = [{\n                label:   'Home',\n                urlPath: 'main' \n            }, {\n                label:   'Contests',\n                urlPath: 'contest.list'\n            }, {\n                label:   'Usuários',\n                urlPath: 'user.list'\n            }, {\n                label:   'Histórico',\n                urlPath: 'log'\n            }];\n\n            links.forEach(function(link) {\n                link.active = $location.path() == $filter('url')(link.urlPath);\n            });\n\n            return links;\n        }\n\n        vm.logout = function() {\n            authService.logout();\n            $location.path('/');\n            $route.reload();\n        };\n\n        vm.toggleMobileMenu = function() {\n            vm.menuCollapsed = !vm.menuCollapsed;\n        };\n\n        vm.init();\n        return vm;\n    }\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('genericList', genericList);\r\n\r\n/** @ngInject */\r\nfunction genericList($compile) {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/generic-list/generic-list.html',\r\n        transclude      : true,\r\n        controller      : GenericListController,\r\n        controllerAs    : 'list',\r\n        scope: {\r\n            items:          '<', // list\r\n            noItemsMessage: '<', // string\r\n            headers:        '<', // list\r\n            parent:         '<'  // controller\r\n        },\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function GenericListController() {\r\n        var list = this;\r\n\r\n        list.init = function() {\r\n        };\r\n\r\n        list.init();\r\n        return list;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('breadcrumbs', breadcrumbs);\r\n\r\n/** @ngInject */\r\nfunction breadcrumbs() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/breadcrumbs/breadcrumbs.html',\r\n        scope           : {\r\n            new:      '<', // string of what is being added\r\n            edit:     '<', // true or false\r\n\r\n            users:    '<', // true or false\r\n            user:     '<',\r\n\r\n            contests: '<',\r\n            contest:  '<',\r\n            problem:  '<',\r\n            solution: '<',\r\n            checker:  '<',\r\n            testCase: '<',\r\n\r\n            extra:    '<'  // list of extra labels/urls (for those who don't fit a pattern (yet))\r\n        },\r\n        controller      : BreadcrumbsController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function BreadcrumbsController($filter) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.items = [];\r\n\r\n            // contests list\r\n            if(vm.contests) {\r\n                vm.items.push({\r\n                    label: 'Contests',\r\n                    url:   $filter('url')('contest.list')\r\n                });\r\n\r\n                // contest X\r\n                if(vm.contest) {\r\n                    vm.items.push({\r\n                        label: vm.contest.name,\r\n                        url:   $filter('url')('contest.view', vm.contest.nickname)\r\n                    });\r\n\r\n                    // problem Y\r\n                    if(vm.problem) {\r\n                        vm.items.push({\r\n                            label: vm.problem.name,\r\n                            url:   $filter('url')('contest.problem.view', vm.contest.nickname, vm.problem.nickname)\r\n                        });\r\n\r\n                        // solution Z\r\n                        if(vm.solution) {\r\n                            vm.items.push({\r\n                                label: vm.solution.name,\r\n                                url:   $filter('url')('contest.problem.solution.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\r\n                            });\r\n                        }\r\n\r\n                        // checker Q\r\n                        if(vm.checker) {\r\n                            vm.items.push({\r\n                                label: vm.checker.name,\r\n                                url:   $filter('url')('contest.problem.checker.view', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname)\r\n                            });\r\n                        }\r\n\r\n                        // testcase W\r\n                        if(vm.testCase) {\r\n                            vm.items.push({\r\n                                label: '#' + vm.testCase.v[ vm.testCase.v.length-1 ].order + ' caso de teste',\r\n                                url:   $filter('url')('contest.problem.testCase.view', vm.contest.nickname, vm.problem.nickname, vm.testCase._id)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // users list\r\n            if(vm.users) {\r\n                vm.items.push({\r\n                    label: 'Usuários',\r\n                    url:   $filter('url')('user.list')\r\n                });\r\n\r\n                // user X\r\n                if(vm.user) {\r\n                    vm.items.push({\r\n                        label: vm.user.username,\r\n                        url:   $filter('url')('user.view')\r\n                    });\r\n                }\r\n            }\r\n\r\n            // is an editing page?\r\n            if(vm.edit) {\r\n                vm.items.push({\r\n                    label: 'Editar'\r\n                });\r\n            }\r\n\r\n            // is a creating page?\r\n            if(vm.new) {\r\n                vm.items.push({\r\n                    label: 'Nov' + vm.new\r\n                });\r\n            }\r\n\r\n            if(vm.extra && vm.extra.length) {\r\n                vm.extra.forEach(function(extra) {\r\n                    vm.items.push({\r\n                        label: extra.label,\r\n                        url:   extra.url\r\n                    });\r\n                });\r\n            }\r\n\r\n            // the last item is the selected one\r\n            if(vm.items.length) {\r\n                vm.activeItem = vm.items.pop();\r\n            }\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('alertInactive', alertInactive);\r\n\r\n/** @ngInject */\r\nfunction alertInactive() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/alert-inactive/alert-inactive.html',\r\n        scope           : {\r\n            msg: '<'\r\n        },\r\n        controller      : AlertInactiveController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function AlertInactiveController() {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemCheckerRunController', ViewProblemCheckerRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemCheckerRunController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.runNumber = $routeParams.run_number;\r\n    };\r\n\r\n    vm.urlFilter = $filter('url');\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemCheckerRunsController', ViewProblemCheckerRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemCheckerRunsController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n\r\n        vm.runs = angular.copy(vm.problem.checkers.reduce(function(prev, checker) {\r\n            return prev.concat(checker.run);\r\n        }, []));\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.checkerRun.view', vm.contest.nickname, vm.problem.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerController', ViewCheckerController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerController($routeParams, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.checker_nickname = $routeParams.checker_nickname;\r\n\r\n        vm.checker.current = vm.checker.v[vm.checker.v.length-1];\r\n        vm.checker.current.language = utilService.getLanguage(vm.checker.current.language);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateCheckerController', CreateCheckerController);\r\n\r\n/** @ngInject */\r\nfunction CreateCheckerController($location, $filter, $routeParams, languages, checkerService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        \r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.languages = languages;\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        checkerService.createChecker(vm.contest_nickname, vm.problem_nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(checker) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.checker.view',\r\n                vm.contest_nickname,\r\n                vm.problem_nickname,\r\n                checker.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditCheckerController', EditCheckerController);\r\n\r\n/** @ngInject */\r\nfunction EditCheckerController($location, $filter, languages, checkerService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n        vm.checker.current = vm.checker.v[ vm.checker.v.length-1 ];\r\n\r\n        vm.languages = languages;\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            source_code: vm.checker.current.source_code,\r\n            language:    vm.checker.current.language\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        checkerService.editChecker(vm.contest.nickname, vm.problem.nickname, vm.checker.nickname, {\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(checker) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.checker.view',\r\n                vm.contest.nickname,\r\n                vm.problem.nickname,\r\n                checker.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('utilService', utilService);\r\n\r\n/** @ngInject */\r\nfunction utilService(languages, verdicts) {\r\n    var service = this;\r\n\r\n    service.getLanguage = function(languageValue) {\r\n        return languages.filter(function(l) {\r\n            return l.value == languageValue;\r\n        })[0] || languages[0];\r\n    };\r\n\r\n    service.getVerdict = function(verdictValue) {\r\n        return verdicts.filter(function(v) {\r\n            return v.value == verdictValue;\r\n        })[0] || verdicts[0];\r\n    };\r\n\r\n    service.getValueFromObj = function(obj, path) {\r\n    \tvar dotIndex = path.indexOf('.');\r\n    \t\r\n    \tif(dotIndex !== -1) {\r\n    \t\tvar prefix = path.substr(0, dotIndex);\r\n    \t\tvar suffix = path.substr(dotIndex+1);\r\n\r\n    \t\tif(typeof obj[prefix] !== 'object') {\r\n    \t\t\treturn null;\r\n    \t\t}\r\n\r\n    \t\treturn service.getValueFromObj(obj[prefix], suffix);\r\n    \t} else {\r\n    \t\treturn obj[path];\r\n    \t}\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('userService', userService);\r\n\r\n/** @ngInject */\r\nfunction userService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getUsers = function(show_deleted) {\r\n        return $http.get(apiUrl + 'user' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.users;\r\n        });\r\n    };\r\n\r\n    service.getUser = function(username) {\r\n        return $http.get(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.getUserById = function(_id) {\r\n        return $http.get(apiUrl + 'user/' + _id)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.createUser = function(user) {\r\n        return $http.post(apiUrl + 'user', user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.editUser = function(username, user) {\r\n        return $http.put(apiUrl + 'user/' + username, user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.deleteUser = function(username) {\r\n        return $http.delete(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('urlService', urlService);\r\n\r\n/** @ngInject */\r\nfunction urlService(frontUrls, utilService) {\r\n    var service = this;\r\n\r\n    service.getUrl = function(path, args) {\r\n        var url = utilService.getValueFromObj(frontUrls.urls, path);\r\n        if(!url) {\r\n            return null;\r\n        }\r\n\r\n        if(args.length) {\r\n            args.forEach(function(arg) {\r\n                url = url.replace(/:\\w*/, arg);\r\n            });\r\n        }\r\n\r\n        return url;\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('testCaseService', testCaseService);\r\n\r\n/** @ngInject */\r\nfunction testCaseService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getTestCase = function(contest_nickname, problem_nickname, test_case_id) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.createTestCase = function(contest_nickname, problem_nickname, test_case) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case', \r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.editTestCase = function(contest_nickname, problem_nickname, test_case_id, test_case) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id,\r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.deleteTestCase = function(contest_nickname, problem_nickname, test_case_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('solutionService', solutionService);\r\n\r\n/** @ngInject */\r\nfunction solutionService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.createSolution = function(contest_nickname, problem_nickname, solution) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution', \r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.editSolution = function(contest_nickname, problem_nickname, solution_nickname, solution) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname,\r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.deleteSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('runService', runService);\r\n\r\n/** @ngInject */\r\nfunction runService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.runSolutions = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/run/solutions', \r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.results;\r\n        });\r\n    };\r\n\r\n    service.runCheckers = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/run/checkers', \r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.results;\r\n        });\r\n    };\r\n\r\n    service.getValidatedTestCases = function(problem, runs, versions) {\r\n        var test_cases = angular.copy(problem.test_cases);\r\n        var runs = angular.copy(runs).reverse();\r\n\r\n        runs.forEach(function(run) {\r\n            if(hasCriticalAfter(versions, run.timestamp)) {\r\n                return;\r\n            }\r\n\r\n            for(var i=0; i<test_cases.length; i++) {\r\n                if(test_cases[i]._id == run.test_case_id) {\r\n                    if(!hasCriticalAfter(test_cases[i].v, run.timestamp)\r\n                    && run.verdict == 'Accepted') {\r\n                        test_cases.splice(i, 1);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        return problem.test_cases.length - test_cases.length;\r\n    };\r\n\r\n    function hasCriticalAfter(versions, timestamp) {\r\n        return versions.some(function(version) {\r\n            return version.critical && moment(version.timestamp).isAfter(timestamp);\r\n        });\r\n    }\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('problemService', problemService);\r\n\r\n/** @ngInject */\r\nfunction problemService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.createProblem = function(contest_nickname, problem) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem', \r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.editProblem = function(contest_nickname, problem_nickname, problem) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname,\r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.deleteProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n\r\n    service.downloadProblemFile = function(contest_nickname, problem_nickname, versionId) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file'\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.getUploadProblemFileSignedUrl = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file',\r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.uploadProblemFile = function(contest_nickname, problem_nickname, data) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file',\r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.deleteProblemFile = function(contest_nickname, problem_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file'\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('logService', logService);\r\n\r\n/** @ngInject */\r\nfunction logService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getLogs = function() {\r\n        return $http.get(apiUrl + 'log')\r\n        .then(function(result) {\r\n            return result.data.logs;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('downloadService', downloadService);\r\n\r\n/** @ngInject */\r\nfunction downloadService($document) {\r\n    var service = this;\r\n\r\n    service.download = function(url, popupWindow) {\r\n\t\tvar body = $document.find('body').eq(0);\r\n\t\tvar link = angular.element(\r\n\t\t\t'<a ' +\r\n\t\t\t'id=\"temp_link\" ' +\r\n\t\t\t'download ' +\r\n\t\t\t'href=\"' + url + '\" ' +\r\n\t\t\t'style=\"display: none;\" ' +\r\n\t\t\t(popupWindow ? 'target=\"_blank\" ' : '') +\r\n\t\t\t'>link</a>'\r\n\t\t);\r\n\t\tbody.append(link);\r\n\t\tlink[0].click();\r\n\t\tlink.remove();\r\n\t};\r\n\r\n    return service;\r\n}\r\n\r\n})();\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contributorService', contributorService);\r\n\r\n/** @ngInject */\r\nfunction contributorService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.createContributor = function(contest_nickname, user) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor',\r\n            user\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContributor = function(contest_nickname, user_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor/' + user_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contestService', contestService);\r\n\r\n/** @ngInject */\r\nfunction contestService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getContests = function(show_deleted) {\r\n        return $http.get(apiUrl + 'contest' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.contests;\r\n        });\r\n    };\r\n\r\n    service.getContest = function(nickname) {\r\n        return $http.get(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.createContest = function(contest) {\r\n        return $http.post(apiUrl + 'contest', contest)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContest = function(nickname) {\r\n        return $http.delete(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.generateBocaZip = function(nickname, data) {\r\n        return $http.post(apiUrl + 'contest/' + nickname + '/boca', data)\r\n        .then(function(result) {\r\n            return result.data.bocaZip;\r\n        });\r\n    };\r\n\r\n    service.downloadBocaZip = function(nickname, versionId) {\r\n        return $http.get(apiUrl + 'contest/' + nickname + '/boca/download')\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('checkerService', checkerService);\r\n\r\n/** @ngInject */\r\nfunction checkerService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getChecker = function(contest_nickname, problem_nickname, checker_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.createChecker = function(contest_nickname, problem_nickname, checker) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker', \r\n            checker\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.editChecker = function(contest_nickname, problem_nickname, checker_nickname, checker) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname,\r\n            checker\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.deleteChecker = function(contest_nickname, problem_nickname, checker_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authService', authService);\r\n\r\n/** @ngInject */\r\nfunction authService($q, $http, $window, apiUrl) {\r\n    var service = this;\r\n\r\n    service.login = function(username, password) {\r\n        return $http.post(apiUrl + 'login', {\r\n        \tusername: username,\r\n        \tpassword: password\r\n        })\r\n            .then(function(response) {\r\n                var token = response.data.token;\r\n\r\n                $window.localStorage.setItem('token', token);\r\n                service.setHeaderToken(token);\r\n\r\n                return $q.resolve(response.data);\r\n            });\r\n    };\r\n\r\n    service.logout = function() {\r\n        $window.localStorage.removeItem('token');\r\n        service.unsetHeaderToken();\r\n    };\r\n\r\n    service.setHeaderToken = function(token) {\r\n        $http.defaults.headers.common['x-access-token'] = token;\r\n    };\r\n\r\n    service.unsetHeaderToken = function() {\r\n        delete $http.defaults.headers.common['x-access-token'];\r\n    };\r\n\r\n    service.me = function() {\r\n        return $http.get(apiUrl + 'me')\r\n        .then(function(response) {\r\n            return response.data.me;\r\n        });\r\n    };\r\n\r\n    service.isLogged = function() {\r\n        return !!$window.localStorage.getItem('token');\r\n    };\r\n\r\n    service.getToken = function() {\r\n        return $window.localStorage.getItem('token');\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .controller('MainController', MainController);\n\n/** @ngInject */\nfunction MainController() {\n    var vm = this;\n\n    vm.init = function() {\n    };\n\n    vm.init();\n    return vm;\n}\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('LoginController', LoginController);\r\n\r\n/** @ngInject */\r\nfunction LoginController($route, $filter, $location, authService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tif(authService.isLogged()) {\r\n    \t\t$location.path($filter('url', 'main'));\r\n    \t}\r\n\r\n        var queryMessage = $location.search().message;\r\n        if(queryMessage) {\r\n            switch(queryMessage) {\r\n                case 'access_denied':\r\n                    vm.errorMessage = 'Acesso negado.';\r\n                    break;\r\n\r\n                case 'token_expired':\r\n                    vm.errorMessage = 'Acesso expirado. Refaça seu login.';\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.submit = function() {\r\n    \tauthService.login(vm.form.username, vm.form.password)\r\n    \t.then(function(data) {\r\n    \t\t$route.reload();\r\n    \t})\r\n    \t.catch(function(err) {\r\n    \t\tconsole.log(err);\r\n    \t});\r\n    };\r\n\r\n    vm.init();\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authInterceptor', authInterceptor);\r\n\r\n/** @ngInject */\r\nfunction authInterceptor($q, $injector) {\r\n    var interceptor = this;\r\n\r\n    interceptor.responseError = function(response) {\r\n        if(response.status == 500 && response.data.error == \"TokenExpiredError: jwt expired\") {\r\n            $injector.get('authService').logout();\r\n            return $q.reject(response);\r\n        } else {\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n\r\n    return interceptor;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n\t.module('front')\n\t.run(setToken);\n\n/** @ngInject */\nfunction setToken($http, $window, authService) {\n    var token = $window.localStorage.getItem('token');\n\n    if(token) {\n    \tauthService.setHeaderToken(token);\n    }\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .config(routeConfig)\n  .controller('AppController', AppController);\n\n/** @ngInject */\nfunction routeConfig(frontUrls, $routeProvider, $locationProvider, $httpProvider) {\n    $httpProvider.interceptors.push('authInterceptor');\n\n\n    $routeProvider\n\n    /* main */\n    .when(frontUrls.urls.main, {\n        templateUrl : 'app/main/main.html',\n        controller  : 'MainController',\n        controllerAs: 'vm'\n    })\n\n\n    /* login */\n    .when(frontUrls.urls.login, {\n        templateUrl : 'app/login/login.html',\n        controller  : 'LoginController',\n        controllerAs: 'vm'\n    })\n\n\n    /* invitations */\n    .when(frontUrls.urls.invitation.regular, {\n        templateUrl : 'app/invitations/regular/regular-invitation.html',\n        controller  : 'RegularInvitationController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeUser: getUserById\n        }\n    })\n\n\n    /* logs */\n    .when(frontUrls.urls.log, {\n        templateUrl : 'app/logs/view-all/view-all-logs.html',\n        controller  : 'ViewAllLogsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* users */\n    .when(frontUrls.urls.user.new, {\n        templateUrl : 'app/users/create/create-user.html',\n        controller  : 'CreateUserController',\n        controllerAs: 'vm'\n    })\n    .when(frontUrls.urls.user.view, {\n        templateUrl : 'app/users/view/view-user.html',\n        controller  : 'ViewUserController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe:   getMe,\n            routeUser: getUser\n        }\n    })\n    .when(frontUrls.urls.user.list, {\n        templateUrl : 'app/users/view-all/view-all-users.html',\n        controller  : 'ViewAllUsersController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contests */\n    .when(frontUrls.urls.contest.new, {\n        templateUrl : 'app/contests/create/create-contest.html',\n        controller  : 'CreateContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n    .when(frontUrls.urls.contest.view, {\n        templateUrl : 'app/contests/view/view-contest.html',\n        controller  : 'ViewContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe:      getMe,\n            routeContest: getContest\n        }\n    })\n    .when(frontUrls.urls.contest.list, {\n        templateUrl : 'app/contests/view-all/view-all-contests.html',\n        controller  : 'ViewAllContestsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contributors */\n    .when(frontUrls.urls.contest.contributor.new, {\n        templateUrl : 'app/contributors/create/create-contributor.html',\n        controller  : 'CreateContributorController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest\n        }\n    })\n\n\n    /* problems */\n    .when(frontUrls.urls.contest.problem.new, {\n        templateUrl : 'app/problems/create/create-problem.html',\n        controller  : 'CreateProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest\n        }\n    })\n    .when(frontUrls.urls.contest.problem.view, {\n        templateUrl : 'app/problems/view/view-problem.html',\n        controller  : 'ViewProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.edit, {\n        templateUrl : 'app/problems/edit/edit-problem.html',\n        controller  : 'EditProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    /* solutions */\n    .when(frontUrls.urls.contest.problem.solution.new, {\n        templateUrl : 'app/solutions/create/create-solution.html',\n        controller  : 'CreateSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.view, {\n        templateUrl : 'app/solutions/view/view-solution.html',\n        controller  : 'ViewSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest:  getContest,\n            routeProblem:  getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.edit, {\n        templateUrl : 'app/solutions/edit/edit-solution.html',\n        controller  : 'EditSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest:  getContest,\n            routeProblem:  getProblem,\n            routeSolution: getSolution\n        }\n    })\n\n\n    /* checkers */\n    .when(frontUrls.urls.contest.problem.checker.new, {\n        templateUrl : 'app/checkers/create/create-checker.html',\n        controller  : 'CreateCheckerController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checker.view, {\n        templateUrl : 'app/checkers/view/view-checker.html',\n        controller  : 'ViewCheckerController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checker.edit, {\n        templateUrl : 'app/checkers/edit/edit-checker.html',\n        controller  : 'EditCheckerController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n\n\n    /* test cases */\n    .when(frontUrls.urls.contest.problem.testCase.new, {\n        templateUrl : 'app/testCases/create/create-testCase.html',\n        controller  : 'CreateTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.view, {\n        templateUrl : 'app/testCases/view/view-testCase.html',\n        controller  : 'ViewTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeTestCase: getTestCase\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.edit, {\n        templateUrl : 'app/testCases/edit/edit-testCase.html',\n        controller  : 'EditTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeTestCase: getTestCase\n        }\n    })\n\n\n    /* solution runs */\n    .when(frontUrls.urls.contest.problem.solution.run.list, {\n        templateUrl : 'app/solutions/runs/list/solution-runs.html',\n        controller  : 'ViewSolutionRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.run.view, {\n        templateUrl : 'app/solutions/runs/view/solution-run.html',\n        controller  : 'ViewSolutionRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.list, {\n        templateUrl : 'app/solutionsRuns/list/solutionRuns-list.html',\n        controller  : 'ViewProblemSolutionRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.view, {\n        templateUrl : 'app/solutionsRuns/view/view-solutionRun.html',\n        controller  : 'ViewProblemSolutionRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    /* checker runs */\n    .when(frontUrls.urls.contest.problem.checker.run.list, {\n        templateUrl : 'app/checkers/runs/list/checker-runs.html',\n        controller  : 'ViewCheckerRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checker.run.view, {\n        templateUrl : 'app/checkers/runs/view/checker-run.html',\n        controller  : 'ViewCheckerRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checkerRun.list, {\n        templateUrl : 'app/checkersRuns/list/checkerRuns-list.html',\n        controller  : 'ViewProblemCheckerRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checkerRun.view, {\n        templateUrl : 'app/checkersRuns/view/view-checkerRun.html',\n        controller  : 'ViewProblemCheckerRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    .otherwise({\n        redirectTo: '/'\n    });\n\n\n    $locationProvider.html5Mode(true);\n}\n\n/** @ngInject */\nfunction AppController($rootScope, $location, $filter) {\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n        if(rejection && rejection.data && rejection.data.error) {\n            switch(rejection.data.error) {\n                case 'Access denied':\n                    $location.search('message', 'access_denied');\n                    $location.path($filter('url')('login'));\n                    break;\n                \n                case 'TokenExpiredError: jwt expired':\n                    $location.search('message', 'token_expired');\n                    $location.path($filter('url')('login'));\n                    return;\n\n                default:\n                    $location.path($filter('url')('login'));\n                    return;\n            }\n        }\n\n        $location.path($filter('url')('login'));\n    });\n}\n\nfunction getMe(authService) {\n    return authService.me();\n}\n\nfunction getUser($route, frontUrls, userService) {\n    return userService.getUser(\n        $route.current.params[frontUrls.paramKeys.user]\n    );\n}\n\nfunction getUserById($route, frontUrls, userService) {\n    return userService.getUserById(\n        $route.current.params[frontUrls.paramKeys.user_id]\n    );\n}\n\nfunction getContest($route, frontUrls, contestService) {\n    return contestService.getContest(\n        $route.current.params[frontUrls.paramKeys.contest]\n    );\n}\n\nfunction getProblem($route, frontUrls, problemService) {\n    return problemService.getProblem(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem]\n    );\n}\n\nfunction getSolution($route, frontUrls, solutionService) {\n    return solutionService.getSolution(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.solution]\n    );\n}\n\nfunction getChecker($route, frontUrls, checkerService) {\n    return checkerService.getChecker(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.checker]\n    );\n}\n\nfunction getTestCase($route, frontUrls, testCaseService) {\n    return testCaseService.getTestCase(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.testCase]\n    );\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.directive('ngTransclude', customNgTransclude);\r\n\r\n/** @ngInject */\r\nfunction customNgTransclude() {\r\n    return {\r\n        restrict: 'EAC',\r\n        link: function($scope, $element, $attrs, controller, $transclude) {\r\n            if(!$transclude) {\r\n                throw minErr('ngTransclude')(\r\n\t\t\t\t\t'orphan',\r\n\t\t\t\t\t'Illegal use of ngTransclude directive in the template! ' +\r\n\t\t\t\t\t'No parent directive that requires a transclusion found. ' +\r\n\t\t\t\t\t'Element: {0}',\r\n\t\t\t\t\tstartingTag($element)\r\n\t\t\t\t);\r\n            }\r\n\r\n            var iScopeType = $attrs['ngTransclude'] || 'sibling';\r\n\r\n            switch(iScopeType) {\r\n                case 'sibling':\r\n                    $transclude(function(clone) {\r\n                        $element.append(clone);\r\n                    });\r\n                    break;\r\n\r\n                case 'parent':\r\n                    $transclude($scope, function(clone) {\r\n                        if(clone.length) {\r\n                            $element.append(clone);\r\n                        }\r\n                    });\r\n                    break;\r\n\r\n                case 'child':\r\n                    var iChildScope = $scope.$new();\r\n                    $transclude(iChildScope, function(clone) {\r\n                        $element.append(clone);\r\n                        $element.on('$destroy', function() {\r\n                            iChildScope.$destroy();\r\n                        });\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.filter('url', url)\r\n\t.filter('myDate', myDate);\r\n\r\n/** @ngInject */\r\nfunction url(urlService) {\r\n\treturn function(input) {\r\n\t\tvar args = [];\r\n\t\tfor(var i=1; i<arguments.length; i++) {\r\n\t\t\targs.push(arguments[i]);\r\n\t\t}\r\n\r\n\t\treturn urlService.getUrl(input, args);\r\n\t};\r\n}\r\n\r\n/** @ngInject */\r\nfunction myDate() {\r\n\treturn function(input) {\r\n\t\tvar currentDate = moment(),\r\n\t\t\tinputDate   = moment(input);\r\n\r\n\t\tif(inputDate.isBefore(currentDate)) {\r\n\t\t\tvar diffInMinutes = currentDate.diff(inputDate, 'minutes', true),\r\n\t\t\t\tdiffInHours   = currentDate.diff(inputDate, 'hours', true),\r\n\t\t\t\tdiffInDays    = currentDate.diff(inputDate, 'days', true),\r\n\t\t\t\tdiffInMonths  = currentDate.diff(inputDate, 'months', true);\r\n\r\n\t\t\tif(diffInMinutes <= 1) {\r\n\t\t\t\treturn 'agora';\r\n\t\t\t} else if(diffInHours < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMinutes) + ' minuto' + (diffInMinutes >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInDays < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInHours) + ' hora' + (diffInHours >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInMonths < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInDays) + ' dia' + (diffInDays >= 2 ? 's' : '');\r\n\t\t\t} else {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMonths) + ' mes' + (diffInMonths >= 2 ? 's' : '');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t}\r\n\t}\r\n}\r\n\r\n})();\r\n\n/* global moment:false */\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .constant('moment', moment)\n    .constant('PromiseProcess', promiseProcess)\n    // .constant('apiUrl', 'http://localhost:3010/api/v1/')\n    .constant('apiUrl', 'http://contestbuilder.ddns.net/api/v1/')\n    .constant('languages', languages())\n    .constant('verdicts', verdicts())\n    .constant('frontUrls', frontUrls());\n\n// list of languages\nfunction languages() {\n\treturn [{\n\t\tlabel: 'Outra',\n\t\tvalue: 'other'\n\t}, {\n\t\tlabel: 'C++',\n\t\tvalue: 'cpp'\n\t}, {\n\t\tlabel: 'C',\n\t\tvalue: 'c'\n\t}];\n}\n\n// list of verdicts\nfunction verdicts() {\n\treturn [{\n\t\tlabel: 'Other',\n\t\tshort: 'Other',\n\t\tvalue: 'Other'\n\t}, {\n\t\tlabel: 'Accepted',\n\t\tshort: 'AC',\n\t\tvalue: 'Accepted'\n\t}, {\n\t\tlabel: 'Presentation error',\n\t\tshort: 'PE',\n\t\tvalue: 'Presentation error'\n\t}, {\n\t\tlabel: 'Wrong answer',\n\t\tshort: 'WA',\n\t\tvalue: 'Wrong answer'\n\t}, {\n\t\tlabel: 'Time limit exceeded',\n\t\tshort: 'TLE',\n\t\tvalue: 'Time limit exceeded'\n\t}, {\n\t\tlabel: 'Compilation error',\n\t\tshort: 'CE',\n\t\tvalue: 'Compilation error'\n\t}];\n}\n\n// list of urls\nfunction frontUrls() {\n\tvar paramKeys = {\n\t\tuser:        'user_nickname',\n\t\tcontest:     'contest_nickname',\n\t\tproblem:     'problem_nickname',\n\t\tsolution:    'solution_nickname',\n\t\tchecker:     'checker_nickname',\n\t\ttestCase:    'test_case_id',\n\t\tsolutionRun: 'run_number',\n\t\tuser_id:     'user_id'\n\t};\n\n\tvar urls = {\n\t\tmain:  '/',\n\t\tlogin: '/login',\n\t\tlog:   '/logs',\n\t\tuser:  {\n\t\t\tnew:  '/users/new',\n\t\t\tview: '/users/:user_nickname',\n\t\t\tlist: '/users'\n\t\t},\n\t\tinvitation: {\n\t\t\tregular: '/invitation/:user_id'\n\t\t},\n\t\tcontest: {\n\t\t\tnew:  '/contests/new',\n\t\t\tview: '/contests/:contest_nickname',\n\t\t\tlist: '/contests',\n\n\t\t\tcontributor: {\n\t\t\t\tnew: '/contests/:contest_nickname/contributors/new'\n\t\t\t},\n\n\t\t\tproblem: {\n\t\t\t\tnew:  '/contests/:contest_nickname/problems/new',\n\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname',\n\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/edit',\n\n\t\t\t\tsolution: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/solutions/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/edit',\n\n\t\t\t\t\trun: {\n\t\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs',\n\t\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs/:run_number'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tchecker: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/checkers/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/edit',\n\n\t\t\t\t\trun: {\n\t\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/runs',\n\t\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/runs/:run_number'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\ttestCase: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/test_cases/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id/edit'\n\t\t\t\t},\n\n\t\t\t\tsolutionRun: {\n\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs/:run_number'\n\t\t\t\t},\n\n\t\t\t\tcheckerRun: {\n\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/checker_runs',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checker_runs/:run_number'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\tparamKeys: paramKeys,\n\t\turls:      urls\n\t};\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .config(removeNgTransclude);\n\n/** @ngInject */\nfunction removeNgTransclude($provide) {\n    $provide.decorator('ngTranscludeDirective', ['$delegate', function ($delegate) {\n        $delegate.shift();\n        return $delegate;\n    }]);\n}\n\n})();\n\nangular.module(\"front\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/login/login.html\",\"<navbar></navbar><alert-inactive ng-if=vm.errorMessage msg=vm.errorMessage></alert-inactive><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Login</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=loginForm ng-submit=vm.submit();><div class=form-group><input type=text name=username ng-model=vm.form.username class=form-control id=login-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><input type=password name=password ng-model=vm.form.password class=form-control id=login-password placeholder=Senha ng-required=true></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=loginForm.$invalid>Login</button></form></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<navbar></navbar><div class=jumbotron><div class=container><h1 class=display-3>Olá!</h1><p>This is a template for a simple marketing or informational website. It includes a large callout called a jumbotron and three supporting pieces of content. Use it as a starting point to create something more unique.</p><p><a class=\\\"btn btn-primary btn-lg\\\" href=/login role=button>Faça login &raquo;</a></p></div></div><div class=container><div class=row><div class=col-12><p>Testing</p></div></div></div>\");\n$templateCache.put(\"app/checkers/create/create-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'o checker\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo checker</h1></div></div><div class=row><div class=col-12><form novalidate name=checkerForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest_nickname : vm.problem_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=checkerForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/checkers/edit/edit-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar checker</h1></div></div><div class=row><div class=col-12><form novalidate name=checkerForm ng-submit=vm.submit(vm.form);><p>{{ vm.checker.name }}</p><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=checker-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=checker-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.checker.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.checker.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=checkerForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/checkers/view/view-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker></breadcrumbs><div id=view-checker><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Linguagem: {{ vm.checker.current.language.label }}</p></div></div><div class=row><div class=col-12><p>Código fonte:</p><pre>{{ vm.checker.current.source_code }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.checker.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.checker.nickname }}\\\">Editar checker</a></div></div></div></div>\");\n$templateCache.put(\"app/checkersRuns/list/checkerRuns-list.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/checkersRuns/view/view-checkerRun.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.checkerRun.list\\', vm.contest.nickname, vm.problem.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=view-checkerRun><div class=container><div class=row><div class=col-12><h2 class=page-title>Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem checkers=true test-cases=vm.problem.test_cases run-number=vm.runNumber custom-expected-output=\\\"\\'ok\\\\n\\'\\\"></run-result-table></div></div>\");\n$templateCache.put(\"app/components/alert-inactive/alert-inactive.html\",\"<div id=alert-inactive class=\\\"alert alert-danger\\\" role=alert><strong>{{ vm.msg }}</strong></div>\");\n$templateCache.put(\"app/components/breadcrumbs/breadcrumbs.html\",\"<div class=container><div class=row><div class=col-12><nav class=breadcrumb><a ng-repeat=\\\"item in vm.items\\\" class=breadcrumb-item ng-href=\\\"{{ item.url }}\\\">{{ item.label }}</a> <span class=\\\"breadcrumb-item active\\\">{{ vm.activeItem.label }}</span></nav></div></div></div>\");\n$templateCache.put(\"app/components/generic-list/generic-list.html\",\"<div class=generic-list><div ng-if=list.items.length class=\\\"row header-row\\\"><div ng-repeat=\\\"header in list.headers\\\" class=header-col ng-class=header.class>{{ header.label }}</div></div><div ng-repeat=\\\"item in list.items\\\" ng-transclude=parent class=item></div><div ng-if=!list.items.length class=row><div class=col-12><p>{{ list.noItemsMessage }}</p></div></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-toggleable-md navbar-inverse bg-inverse\\\"><button class=\\\"navbar-toggler navbar-toggler-right\\\" type=button data-toggle=collapse data-target=#navbarsExampleDefault aria-controls=navbarsExampleDefault aria-expanded=false aria-label=\\\"Toggle navigation\\\" ng-click=vm.toggleMobileMenu()><span class=navbar-toggler-icon></span></button> <a class=navbar-brand href=/ >Contest Builder</a><div class=\\\"collapse navbar-collapse\\\" id=navbarsExampleDefault ng-class=\\\"{ \\'show\\': !vm.menuCollapsed }\\\"><ul class=\\\"navbar-nav mr-auto\\\"><li ng-repeat=\\\"link in vm.mainLinks\\\" class=nav-item ng-class=\\\"{ \\'active\\': link.active }\\\"><a class=nav-link ng-href=\\\"{{ link.urlPath | url }}\\\">{{ link.label }}</a></li></ul><div class=\\\"my-2 my-md-0\\\"><a ng-if=!vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" role=button ng-href=\\\"{{ \\'login\\' | url }}\\\">Login</a> <button ng-if=vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=button ng-click=vm.logout();>Logout</button></div></div></nav>\");\n$templateCache.put(\"app/components/run-result-table/run-result-table.html\",\"<div class=row><div class=col-12><table class=\\\"table table-sm\\\"><thead><tr><th></th><th ng-repeat=\\\"test_case in vm.testCases\\\">#{{ test_case.current.order }}</th></tr></thead><tbody><tr ng-repeat=\\\"item in vm.items\\\"><td>{{ item.name }}</td><td ng-repeat=\\\"test_case in vm.testCases\\\"><span ng-if=\\\"vm.getTestCaseRun(vm.runs, item._id, test_case._id)\\\" ng-click=\\\"vm.selectRun(vm.runs, item._id, test_case._id)\\\">{{ vm.getTestCaseRun(vm.runs, item._id, test_case._id).verdict.short }}</span></td></tr></tbody></table></div></div><div class=row ng-if=vm.selectedRun><div class=col-12><p><span><strong>{{ vm.selectedRun.item.name }} / #{{ vm.selectedRun.test_case.current.order }}</strong> </span><span style=\\\"float: right\\\"><i class=\\\"fa fa-times\\\" aria-hidden=true ng-click=vm.unselectRun()></i></span></p><p><strong>Veredito:</strong> {{ vm.selectedRun.verdict.label }}</p></div><div class=col-6><p><strong>Saída esperada:</strong></p><pre>{{ vm.customExpectedOutput ? vm.customExpectedOutput : vm.selectedRun.test_case.current.output }}</pre></div><div class=col-6><p><strong>Saída:</strong></p><pre>{{ vm.selectedRun.output }}</pre></div></div><div class=row ng-if=!vm.selectedRun><div class=col-12><p>Selecione um item da tabela para ver mais detalhes.</p></div></div>\");\n$templateCache.put(\"app/components/runs-list/runs-list.html\",\"<div class=runs-list><div class=row ng-repeat=\\\"run in vm.solutionRuns\\\"><div class=col-12><p><a ng-href=\\\"{{ vm.getLink(run.run_number) }}\\\">Execução {{ run.run_number }}</a> - {{ run.timestamp | myDate }}</p></div></div></div>\");\n$templateCache.put(\"app/components/single-attachment/single-attachment.html\",\"<button ng-if=!vm.file type=button ngf-select=\\\"vm.uploadFile($file, $invalidFiles)\\\" accept=\\\"\\'*\\'\\\" ngf-max-size=4MB class=\\\"btn btn-link\\\">Adicionar arquivo</button> <button ng-if=vm.file type=button class=\\\"btn btn-link\\\" ng-click=vm.downloadFile();>{{ vm.file.name }}</button> <span ng-if=vm.file ng-click=vm.removeFile();>x</span> <img ng-if=vm.loading src=assets/images/loading.gif><p ng-if=vm.err>{{ vm.err }}</p>\");\n$templateCache.put(\"app/contests/create/create-contest.html\",\"<navbar></navbar><breadcrumbs contests=true new=\\\"\\'o contest\\'\\\"></breadcrumbs><div id=create-contest class=container><div class=row><div class=col-12><h1 class=page-title>Criar contest</h1></div></div><div class=row><div class=\\\"col-sm-12 col-lg-6\\\"><form novalidate name=contestForm ng-submit=vm.submit();><div class=form-group><label for=contest-name>Nome</label><input type=text name=name ng-model=vm.form.name class=form-control id=contest-name placeholder=\\\"Super Contest 2017\\\" ng-required=true></div><div class=form-group><label class=form-label-static for=contest-name>Autor</label><p>{{ vm.me.username }}</p></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"{{ \\'contest.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=contestForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/contests/view/view-contest.html\",\"<navbar></navbar><alert-inactive ng-if=vm.contest.deleted_at msg=\\\"\\'Este contest está inativo.\\'\\\"></alert-inactive><breadcrumbs contests=true contest=vm.contest></breadcrumbs><div id=view-contest><div class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.contest.name }}</h1></div></div><!-- info --><div class=row><div class=col-12><p>Autor: <a ng-href=\\\"{{ \\'user.view\\' | url : vm.contest.author.username }}\\\">{{ vm.contest.author.username }}</a></p></div></div><div class=row><div class=col-12><p>Criado em: <span>{{ vm.contest.created_at | date:\\'dd/MM/yyyy\\' }}</span></p></div></div></div><!-- contributors list --><div class=\\\"container contributors-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Contribuidores:</h4><a ng-if=!vm.contest.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.contributor.new\\' | url : vm.contest.nickname }}\\\">Adicionar contribuidor</a></div></div><generic-list items=vm.contest.contributors no-items-message=\\\"\\'Nenhum contribuidor cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }}</a></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_contributor\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteContributor(item) modal-confirm-title=\\\"\\'Remover contribuidor\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este contribuidor?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- problems list --><div class=\\\"container problems-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Problemas:</h4><a ng-if=!vm.contest.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.new\\' | url : vm.contest.nickname }}\\\">Adicionar problema</a></div></div><generic-list items=vm.problemsList no-items-message=\\\"\\'Nenhum problema cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.view\\' | url : list.parent.contest.nickname : item.nickname }}\\\">{{ item.name }}</a> <span ng-if=item.deleted_at>(Removido em {{ item.deleted_at | date:\\'dd/MM/yyyy\\' }})</span></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_problem\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteProblem(item) modal-confirm-title=\\\"\\'Remover problema\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este problema?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- boca zip list --><div class=\\\"container boca-list\\\"><div class=row><div class=col-12><h4>Exportar arquivos:</h4></div></div><div class=row ng-if=!vm.latestBocaZip><div class=col-12><p>Contest ainda não foi exportado.</p></div></div><div class=row ng-if=vm.latestBocaZip><div class=col-12><p>Data da última exportação: {{ vm.latestBocaZip.timestamp | date : \\'dd/MM/yyyy HH:mm\\' }}</p></div></div><div class=row><div class=col-12><button type=button class=\\\"btn btn-primary\\\" ng-click=vm.generateZip();><i class=\\\"fa fa-file-archive-o\\\" aria-hidden=true></i> Exportar</button> <button ng-if=vm.latestBocaZip type=button class=\\\"btn btn-primary\\\" ng-click=vm.downloadZip(vm.latestBocaZip.versionId);><i class=\\\"fa fa-download\\\" aria-hidden=true></i> Download</button></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row ng-if=\\\"!vm.contest.deleted_at && vm.me.permissions && vm.me.permissions.delete_contest\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteContest(problem) modal-confirm-title=\\\"\\'Desativer contest\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este contest?\\'\\\">Desativar contest</button></div></div></div></div>\");\n$templateCache.put(\"app/contributors/create/create-contributor.html\",\"<navbar></navbar><div class=container><div class=row><div class=col-12><h1 class=page-title>Adicionar novo contribuidor</h1></div></div><div class=row><div class=col-12 ng-if=vm.loading><p>Carregando.</p></div><div class=col-12 ng-if=\\\"!vm.loading && !vm.usersList.length\\\"><p>Não há mais quem adicionar.</p></div><div class=\\\"col-12 col-lg-6\\\" ng-if=\\\"!vm.loading && !!vm.usersList.length\\\"><form novalidate name=userForm ng-submit=vm.submit();><div class=form-group><select name=user ng-model=vm.form.user ng-options=\\\"user as user.username for user in vm.usersList\\\" class=form-control id=contributor-user placeholder=\\\"Nome de usuário\\\" ng-required=true></select></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/contests/view-all/view-all-contests.html\",\"<navbar></navbar><breadcrumbs contests=true></breadcrumbs><div id=view-all-contests><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de contests</h1></div></div></div><div class=\\\"container contest-list\\\"><generic-list items=vm.contestList no-items-message=\\\"\\'Nenhum contest cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',      class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',     class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Criado em\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.view\\' | url : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-4><p>{{ item.created_at | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.new\\' | url }}\\\">Criar contest</a></div></div></div></div>\");\n$templateCache.put(\"app/invitations/regular/regular-invitation.html\",\"<navbar></navbar><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Faça seu cadastro</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=invitationForm ng-submit=vm.submit(vm.form);><div class=form-group><label class=form-label-static for=contest-name>E-mail</label><p>{{ vm.form.email }}</p></div><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=username ng-model=vm.form.username class=form-control id=user-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><label for=user-password>Senha</label><input type=password name=password ng-model=vm.form.password class=form-control id=user-password placeholder=Senha ng-required=true></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'main\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=invitationForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/logs/view-all/view-all-logs.html\",\"<navbar></navbar><div id=view-all-logs><div class=container><div class=row><div class=col-12><h1 class=page-title>Histórico</h1></div></div></div><div class=\\\"container log-list\\\"><generic-list items=vm.logsList no-items-message=\\\"\\'Nenhum log registrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Contest\\',  class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',    class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Mensagem\\', class: \\'col-6\\' },\\r\\n\t\t\t\t{ label: \\'Data\\',     class: \\'col-2\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-2><a ng-href=\\\"{{ \\'contest.view\\' | url : item.contest.nickname }}\\\">{{ item.contest.name }}</a></div><div class=col-2><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-6><p>{{ item.message }}</p></div><div class=col-2><p>{{ item.date | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list></div></div>\");\n$templateCache.put(\"app/problems/create/create-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest new=\\\"\\'o problema\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.view\\' | url : vm.contest_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=problemForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/edit/edit-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"/contests/{{ vm.contest.nickname }}/problems/{{ vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=problemForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/view/view-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem></breadcrumbs><div id=view-problem><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Descrição curta: {{ vm.problem.current.description }}</p></div><div class=col-12><p>Descrição completa:<single-attachment file=vm.problem.file signed-download-callback=vm.getSignedDownloadUrl signed-upload-callback=vm.getSignedUploadUrl after-upload-callback=vm.uploadProblemFile remove-callback=vm.removeProblemFile></single-attachment></p></div><div class=col-12><p>Tempo limite: {{ vm.problem.current.time_limit }}</p></div></div></div><!-- solutions list --><div class=\\\"container solutions-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Soluções:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar solução</a></div></div><generic-list items=vm.problem.solutions no-items-message=\\\"\\'Nenhuma solução cadastrada.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',            class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Casos validados\\', class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\',           class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><span ng-if=!item.validatedTestCases>{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }} </span><a ng-if=item.validatedTestCases ng-href=\\\"{{ \\'contest.problem.solution.run.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname : item.run[ item.run.length-1 ].run_number }}\\\">{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}</a></div><div class=col-4><!-- remover --> <button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteSolution(item) modal-confirm-title=\\\"\\'Remover solução\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover esta solução?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button><!-- validar --> <button class=\\\"btn btn-primary\\\" ng-class=\\\"{ \\'loading-button\\': item.validation && item.validation.status == \\'waiting\\' }\\\" type=button ng-click=list.parent.runSolution($index) ng-disabled=\\\"\\r\\n\t\t\t\t\t\t\titem.validatedTestCases == list.parent.problem.test_cases.length\\r\\n\t\t\t\t\t\t\t|| (item.validation && item.validation.status == \\'waiting\\')\\r\\n\t\t\t\t\t\t\\\"><img ng-if=\\\"item.validation && item.validation.status == \\'waiting\\'\\\" src=assets/images/ripple.svg> <i ng-if=\\\"!item.validation || item.validation.status != \\'waiting\\'\\\" class=\\\"fa fa-check\\\" aria-hidden=true></i></button></div></div><div class=row ng-if=item.validation><div class=col-12><p ng-if=\\\"item.validation.status === \\'waiting\\'\\\">Carregando</p><p ng-if=\\\"item.validation.status === \\'done\\'\\\">{{ item.validation.result.results | json }}</p></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-12><a ng-href=\\\"{{ \\'contest.problem.solutionRun.list\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Ver todas as execuções</a></div></div></div><!-- test cases list --><div class=\\\"container test-cases-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Casos de teste:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar caso de teste</a></div></div><generic-list items=vm.problem.test_cases no-items-message=\\\"\\'Nenhum caso de teste cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'#\\',     class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item._id }}\\\">#{{ $index+1 }}</a></div><div class=col-4><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteTestCase(item) modal-confirm-title=\\\"\\'Remover caso de teste\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este caso de teste?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- checkers list --><div class=\\\"container checkers-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Checkers:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.checker.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar checker</a></div></div><generic-list items=vm.problem.checkers no-items-message=\\\"\\'Nenhum checker cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',            class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Casos validados\\', class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\',           class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.problem.checker.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><span ng-if=!item.validatedTestCases>{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }} </span><a ng-if=item.validatedTestCases ng-href=\\\"{{ \\'contest.problem.checker.run.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname : item.run[ item.run.length-1 ].run_number }}\\\">{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}</a></div><div class=col-4><!-- remover --> <button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteChecker(item) modal-confirm-title=\\\"\\'Remover checker\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este checker?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button><!-- validar --> <button class=\\\"btn btn-primary\\\" ng-class=\\\"{ \\'loading-button\\': item.validation && item.validation.status == \\'waiting\\' }\\\" type=button ng-click=list.parent.runChecker($index) ng-disabled=\\\"\\r\\n\t\t\t\t\t\t\titem.validatedTestCases == list.parent.problem.test_cases.length\\r\\n\t\t\t\t\t\t\t|| (item.validation && item.validation.status == \\'waiting\\')\\r\\n\t\t\t\t\t\t\\\"><img ng-if=\\\"item.validation && item.validation.status == \\'waiting\\'\\\" src=assets/images/ripple.svg> <i ng-if=\\\"!item.validation || item.validation.status != \\'waiting\\'\\\" class=\\\"fa fa-check\\\" aria-hidden=true></i></button></div></div><div class=row ng-if=item.validation><div class=col-12><p ng-if=\\\"item.validation.status === \\'waiting\\'\\\">Carregando</p><p ng-if=\\\"item.validation.status === \\'done\\'\\\">{{ item.validation.result.results | json }}</p></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-12><a ng-href=\\\"{{ \\'contest.problem.checkerRun.list\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Ver todas as execuções</a></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.edit\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Editar problema</a></div></div></div></div>\");\n$templateCache.put(\"app/solutions/create/create-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'a solução\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar nova solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest_nickname : vm.problem_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/edit/edit-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><p>{{ vm.solution.name }}</p><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/view/view-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution></breadcrumbs><div id=view-solution><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Linguagem: {{ vm.solution.current.language.label }}</p></div></div><div class=row><div class=col-12><p>Código fonte:</p><pre>{{ vm.solution.current.source_code }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Editar solução</a></div></div></div></div>\");\n$templateCache.put(\"app/solutionsRuns/list/solutionRuns-list.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutionsRuns/view/view-solutionRun.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solutionRun.list\\', vm.contest.nickname, vm.problem.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=view-solutionRun><div class=container><div class=row><div class=col-12><h2 class=page-title>Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=true test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");\n$templateCache.put(\"app/testCases/create/create-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'o caso de teste\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><!-- for every test case --><div class=row ng-repeat=\\\"testCaseNumber in vm.form.test_cases\\\"><div class=col-12><p>#{{ vm.problem.test_cases.length + 1 + $index }} caso de teste <i class=\\\"fa fa-trash-o\\\" aria-hidden=true uib-tooltip=\\\"Remover caso de teste\\\" ng-if=\\\"vm.form.test_cases.length > 1\\\" ng-click=vm.removeTestCase($index)></i></p></div><!-- input --><div class=col-6><div class=form-group><textarea type=text name=input ng-model=testCaseNumber.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-disabled=\\\"testCaseNumber[\\'input-file\\']\\\" ng-trim=false rows=6></textarea><!-- load from file --> <button ng-if=\\\"!testCaseNumber[\\'input-file\\']\\\" type=button ngf-select=\\\"vm.loadTestCaseFromFile($index, \\'input\\', $file, $invalidFiles)\\\" accept=\\\"\\'*\\'\\\" ngf-max-size=1MB class=\\\"btn btn-link\\\">Carregar de arquivo</button><!-- current file --> <span ng-if=\\\"testCaseNumber[\\'input-file\\']\\\">{{ testCaseNumber[\\'input-file\\'] }}</span><!-- unnattach file --> <span ng-if=\\\"testCaseNumber[\\'input-file\\']\\\" ng-click=\\\"vm.unnattachTestCaseFile($index, \\'input\\');\\\">x</span></div></div><!-- output --><div class=col-6><div class=form-group><textarea type=text name=output ng-model=testCaseNumber.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-disabled=\\\"testCaseNumber[\\'output-file\\']\\\" ng-trim=false rows=6></textarea><!-- load from file --> <button ng-if=\\\"!testCaseNumber[\\'output-file\\']\\\" type=button ngf-select=\\\"vm.loadTestCaseFromFile($index, \\'output\\', $file, $invalidFiles)\\\" accept=\\\"\\'*\\'\\\" ngf-max-size=1MB class=\\\"btn btn-link\\\">Carregar de arquivo</button><!-- current file --> <span ng-if=\\\"testCaseNumber[\\'output-file\\']\\\">{{ testCaseNumber[\\'output-file\\'] }}</span><!-- unnattach file --> <span ng-if=\\\"testCaseNumber[\\'output-file\\']\\\" ng-click=\\\"vm.unnattachTestCaseFile($index, \\'output\\');\\\">x</span></div></div></div><div class=row style=\\\"margin-bottom: 16px\\\"><div class=col-12><button type=button class=\\\"btn btn-secondary\\\" ng-click=vm.addTestCase()>+</button></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=testCaseForm.$invalid>Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/testCases/edit/edit-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem test-case=vm.testCase edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><div class=row><div class=col-6><div class=form-group><textarea type=text name=input ng-model=vm.form.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-trim=false rows=6></textarea></div></div><div class=col-6><div class=form-group><textarea type=text name=output ng-model=vm.form.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-trim=false rows=6></textarea></div></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.testCase._id }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=testCaseForm.$invalid>Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/testCases/view/view-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem test-case=vm.test_case></breadcrumbs><div id=view-test-case><div class=container><div class=row><div class=col-12><h2 class=page-title>#{{ vm.test_case.current.order }} caso de teste</h2></div></div><!-- info --><div class=row><div class=col-6><p>Entrada:</p><pre>{{ vm.test_case.current.input }}</pre></div><div class=col-6><p>Saída:</p><pre>{{ vm.test_case.current.output }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.test_case._id }}\\\">Editar caso de teste</a></div></div></div></div>\");\n$templateCache.put(\"app/users/create/create-user.html\",\"<navbar></navbar><breadcrumbs users=true new=\\\"\\'o usuário\\'\\\"></breadcrumbs><div id=create-user class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo usuário</h1></div></div><div class=row><div class=col-12><form novalidate name=userForm2 ng-submit=vm.submit(); autocomplete=off><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=new-user-username ng-model=vm.form.username class=form-control id=user-username placeholder=programming_rocks_18 ng-required=true></div><div class=form-group><label for=user-email>E-mail</label><input type=email name=new-user-email ng-model=vm.form.email class=form-control id=user-email placeholder=cool_address@gmail.com ng-required=true autocomplete=off></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'user.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/users/view/view-user.html\",\"<navbar></navbar><breadcrumbs users=true user=vm.user></breadcrumbs><alert-inactive ng-if=vm.user.deleted_at msg=\\\"\\'Esta conta de usuário está inativa.\\'\\\"></alert-inactive><div id=view-user class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.user.username }}</h1></div></div><div class=row ng-if=\\\"!vm.user.deleted_at && vm.me.permissions && vm.me.permissions.delete_user\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteUser() modal-confirm-title=\\\"\\'Desativar usuário\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este usuário?\\'\\\">Desativar usuário</button></div></div></div>\");\n$templateCache.put(\"app/users/view-all/view-all-users.html\",\"<navbar></navbar><breadcrumbs users=true></breadcrumbs><div id=view-all-users class=container><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de usuários</h1></div></div></div><div class=\\\"container user-list\\\"><generic-list items=vm.usersList no-items-message=\\\"\\'Nenhum usuário cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\', class: \\'col-12\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-12><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }} </a><span ng-if=item.deleted_at>(Desativado em {{ item.deleted_at | date:\\'dd/MM/yyyy\\' }})</span></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'user.new\\' | url }}\\\">Criar usuário</a></div></div></div></div>\");\n$templateCache.put(\"app/checkers/runs/view/checker-run.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.checker.run.list\\', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }} - Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=vm.checkersToShow test-cases=vm.problem.test_cases run-number=vm.runNumber custom-expected-output=\\\"\\'ok\\\\n\\'\\\"></run-result-table></div></div>\");\n$templateCache.put(\"app/checkers/runs/list/checker-runs.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/components/modal/modal-confirm/modal-confirm.html\",\"<div class=modal-header><h3 class=modal-title id=modal-title>{{ $ctrl.title }}</h3></div><div class=modal-body id=modal-body><p>{{ $ctrl.body }}</p></div><div class=modal-footer><button class=\\\"btn btn-danger\\\" type=button ng-click=$ctrl.cancel()>Cancelar</button> <button class=\\\"btn btn-primary\\\" type=button ng-click=$ctrl.ok()>Confirmar</button></div>\");\n$templateCache.put(\"app/solutions/runs/list/solution-runs.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutions/runs/view/solution-run.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solution.run.list\\', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=vm.solutionsToShow test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");}]);"],"sourceRoot":"/source/"}