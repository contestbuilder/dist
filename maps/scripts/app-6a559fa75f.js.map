{"version":3,"sources":["scripts/app.js"],"names":["angular","module","ViewSolutionRunController","$routeParams","$filter","utilService","routeContest","routeProblem","routeSolution","vm","this","init","contest","problem","solution","runNumber","run_number","solutionsToShow","solutions","filter","nickname","urlFilter","$inject","controller","ViewSolutionRunsController","runs","copy","run","getRunLink","modalConfirm","$uibModal","$document","ModalConfirmLink","scope","el","attr","ctrl","callback","bind","modalInstance","open","animation","templateUrl","ModalConfirmController","controllerAs","bindToController","result","then","$scope","$uibModalInstance","ok","close","cancel","dismiss","directive","restrict","title","body","link","ViewAllUsersController","userService","routeMe","me","usersList","getUsers","permissions","delete_user","users","ViewUserController","routeUser","user","deleteUser","username","CreateUserController","$location","submit","createUser","form","email","sendEmailInvitation","path","ViewTestCaseController","routeTestCase","test_case","contest_nickname","problem_nickname","test_case_id","current","v","length","EditTestCaseController","testCaseService","fillInitialValues","input","testCase","output","editTestCase","_id","CreateTestCaseController","PromiseProcess","test_cases","addTestCase","push","removeTestCase","index","splice","promiseProcess","forEach","createTestCase","exec","$apply","ViewProblemSolutionRunController","ViewProblemSolutionRunsController","reduce","prev","concat","ViewSolutionController","solution_nickname","language","getLanguage","EditSolutionController","languages","solutionService","name","source_code","editSolution","CreateSolutionController","createSolution","ViewProblemController","solutionRunsService","getValidatedTestCases","undefined","validatedTestCases","deleteSolution","problems","runSolution","solution_index","validationResult","validation","status","runSolutions","cur","results","getSolution","deleteTestCase","CreateProblemController","problemService","fillDefaultValues","time_limit","createProblem","description","EditProblemController","lastVersion","editProblem","ViewAllLogsController","logService","logsList","getLogs","logs","RegularInvitationController","$route","authService","password","user_id","editUser","login","data","reload","err","console","log","CreateContributorController","contributorService","contributors","some","contributor","createContributor","ViewAllContestsController","contestService","contestList","getContests","delete_contest","contests","ViewContestController","canI","action","obj","author","deleteContributor","deleteProblem","deleteContest","CreateContestController","createContest","runsList","RunsListController","solutionRuns","i","newSolutionRun","timestamp","j","sort","a","b","getLink","runResultTable","RunResultTableController","getTestCase","solutionRun","map","testCases","indexOf","solutionTestCaseRunMap","selectRun","solution_id","selectedRun","getSolutionTestCaseRun","unselectRun","solutionTestCaseRun","verdict","getVerdict","navbar","NavbarController","getMainLinks","links","label","urlPath","active","menuCollapsed","isLogged","mainLinks","logout","toggleMobileMenu","genericList","$compile","GenericListController","list","transclude","items","noItemsMessage","headers","parent","breadcrumbs","BreadcrumbsController","url","order","edit","extra","activeItem","pop","new","alertInactive","AlertInactiveController","msg","verdicts","service","languageValue","l","value","verdictValue","getValueFromObj","dotIndex","prefix","substr","suffix","$http","apiUrl","show_deleted","get","getUser","getUserById","post","put","urlService","frontUrls","getUrl","args","urls","arg","replace","hasCriticalAfter","versions","version","critical","moment","isAfter","reverse","getProblem","getContest","$q","$window","response","token","localStorage","setItem","setHeaderToken","resolve","removeItem","unsetHeaderToken","defaults","common","getItem","MainController","LoginController","queryMessage","search","message","errorMessage","authInterceptor","$injector","interceptor","responseError","error","reject","setToken","routeConfig","$routeProvider","$locationProvider","$httpProvider","interceptors","when","main","invitation","regular","getMe","view","otherwise","redirectTo","html5Mode","AppController","$rootScope","$on","event","previous","rejection","params","paramKeys","config","customNgTransclude","$element","$attrs","$transclude","minErr","startingTag","iScopeType","clone","append","iChildScope","$new","on","$destroy","arguments","myDate","currentDate","inputDate","isBefore","diffInMinutes","diff","diffInHours","diffInDays","diffInMonths","Math","floor","short","constant","removeNgTransclude","$provide","decorator","$delegate","shift","$templateCache"],"mappings":"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","file":"scripts/app-6a559fa75f.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('front', [\n    \t'ngAnimate',\n    \t'ngCookies',\n    \t'ngTouch',\n    \t'ngSanitize',\n    \t'ngMessages',\n    \t'ngAria',\n    \t'ngRoute',\n    \t'ui.bootstrap',\n    \t'toastr'\n    ]);\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunController', ViewSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunController($routeParams, $filter, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.solution  = routeSolution;\r\n        vm.runNumber = $routeParams.run_number;\r\n\r\n        vm.solutionsToShow = vm.problem.solutions.filter(function(solution) {\r\n            return solution.nickname === vm.solution.nickname;\r\n        });\r\n\r\n        vm.urlFilter = $filter('url');\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunsController', ViewSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunsController($routeParams, $filter, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n        vm.solution = routeSolution;\r\n\r\n        vm.runs = angular.copy(vm.solution.run);\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.solution.run.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('modalConfirm', modalConfirm);\r\n\r\n/** @ngInject */\r\nfunction modalConfirm($uibModal, $document) {\r\n    var directive = {\r\n        restrict        : 'A',\r\n        scope           : {\r\n            callback: '&modalConfirm',\r\n            title:    '<modalConfirmTitle',\r\n            body:     '<modalConfirmBody'\r\n        },\r\n        link            : ModalConfirmLink\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmLink(scope, el, attr, ctrl) {\r\n        var callback = scope.callback();\r\n\r\n        el.bind('click', function() {\r\n            var modalInstance = $uibModal.open({\r\n                animation:        false,\r\n                templateUrl:      'app/components/modal/modal-confirm/modal-confirm.html',\r\n                controller:       ModalConfirmController,\r\n                controllerAs:     '$ctrl',\r\n                scope:            scope,\r\n                bindToController: true\r\n            });\r\n\r\n            modalInstance.result.then(function(result) {\r\n                callback();\r\n            }, function() {\r\n            });\r\n        });\r\n    }\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmController($scope, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.ok = function() {\r\n            $uibModalInstance.close();\r\n        };\r\n\r\n        vm.cancel = function() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllUsersController', ViewAllUsersController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllUsersController(userService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.usersList = [];\r\n\r\n        userService.getUsers(vm.me.permissions && vm.me.permissions.delete_user)\r\n        .then(function(users) {\r\n            vm.usersList = users;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewUserController', ViewUserController);\r\n\r\n/** @ngInject */\r\nfunction ViewUserController(userService, routeMe, routeUser) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.user = routeUser;\r\n    };\r\n\r\n    vm.deleteUser = function() {\r\n        return function() {\r\n            userService.deleteUser(vm.user.username)\r\n            .then(function(user) {\r\n                vm.user = user;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateUserController', CreateUserController);\r\n\r\n/** @ngInject */\r\nfunction CreateUserController($location, $filter, userService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    };\r\n\r\n    vm.submit = function() {\r\n        userService.createUser({\r\n            username:            vm.form.username,\r\n            email:               vm.form.email,\r\n            sendEmailInvitation: true\r\n        }).then(function(user) {\r\n            $location.path($filter('url')('user.view', user.username));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewTestCaseController', ViewTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction ViewTestCaseController($routeParams, routeContest, routeProblem, routeTestCase) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.test_case = routeTestCase;\r\n\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.test_case_id = $routeParams.test_case_id;\r\n\r\n        vm.test_case.current = vm.test_case.v[vm.test_case.v.length-1];\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditTestCaseController', EditTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction EditTestCaseController($location, $filter, routeContest, routeProblem, routeTestCase, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n        vm.testCase = routeTestCase;\r\n        vm.testCase.current = vm.testCase.v[ vm.testCase.v.length-1 ];\r\n\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            input:  vm.testCase.current.input,\r\n            output: vm.testCase.current.output\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        testCaseService.editTestCase(vm.contest.nickname, vm.problem.nickname, vm.testCase._id, {\r\n            input:  form.input,\r\n            output: form.output\r\n        }).then(function(test_case) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.testCase.view', \r\n                vm.contest.nickname, \r\n                vm.problem.nickname, \r\n                test_case._id\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateTestCaseController', CreateTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction CreateTestCaseController($scope, $location, $filter, PromiseProcess, routeContest, routeProblem, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n\r\n        vm.form = {\r\n            test_cases: [{\r\n                input:  '',\r\n                output: ''\r\n            }]\r\n        };\r\n    };\r\n\r\n    vm.addTestCase = function() {\r\n        vm.form.test_cases.push({\r\n            input:  '',\r\n            output: ''\r\n        });\r\n    };\r\n\r\n    vm.removeTestCase = function(index) {\r\n        vm.form.test_cases.splice(index, 1);\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        var promiseProcess = PromiseProcess();\r\n\r\n        form.test_cases.forEach(function(test_case) {\r\n            promiseProcess.push(function() {\r\n                return testCaseService.createTestCase(vm.contest.nickname, vm.problem.nickname, {\r\n                    input:  test_case.input,\r\n                    output: test_case.output\r\n                }).then(function(test_case) {\r\n                    return test_case._id;\r\n                });\r\n            });\r\n        });\r\n\r\n        promiseProcess.exec([])\r\n        .then(function(test_case_id) {\r\n            $scope.$apply(function() {\r\n                if(form.test_cases.length == 1) {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.testCase.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname, \r\n                        test_case_id\r\n                    ));\r\n                } else {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname\r\n                    ));\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunController', ViewProblemSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.runNumber = $routeParams.run_number;\r\n    };\r\n\r\n    vm.urlFilter = $filter('url');\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunsController', ViewProblemSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunsController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n\r\n        vm.runs = angular.copy(vm.problem.solutions.reduce(function(prev, solution) {\r\n            return prev.concat(solution.run);\r\n        }, []));\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.solutionRun.view', vm.contest.nickname, vm.problem.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionController', ViewSolutionController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionController($routeParams, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.solution = routeSolution;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.solution_nickname = $routeParams.solution_nickname;\r\n\r\n        vm.solution.current = vm.solution.v[vm.solution.v.length-1];\r\n        vm.solution.current.language = utilService.getLanguage(vm.solution.current.language);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditSolutionController', EditSolutionController);\r\n\r\n/** @ngInject */\r\nfunction EditSolutionController($location, $filter, languages, solutionService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.solution = routeSolution;\r\n        vm.solution.current = vm.solution.v[ vm.solution.v.length-1 ];\r\n\r\n        vm.languages = languages;\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            name:        vm.solution.name,\r\n            source_code: vm.solution.current.source_code,\r\n            language:    vm.solution.current.language\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.editSolution(vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.solution.view',\r\n                vm.contest.nickname,\r\n                vm.problem.nickname,\r\n                solution.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateSolutionController', CreateSolutionController);\r\n\r\n/** @ngInject */\r\nfunction CreateSolutionController($location, $filter, $routeParams, languages, solutionService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        \r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.languages = languages;\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.createSolution(vm.contest_nickname, vm.problem_nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.solution.view',\r\n                vm.contest_nickname,\r\n                vm.problem_nickname,\r\n                solution.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemController', ViewProblemController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemController($routeParams, routeContest, routeProblem, solutionService, testCaseService, solutionRunsService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.problem.current = vm.problem.v[vm.problem.v.length-1];\r\n\r\n        getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n    };\r\n\r\n    vm.deleteSolution = function(solution) {\r\n        return function() {\r\n            solutionService.deleteSolution(vm.contest_nickname, vm.problem_nickname, solution.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.runSolution = function(solution_index) {\r\n        var validationResult;\r\n        vm.problem.solutions[solution_index].validation = {\r\n            status: 'waiting'\r\n        };\r\n\r\n        solutionRunsService.runSolutions(vm.contest.nickname, vm.problem.nickname, {\r\n            solutions:  [ vm.problem.solutions[solution_index].nickname ],\r\n            test_cases: vm.problem.test_cases.reduce(function(prev, cur) {\r\n                prev.push(cur._id);\r\n                return prev;\r\n            }, [])\r\n        })\r\n        .then(function(results) {\r\n            validationResult = results;\r\n\r\n            return solutionService.getSolution(\r\n                vm.contest_nickname, \r\n                vm.problem_nickname, \r\n                vm.problem.solutions[solution_index].nickname\r\n            );\r\n        })\r\n        .then(function(solution) {\r\n            vm.problem.solutions[solution_index] = solution;\r\n            getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n\r\n            vm.problem.solutions[solution_index].validation = {\r\n                status: 'done',\r\n                result: validationResult\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.deleteTestCase = function(test_case) {\r\n        return function() {\r\n            testCaseService.deleteTestCase(vm.contest_nickname, vm.problem_nickname, test_case._id)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n            });\r\n        };\r\n    };\r\n\r\n    function getValidatedTestCases(problem, solutions) {\r\n        solutions.forEach(function(solution) {\r\n            if(solution.validatedTestCases !== undefined) {\r\n                return;\r\n            }\r\n\r\n            solution.validatedTestCases = solutionRunsService.getValidatedTestCases(problem, solution);\r\n        });\r\n    }\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateProblemController', CreateProblemController);\r\n\r\n/** @ngInject */\r\nfunction CreateProblemController($location, $filter, $routeParams, problemService, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n\r\n        fillDefaultValues();\r\n    };\r\n\r\n    function fillDefaultValues() {\r\n        vm.form = {};\r\n        vm.form.time_limit = 1;\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.createProblem(vm.contest_nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.view',\r\n                vm.contest_nickname,\r\n                problem.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditProblemController', EditProblemController);\r\n\r\n/** @ngInject */\r\nfunction EditProblemController($location, $filter, problemService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.lastVersion = vm.problem.v[ vm.problem.v.length-1 ];\r\n\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            name:        vm.problem.name,\r\n            description: vm.lastVersion.description,\r\n            time_limit:  vm.lastVersion.time_limit\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.editProblem(vm.contest.nickname, vm.problem.nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.view',\r\n                vm.contest.nickname,\r\n                problem.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllLogsController', ViewAllLogsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllLogsController(logService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.logsList = [];\r\n\r\n        logService.getLogs()\r\n        .then(function(logs) {\r\n            vm.logsList = logs;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('RegularInvitationController', RegularInvitationController);\r\n\r\n/** @ngInject */\r\nfunction RegularInvitationController($location, $routeParams, $route, authService, routeUser, userService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.user_id = $routeParams.user_id;\r\n        vm.user = routeUser;\r\n\r\n        fillDefaultValues();\r\n    };\r\n\r\n    function fillDefaultValues() {\r\n        vm.form = {\r\n            email:    routeUser.email,\r\n            username: routeUser.username || '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        userService.editUser(vm.user_id, {\r\n            username: form.username,\r\n            password: form.password\r\n        })\r\n        .then(function(user) {\r\n            return authService.login(form.username, form.password);\r\n        })\r\n        .then(function(data) {\r\n            $route.reload();\r\n            $location.path($filter('url', 'main'));\r\n        })\r\n        .catch(function(err) {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContributorController', CreateContributorController);\r\n\r\n/** @ngInject */\r\nfunction CreateContributorController($location, $filter, userService, contributorService, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tvm.contest = routeContest;\r\n    \tvm.usersList = [];\r\n\r\n    \tuserService.getUsers()\r\n    \t.then(function(users) {\r\n    \t\tvm.usersList = users.filter(function(user) {\r\n    \t\t\treturn !vm.contest.contributors.some(function(contributor) {\r\n    \t\t\t\treturn contributor.username === user.username;\r\n    \t\t\t});\r\n    \t\t});\r\n    \t});\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contributorService.createContributor(vm.contest.nickname, {\r\n            user_id: vm.form.user._id\r\n        })\r\n        .then(function(contest) {\r\n            $location.path($filter('url')(\r\n                'contest.view',\r\n                vm.contest.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllContestsController', ViewAllContestsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllContestsController(contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.contestList = [];\r\n\r\n        contestService.getContests(vm.me.permissions && vm.me.permissions.delete_contest)\r\n        .then(function(contests) {\r\n            vm.contestList = contests;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewContestController', ViewContestController);\r\n\r\n/** @ngInject */\r\nfunction ViewContestController(contestService, contributorService, problemService, routeMe, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.contest = routeContest;\r\n    };\r\n\r\n    vm.canI = function(action, obj) {\r\n        switch(action) {\r\n            case 'delete_contributor':\r\n                return vm.contest.author._id == vm.me._id;\r\n            case 'delete_problem':\r\n                return vm.contest.author._id == vm.me._id;\r\n            default:\r\n                return false;\r\n        }\r\n    };\r\n\r\n    vm.deleteContributor = function(contributor) {\r\n        return function() {\r\n            contributorService.deleteContributor(vm.contest.nickname, contributor._id)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteProblem = function(problem) {\r\n        return function() {\r\n            problemService.deleteProblem(vm.contest.nickname, problem.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteContest = function() {\r\n        return function() {\r\n            contestService.deleteContest(vm.contest.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContestController', CreateContestController);\r\n\r\n/** @ngInject */\r\nfunction CreateContestController($location, $filter, contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contestService.createContest({\r\n            name: vm.form.name\r\n        }).then(function(contest) {\r\n            $location.path($filter('url')(\r\n                'contest.list'\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runsList', runsList);\r\n\r\n/** @ngInject */\r\nfunction runsList() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/runs-list/runs-list.html',\r\n        scope           : {\r\n            runs:    '<',\r\n            getLink: '<'\r\n        },\r\n        controller      : RunsListController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunsListController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.solutionRuns = [];\r\n            for(var i=0; i<vm.runs.length; i++) {\r\n                var newSolutionRun = {\r\n                    run_number: vm.runs[i].run_number,\r\n                    runs:       [ vm.runs[i] ],\r\n                    timestamp:  vm.runs[i].timestamp\r\n                };\r\n\r\n                for(var j=vm.runs.length-1; j>i; j--) {\r\n                    if(vm.runs[i].run_number === vm.runs[j].run_number) {\r\n                        newSolutionRun.runs.push(vm.runs[j]);\r\n                        vm.runs.splice(j, 1);\r\n                    }\r\n                }\r\n\r\n                vm.solutionRuns.push(newSolutionRun);\r\n            }\r\n            vm.solutionRuns.sort(function(a, b) {\r\n                return b.run_number - a.run_number;\r\n            });\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runResultTable', runResultTable);\r\n\r\n/** @ngInject */\r\nfunction runResultTable() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/run-result-table/run-result-table.html',\r\n        scope           : {\r\n            problem:   '<',\r\n            solutions: '<',\r\n            testCases: '<',\r\n            runNumber: '<'\r\n        },\r\n        controller      : RunResultTableController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunResultTableController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            // if not defined which solutions should be shown, \r\n            // it will show all the solutions that were run.\r\n            if(!vm.solutions) {\r\n                vm.solutions = vm.problem.solutions.filter(function(solution) {\r\n                    return solution.run.some(function(solutionRun) {\r\n                        return solutionRun.run_number == vm.runNumber;\r\n                    });\r\n                });\r\n            }\r\n\r\n            // all the runs with the run_number.\r\n            vm.solutionRuns = vm.solutions.reduce(function(prev, solution) {\r\n                return prev.concat(\r\n                    solution.run\r\n                    .filter(function(solutionRun) {\r\n                        return solutionRun.run_number == vm.runNumber;\r\n                    })\r\n                    .map(function(solutionRun) {\r\n                        solutionRun.solution          = solution;\r\n                        solutionRun.test_case         = getTestCase(vm.problem, solutionRun.test_case_id);\r\n                        solutionRun.test_case.current = solutionRun.test_case.v[ solutionRun.test_case.v.length-1 ];\r\n\r\n                        return solutionRun;\r\n                    })\r\n                );\r\n            }, []);\r\n\r\n            // all the test_cases that were tested.\r\n            vm.testCases = vm.solutionRuns.reduce(function(prev, solutionRun) {\r\n                if(prev.indexOf(solutionRun.test_case) === -1) {\r\n                    prev.push(solutionRun.test_case);\r\n                }\r\n                return prev;\r\n            }, []);\r\n\r\n            // map with all the solution/test_case results.\r\n            vm.solutionTestCaseRunMap = {};\r\n        };\r\n\r\n        function getTestCase(problem, test_case_id) {\r\n            return problem.test_cases.filter(function(test_case) {\r\n                return test_case._id == test_case_id;\r\n            })[0];\r\n        }\r\n\r\n        vm.selectRun = function(solutionRuns, solution_id, test_case_id) {\r\n            vm.selectedRun = vm.getSolutionTestCaseRun(solutionRuns, solution_id, test_case_id);\r\n        };\r\n\r\n        vm.unselectRun = function() {\r\n            vm.selectedRun = null;\r\n        };\r\n\r\n        vm.getSolutionTestCaseRun = function(solutionRuns, solution_id, test_case_id) {\r\n            if(vm.solutionTestCaseRunMap[solution_id + '-' + test_case_id] === undefined) {\r\n                var solutionTestCaseRun = solutionRuns.filter(function(solutionRun) {\r\n                    return solutionRun.solution._id  == solution_id\r\n                        && solutionRun.test_case._id == test_case_id;\r\n                })[0];\r\n\r\n                solutionTestCaseRun.verdict = utilService.getVerdict(solutionTestCaseRun.verdict);\r\n\r\n                vm.solutionTestCaseRunMap[solution_id + '-' + test_case_id] = solutionTestCaseRun;\r\n            }\r\n\r\n            return vm.solutionTestCaseRunMap[solution_id + '-' + test_case_id];\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .directive('navbar', navbar);\n\n/** @ngInject */\nfunction navbar() {\n    var directive = {\n        restrict        : 'E',\n        templateUrl     : 'app/components/navbar/navbar.html',\n        scope           : {},\n        controller      : NavbarController,\n        controllerAs    : 'vm',\n        bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController($route, $location, $scope, $filter, authService) {\n        var vm = this;\n\n        vm.init = function() {\n            vm.menuCollapsed = true;\n\n            vm.isLogged = authService.isLogged();\n\n            vm.mainLinks = getMainLinks();\n        };\n\n        function getMainLinks() {\n            var links = [{\n                label:   'Home',\n                urlPath: 'main' \n            }, {\n                label:   'Contests',\n                urlPath: 'contest.list'\n            }, {\n                label:   'Usuários',\n                urlPath: 'user.list'\n            }, {\n                label:   'Histórico',\n                urlPath: 'log'\n            }];\n\n            links.forEach(function(link) {\n                link.active = $location.path() == $filter('url')(link.urlPath);\n            });\n\n            return links;\n        }\n\n        vm.logout = function() {\n            authService.logout();\n            $location.path('/');\n            $route.reload();\n        };\n\n        vm.toggleMobileMenu = function() {\n            vm.menuCollapsed = !vm.menuCollapsed;\n        };\n\n        vm.init();\n        return vm;\n    }\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('genericList', genericList);\r\n\r\n/** @ngInject */\r\nfunction genericList($compile) {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/generic-list/generic-list.html',\r\n        transclude      : true,\r\n        controller      : GenericListController,\r\n        controllerAs    : 'list',\r\n        scope: {\r\n            items:          '<', // list\r\n            noItemsMessage: '<', // string\r\n            headers:        '<', // list\r\n            parent:         '<'  // controller\r\n        },\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function GenericListController() {\r\n        var list = this;\r\n\r\n        list.init = function() {\r\n        };\r\n\r\n        list.init();\r\n        return list;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('breadcrumbs', breadcrumbs);\r\n\r\n/** @ngInject */\r\nfunction breadcrumbs() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/breadcrumbs/breadcrumbs.html',\r\n        scope           : {\r\n            new:      '<', // string of what is being added\r\n            edit:     '<', // true or false\r\n\r\n            users:    '<', // true or false\r\n            user:     '<',\r\n\r\n            contests: '<',\r\n            contest:  '<',\r\n            problem:  '<',\r\n            solution: '<',\r\n            testCase: '<',\r\n\r\n            extra:    '<'  // list of extra labels/urls (for those who don't fit a pattern (yet))\r\n        },\r\n        controller      : BreadcrumbsController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function BreadcrumbsController($filter) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.items = [];\r\n\r\n            // contests list\r\n            if(vm.contests) {\r\n                vm.items.push({\r\n                    label: 'Contests',\r\n                    url:   $filter('url')('contest.list')\r\n                });\r\n\r\n                // contest X\r\n                if(vm.contest) {\r\n                    vm.items.push({\r\n                        label: vm.contest.name,\r\n                        url:   $filter('url')('contest.view', vm.contest.nickname)\r\n                    });\r\n\r\n                    // problem Y\r\n                    if(vm.problem) {\r\n                        vm.items.push({\r\n                            label: vm.problem.name,\r\n                            url:   $filter('url')('contest.problem.view', vm.contest.nickname, vm.problem.nickname)\r\n                        });\r\n\r\n                        // solution Z\r\n                        if(vm.solution) {\r\n                            vm.items.push({\r\n                                label: vm.solution.name,\r\n                                url:   $filter('url')('contest.problem.solution.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\r\n                            });\r\n                        }\r\n\r\n                        // testcase W\r\n                        if(vm.testCase) {\r\n                            vm.items.push({\r\n                                label: '#' + vm.testCase.v[ vm.testCase.v.length-1 ].order + ' caso de teste',\r\n                                url:   $filter('url')('contest.problem.testCase.view', vm.contest.nickname, vm.problem.nickname, vm.testCase._id)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // users list\r\n            if(vm.users) {\r\n                vm.items.push({\r\n                    label: 'Usuários',\r\n                    url:   $filter('url')('user.list')\r\n                });\r\n\r\n                // user X\r\n                if(vm.user) {\r\n                    vm.items.push({\r\n                        label: vm.user.username,\r\n                        url:   $filter('url')('user.view')\r\n                    });\r\n                }\r\n            }\r\n\r\n            // is an editing page?\r\n            if(vm.edit) {\r\n                vm.items.push({\r\n                    label: 'Editar'\r\n                });\r\n            }\r\n\r\n            // is a creating page?\r\n            if(vm.new) {\r\n                vm.items.push({\r\n                    label: 'Nov' + vm.new\r\n                });\r\n            }\r\n\r\n            if(vm.extra && vm.extra.length) {\r\n                vm.extra.forEach(function(extra) {\r\n                    vm.items.push({\r\n                        label: extra.label,\r\n                        url:   extra.url\r\n                    });\r\n                });\r\n            }\r\n\r\n            // the last item is the selected one\r\n            if(vm.items.length) {\r\n                vm.activeItem = vm.items.pop();\r\n            }\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('alertInactive', alertInactive);\r\n\r\n/** @ngInject */\r\nfunction alertInactive() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/alert-inactive/alert-inactive.html',\r\n        scope           : {\r\n            msg: '<'\r\n        },\r\n        controller      : AlertInactiveController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function AlertInactiveController() {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('utilService', utilService);\r\n\r\n/** @ngInject */\r\nfunction utilService(languages, verdicts) {\r\n    var service = this;\r\n\r\n    service.getLanguage = function(languageValue) {\r\n        return languages.filter(function(l) {\r\n            return l.value == languageValue;\r\n        })[0] || languages[0];\r\n    };\r\n\r\n    service.getVerdict = function(verdictValue) {\r\n        return verdicts.filter(function(v) {\r\n            return v.value == verdictValue;\r\n        })[0] || verdicts[0];\r\n    };\r\n\r\n    service.getValueFromObj = function(obj, path) {\r\n    \tvar dotIndex = path.indexOf('.');\r\n    \t\r\n    \tif(dotIndex !== -1) {\r\n    \t\tvar prefix = path.substr(0, dotIndex);\r\n    \t\tvar suffix = path.substr(dotIndex+1);\r\n\r\n    \t\tif(typeof obj[prefix] !== 'object') {\r\n    \t\t\treturn null;\r\n    \t\t}\r\n\r\n    \t\treturn service.getValueFromObj(obj[prefix], suffix);\r\n    \t} else {\r\n    \t\treturn obj[path];\r\n    \t}\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('userService', userService);\r\n\r\n/** @ngInject */\r\nfunction userService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getUsers = function(show_deleted) {\r\n        return $http.get(apiUrl + 'user' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.users;\r\n        });\r\n    };\r\n\r\n    service.getUser = function(username) {\r\n        return $http.get(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.getUserById = function(_id) {\r\n        return $http.get(apiUrl + 'user/' + _id)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.createUser = function(user) {\r\n        return $http.post(apiUrl + 'user', user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.editUser = function(username, user) {\r\n        return $http.put(apiUrl + 'user/' + username, user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.deleteUser = function(username) {\r\n        return $http.delete(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('urlService', urlService);\r\n\r\n/** @ngInject */\r\nfunction urlService(frontUrls, utilService) {\r\n    var service = this;\r\n\r\n    service.getUrl = function(path, args) {\r\n        var url = utilService.getValueFromObj(frontUrls.urls, path);\r\n        if(!url) {\r\n            return null;\r\n        }\r\n\r\n        if(args.length) {\r\n            args.forEach(function(arg) {\r\n                url = url.replace(/:\\w*/, arg);\r\n            });\r\n        }\r\n\r\n        return url;\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('testCaseService', testCaseService);\r\n\r\n/** @ngInject */\r\nfunction testCaseService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getTestCase = function(contest_nickname, problem_nickname, test_case_id) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.createTestCase = function(contest_nickname, problem_nickname, test_case) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case', \r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.editTestCase = function(contest_nickname, problem_nickname, test_case_id, test_case) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id,\r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.deleteTestCase = function(contest_nickname, problem_nickname, test_case_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('solutionRunsService', solutionRunsService);\r\n\r\n/** @ngInject */\r\nfunction solutionRunsService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.runSolutions = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/run/solutions', \r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.results;\r\n        });\r\n    };\r\n\r\n    service.getValidatedTestCases = function(problem, solution) {\r\n        var test_cases = angular.copy(problem.test_cases);\r\n        var runs = angular.copy(solution.run).reverse();\r\n\r\n        runs.forEach(function(run) {\r\n            if(hasCriticalAfter(solution.v, run.timestamp)) {\r\n                return;\r\n            }\r\n\r\n            for(var i=0; i<test_cases.length; i++) {\r\n                if(test_cases[i]._id == run.test_case_id) {\r\n                    if(!hasCriticalAfter(test_cases[i].v, run.timestamp)\r\n                    && run.verdict == 'Accepted') {\r\n                        test_cases.splice(i, 1);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        return problem.test_cases.length - test_cases.length;\r\n    };\r\n\r\n    function hasCriticalAfter(versions, timestamp) {\r\n        return versions.some(function(version) {\r\n            return version.critical && moment(version.timestamp).isAfter(timestamp);\r\n        });\r\n    }\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('solutionService', solutionService);\r\n\r\n/** @ngInject */\r\nfunction solutionService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.createSolution = function(contest_nickname, problem_nickname, solution) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution', \r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.editSolution = function(contest_nickname, problem_nickname, solution_nickname, solution) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname,\r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.deleteSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('problemService', problemService);\r\n\r\n/** @ngInject */\r\nfunction problemService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.createProblem = function(contest_nickname, problem) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem', \r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.editProblem = function(contest_nickname, problem_nickname, problem) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname,\r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.deleteProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('logService', logService);\r\n\r\n/** @ngInject */\r\nfunction logService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getLogs = function() {\r\n        return $http.get(apiUrl + 'log')\r\n        .then(function(result) {\r\n            return result.data.logs;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contributorService', contributorService);\r\n\r\n/** @ngInject */\r\nfunction contributorService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.createContributor = function(contest_nickname, user) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor',\r\n            user\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContributor = function(contest_nickname, user_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor/' + user_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contestService', contestService);\r\n\r\n/** @ngInject */\r\nfunction contestService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getContests = function(show_deleted) {\r\n        return $http.get(apiUrl + 'contest' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.contests;\r\n        });\r\n    };\r\n\r\n    service.getContest = function(nickname) {\r\n        return $http.get(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.createContest = function(contest) {\r\n        return $http.post(apiUrl + 'contest', contest)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContest = function(nickname) {\r\n        return $http.delete(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authService', authService);\r\n\r\n/** @ngInject */\r\nfunction authService($q, $http, $window, apiUrl) {\r\n    var service = this;\r\n\r\n    service.login = function(username, password) {\r\n        return $http.post(apiUrl + 'login', {\r\n        \tusername: username,\r\n        \tpassword: password\r\n        })\r\n            .then(function(response) {\r\n                var token = response.data.token;\r\n\r\n                $window.localStorage.setItem('token', token);\r\n                service.setHeaderToken(token);\r\n\r\n                return $q.resolve(response.data);\r\n            });\r\n    };\r\n\r\n    service.logout = function() {\r\n        $window.localStorage.removeItem('token');\r\n        service.unsetHeaderToken();\r\n    };\r\n\r\n    service.setHeaderToken = function(token) {\r\n        $http.defaults.headers.common['x-access-token'] = token;\r\n    };\r\n\r\n    service.unsetHeaderToken = function() {\r\n        delete $http.defaults.headers.common['x-access-token'];\r\n    };\r\n\r\n    service.me = function() {\r\n        return $http.get(apiUrl + 'me')\r\n        .then(function(response) {\r\n            return response.data.me;\r\n        });\r\n    };\r\n\r\n    service.isLogged = function() {\r\n        return !!$window.localStorage.getItem('token');\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .controller('MainController', MainController);\n\n/** @ngInject */\nfunction MainController() {\n    var vm = this;\n\n    vm.init = function() {\n    };\n\n    vm.init();\n    return vm;\n}\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('LoginController', LoginController);\r\n\r\n/** @ngInject */\r\nfunction LoginController($route, $filter, $location, authService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tif(authService.isLogged()) {\r\n    \t\t$location.path($filter('url', 'main'));\r\n    \t}\r\n\r\n        var queryMessage = $location.search().message;\r\n        if(queryMessage) {\r\n            switch(queryMessage) {\r\n                case 'access_denied':\r\n                    vm.errorMessage = 'Acesso negado.';\r\n                    break;\r\n\r\n                case 'token_expired':\r\n                    vm.errorMessage = 'Acesso expirado. Refaça seu login.';\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.submit = function() {\r\n    \tauthService.login(vm.form.username, vm.form.password)\r\n    \t.then(function(data) {\r\n    \t\t$route.reload();\r\n    \t})\r\n    \t.catch(function(err) {\r\n    \t\tconsole.log(err);\r\n    \t});\r\n    };\r\n\r\n    vm.init();\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authInterceptor', authInterceptor);\r\n\r\n/** @ngInject */\r\nfunction authInterceptor($q, $injector) {\r\n    var interceptor = this;\r\n\r\n    interceptor.responseError = function(response) {\r\n        if(response.status == 500 && response.data.error == \"TokenExpiredError: jwt expired\") {\r\n            $injector.get('authService').logout();\r\n            return $q.reject(response);\r\n        } else {\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n\r\n    return interceptor;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n\t.module('front')\n\t.run(setToken);\n\n/** @ngInject */\nfunction setToken($http, $window, authService) {\n    var token = $window.localStorage.getItem('token');\n\n    if(token) {\n    \tauthService.setHeaderToken(token);\n    }\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .config(routeConfig)\n  .controller('AppController', AppController);\n\n/** @ngInject */\nfunction routeConfig(frontUrls, $routeProvider, $locationProvider, $httpProvider) {\n    $httpProvider.interceptors.push('authInterceptor');\n\n\n    $routeProvider\n\n    /* main */\n    .when(frontUrls.urls.main, {\n        templateUrl : 'app/main/main.html',\n        controller  : 'MainController',\n        controllerAs: 'vm'\n    })\n\n\n    /* login */\n    .when(frontUrls.urls.login, {\n        templateUrl : 'app/login/login.html',\n        controller  : 'LoginController',\n        controllerAs: 'vm'\n    })\n\n\n    /* invitations */\n    .when(frontUrls.urls.invitation.regular, {\n        templateUrl : 'app/invitations/regular/regular-invitation.html',\n        controller  : 'RegularInvitationController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeUser: getUserById\n        }\n    })\n\n\n    /* logs */\n    .when(frontUrls.urls.log, {\n        templateUrl : 'app/logs/view-all/view-all-logs.html',\n        controller  : 'ViewAllLogsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* users */\n    .when(frontUrls.urls.user.new, {\n        templateUrl : 'app/users/create/create-user.html',\n        controller  : 'CreateUserController',\n        controllerAs: 'vm'\n    })\n    .when(frontUrls.urls.user.view, {\n        templateUrl : 'app/users/view/view-user.html',\n        controller  : 'ViewUserController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe:   getMe,\n            routeUser: getUser\n        }\n    })\n    .when(frontUrls.urls.user.list, {\n        templateUrl : 'app/users/view-all/view-all-users.html',\n        controller  : 'ViewAllUsersController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contests */\n    .when(frontUrls.urls.contest.new, {\n        templateUrl : 'app/contests/create/create-contest.html',\n        controller  : 'CreateContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n    .when(frontUrls.urls.contest.view, {\n        templateUrl : 'app/contests/view/view-contest.html',\n        controller  : 'ViewContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe:      getMe,\n            routeContest: getContest\n        }\n    })\n    .when(frontUrls.urls.contest.list, {\n        templateUrl : 'app/contests/view-all/view-all-contests.html',\n        controller  : 'ViewAllContestsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contributors */\n    .when(frontUrls.urls.contest.contributor.new, {\n        templateUrl : 'app/contributors/create/create-contributor.html',\n        controller  : 'CreateContributorController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest\n        }\n    })\n\n\n    /* problems */\n    .when(frontUrls.urls.contest.problem.new, {\n        templateUrl : 'app/problems/create/create-problem.html',\n        controller  : 'CreateProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest\n        }\n    })\n    .when(frontUrls.urls.contest.problem.view, {\n        templateUrl : 'app/problems/view/view-problem.html',\n        controller  : 'ViewProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.edit, {\n        templateUrl : 'app/problems/edit/edit-problem.html',\n        controller  : 'EditProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    /* solutions */\n    .when(frontUrls.urls.contest.problem.solution.new, {\n        templateUrl : 'app/solutions/create/create-solution.html',\n        controller  : 'CreateSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.view, {\n        templateUrl : 'app/solutions/view/view-solution.html',\n        controller  : 'ViewSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest:  getContest,\n            routeProblem:  getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.edit, {\n        templateUrl : 'app/solutions/edit/edit-solution.html',\n        controller  : 'EditSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest:  getContest,\n            routeProblem:  getProblem,\n            routeSolution: getSolution\n        }\n    })\n\n\n    /* test cases */\n    .when(frontUrls.urls.contest.problem.testCase.new, {\n        templateUrl : 'app/testCases/create/create-testCase.html',\n        controller  : 'CreateTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.view, {\n        templateUrl : 'app/testCases/view/view-testCase.html',\n        controller  : 'ViewTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeTestCase: getTestCase\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.edit, {\n        templateUrl : 'app/testCases/edit/edit-testCase.html',\n        controller  : 'EditTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeTestCase: getTestCase\n        }\n    })\n\n\n    /* solution runs */\n    .when(frontUrls.urls.contest.problem.solution.run.list, {\n        templateUrl : 'app/solutions/runs/list/solution-runs.html',\n        controller  : 'ViewSolutionRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.run.view, {\n        templateUrl : 'app/solutions/runs/view/solution-run.html',\n        controller  : 'ViewSolutionRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.list, {\n        templateUrl : 'app/solutionsRuns/list/solutionRuns-list.html',\n        controller  : 'ViewProblemSolutionRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.view, {\n        templateUrl : 'app/solutionsRuns/view/view-solutionRun.html',\n        controller  : 'ViewProblemSolutionRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    .otherwise({\n        redirectTo: '/'\n    });\n\n\n    $locationProvider.html5Mode(true);\n}\n\n/** @ngInject */\nfunction AppController($rootScope, $location, $filter) {\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n        if(rejection && rejection.data && rejection.data.error) {\n            switch(rejection.data.error) {\n                case 'Access denied':\n                    $location.search('message', 'access_denied');\n                    $location.path($filter('url')('login'));\n                    break;\n                \n                case 'TokenExpiredError: jwt expired':\n                    $location.search('message', 'token_expired');\n                    $location.path($filter('url')('login'));\n                    return;\n\n                default:\n                    $location.path($filter('url')('login'));\n                    return;\n            }\n        }\n\n        $location.path($filter('url')('login'));\n    });\n}\n\nfunction getMe(authService) {\n    return authService.me();\n}\n\nfunction getUser($route, frontUrls, userService) {\n    return userService.getUser(\n        $route.current.params[frontUrls.paramKeys.user]\n    );\n}\n\nfunction getUserById($route, frontUrls, userService) {\n    return userService.getUserById(\n        $route.current.params[frontUrls.paramKeys.user_id]\n    );\n}\n\nfunction getContest($route, frontUrls, contestService) {\n    return contestService.getContest(\n        $route.current.params[frontUrls.paramKeys.contest]\n    );\n}\n\nfunction getProblem($route, frontUrls, problemService) {\n    return problemService.getProblem(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem]\n    );\n}\n\nfunction getSolution($route, frontUrls, solutionService) {\n    return solutionService.getSolution(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.solution]\n    );\n}\n\nfunction getTestCase($route, frontUrls, testCaseService) {\n    return testCaseService.getTestCase(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.testCase]\n    );\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.directive('ngTransclude', customNgTransclude);\r\n\r\n/** @ngInject */\r\nfunction customNgTransclude() {\r\n    return {\r\n        restrict: 'EAC',\r\n        link: function($scope, $element, $attrs, controller, $transclude) {\r\n            if(!$transclude) {\r\n                throw minErr('ngTransclude')(\r\n\t\t\t\t\t'orphan',\r\n\t\t\t\t\t'Illegal use of ngTransclude directive in the template! ' +\r\n\t\t\t\t\t'No parent directive that requires a transclusion found. ' +\r\n\t\t\t\t\t'Element: {0}',\r\n\t\t\t\t\tstartingTag($element)\r\n\t\t\t\t);\r\n            }\r\n\r\n            var iScopeType = $attrs['ngTransclude'] || 'sibling';\r\n\r\n            switch(iScopeType) {\r\n                case 'sibling':\r\n                    $transclude(function(clone) {\r\n                        $element.append(clone);\r\n                    });\r\n                    break;\r\n\r\n                case 'parent':\r\n                    $transclude($scope, function(clone) {\r\n                        if(clone.length) {\r\n                            $element.append(clone);\r\n                        }\r\n                    });\r\n                    break;\r\n\r\n                case 'child':\r\n                    var iChildScope = $scope.$new();\r\n                    $transclude(iChildScope, function(clone) {\r\n                        $element.append(clone);\r\n                        $element.on('$destroy', function() {\r\n                            iChildScope.$destroy();\r\n                        });\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.filter('url', url)\r\n\t.filter('myDate', myDate);\r\n\r\n/** @ngInject */\r\nfunction url(urlService) {\r\n\treturn function(input) {\r\n\t\tvar args = [];\r\n\t\tfor(var i=1; i<arguments.length; i++) {\r\n\t\t\targs.push(arguments[i]);\r\n\t\t}\r\n\r\n\t\treturn urlService.getUrl(input, args);\r\n\t};\r\n}\r\n\r\n/** @ngInject */\r\nfunction myDate() {\r\n\treturn function(input) {\r\n\t\tvar currentDate = moment(),\r\n\t\t\tinputDate   = moment(input);\r\n\r\n\t\tif(inputDate.isBefore(currentDate)) {\r\n\t\t\tvar diffInMinutes = currentDate.diff(inputDate, 'minutes', true),\r\n\t\t\t\tdiffInHours   = currentDate.diff(inputDate, 'hours', true),\r\n\t\t\t\tdiffInDays    = currentDate.diff(inputDate, 'days', true),\r\n\t\t\t\tdiffInMonths  = currentDate.diff(inputDate, 'months', true);\r\n\r\n\t\t\tif(diffInMinutes <= 1) {\r\n\t\t\t\treturn 'agora';\r\n\t\t\t} else if(diffInHours < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMinutes) + ' minuto' + (diffInMinutes >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInDays < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInHours) + ' hora' + (diffInHours >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInMonths < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInDays) + ' dia' + (diffInDays >= 2 ? 's' : '');\r\n\t\t\t} else {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMonths) + ' mes' + (diffInMonths >= 2 ? 's' : '');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t}\r\n\t}\r\n}\r\n\r\n})();\r\n\n/* global moment:false */\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .constant('moment', moment)\n    .constant('PromiseProcess', promiseProcess)\n    // .constant('apiUrl', 'http://localhost:3010/api/v1/')\n    .constant('apiUrl', 'http://18.231.43.57/api/v1/')\n    .constant('languages', languages())\n    .constant('verdicts', verdicts())\n    .constant('frontUrls', frontUrls());\n\n// list of languages\nfunction languages() {\n\treturn [{\n\t\tlabel: 'Outra',\n\t\tvalue: 'other'\n\t}, {\n\t\tlabel: 'C++',\n\t\tvalue: 'cpp'\n\t}, {\n\t\tlabel: 'C',\n\t\tvalue: 'c'\n\t}];\n}\n\n// list of verdicts\nfunction verdicts() {\n\treturn [{\n\t\tlabel: 'Other',\n\t\tshort: 'Other',\n\t\tvalue: 'Other'\n\t}, {\n\t\tlabel: 'Accepted',\n\t\tshort: 'AC',\n\t\tvalue: 'Accepted'\n\t}, {\n\t\tlabel: 'Presentation error',\n\t\tshort: 'PE',\n\t\tvalue: 'Presentation error'\n\t}, {\n\t\tlabel: 'Wrong answer',\n\t\tshort: 'WA',\n\t\tvalue: 'Wrong answer'\n\t}, {\n\t\tlabel: 'Time limit exceeded',\n\t\tshort: 'TLE',\n\t\tvalue: 'Time limit exceeded'\n\t}, {\n\t\tlabel: 'Compilation error',\n\t\tshort: 'CE',\n\t\tvalue: 'Compilation error'\n\t}];\n}\n\n// list of urls\nfunction frontUrls() {\n\tvar paramKeys = {\n\t\tuser:        'user_nickname',\n\t\tcontest:     'contest_nickname',\n\t\tproblem:     'problem_nickname',\n\t\tsolution:    'solution_nickname',\n\t\ttestCase:    'test_case_id',\n\t\tsolutionRun: 'run_number',\n\t\tuser_id:     'user_id'\n\t};\n\n\tvar urls = {\n\t\tmain:  '/',\n\t\tlogin: '/login',\n\t\tlog:   '/logs',\n\t\tuser:  {\n\t\t\tnew:  '/users/new',\n\t\t\tview: '/users/:user_nickname',\n\t\t\tlist: '/users'\n\t\t},\n\t\tinvitation: {\n\t\t\tregular: '/invitation/:user_id'\n\t\t},\n\t\tcontest: {\n\t\t\tnew:  '/contests/new',\n\t\t\tview: '/contests/:contest_nickname',\n\t\t\tlist: '/contests',\n\n\t\t\tcontributor: {\n\t\t\t\tnew: '/contests/:contest_nickname/contributors/new'\n\t\t\t},\n\n\t\t\tproblem: {\n\t\t\t\tnew:  '/contests/:contest_nickname/problems/new',\n\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname',\n\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/edit',\n\n\t\t\t\tsolution: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/solutions/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/edit',\n\n\t\t\t\t\trun: {\n\t\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs',\n\t\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs/:run_number'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\ttestCase: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/test_cases/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id/edit'\n\t\t\t\t},\n\n\t\t\t\tsolutionRun: {\n\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs/:run_number'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\tparamKeys: paramKeys,\n\t\turls:      urls\n\t};\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .config(removeNgTransclude);\n\n/** @ngInject */\nfunction removeNgTransclude($provide) {\n    $provide.decorator('ngTranscludeDirective', ['$delegate', function ($delegate) {\n        $delegate.shift();\n        return $delegate;\n    }]);\n}\n\n})();\n\nangular.module(\"front\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/login/login.html\",\"<navbar></navbar><alert-inactive ng-if=vm.errorMessage msg=vm.errorMessage></alert-inactive><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Login</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=loginForm ng-submit=vm.submit();><div class=form-group><input type=text name=username ng-model=vm.form.username class=form-control id=login-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><input type=password name=password ng-model=vm.form.password class=form-control id=login-password placeholder=Senha ng-required=true></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=loginForm.$invalid>Login</button></form></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<navbar></navbar><div class=jumbotron><div class=container><h1 class=display-3>Olá!</h1><p>This is a template for a simple marketing or informational website. It includes a large callout called a jumbotron and three supporting pieces of content. Use it as a starting point to create something more unique.</p><p><a class=\\\"btn btn-primary btn-lg\\\" href=/login role=button>Faça login &raquo;</a></p></div></div><div class=container><div class=row><div class=col-12><p>Testing</p></div></div></div>\");\n$templateCache.put(\"app/components/alert-inactive/alert-inactive.html\",\"<div id=alert-inactive class=\\\"alert alert-danger\\\" role=alert><strong>{{ vm.msg }}</strong></div>\");\n$templateCache.put(\"app/components/generic-list/generic-list.html\",\"<div class=generic-list><div ng-if=list.items.length class=\\\"row header-row\\\"><div ng-repeat=\\\"header in list.headers\\\" class=header-col ng-class=header.class>{{ header.label }}</div></div><div ng-repeat=\\\"item in list.items\\\" ng-transclude=parent class=item></div><div ng-if=!list.items.length class=row><div class=col-12><p>{{ list.noItemsMessage }}</p></div></div></div>\");\n$templateCache.put(\"app/components/breadcrumbs/breadcrumbs.html\",\"<div class=container><div class=row><div class=col-12><nav class=breadcrumb><a ng-repeat=\\\"item in vm.items\\\" class=breadcrumb-item ng-href=\\\"{{ item.url }}\\\">{{ item.label }}</a> <span class=\\\"breadcrumb-item active\\\">{{ vm.activeItem.label }}</span></nav></div></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-toggleable-md navbar-inverse bg-inverse\\\"><button class=\\\"navbar-toggler navbar-toggler-right\\\" type=button data-toggle=collapse data-target=#navbarsExampleDefault aria-controls=navbarsExampleDefault aria-expanded=false aria-label=\\\"Toggle navigation\\\" ng-click=vm.toggleMobileMenu()><span class=navbar-toggler-icon></span></button> <a class=navbar-brand href=/ >Contest Builder</a><div class=\\\"collapse navbar-collapse\\\" id=navbarsExampleDefault ng-class=\\\"{ \\'show\\': !vm.menuCollapsed }\\\"><ul class=\\\"navbar-nav mr-auto\\\"><li ng-repeat=\\\"link in vm.mainLinks\\\" class=nav-item ng-class=\\\"{ \\'active\\': link.active }\\\"><a class=nav-link ng-href=\\\"{{ link.urlPath | url }}\\\">{{ link.label }}</a></li></ul><div class=\\\"my-2 my-md-0\\\"><a ng-if=!vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" role=button ng-href=\\\"{{ \\'login\\' | url }}\\\">Login</a> <button ng-if=vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=button ng-click=vm.logout();>Logout</button></div></div></nav>\");\n$templateCache.put(\"app/components/run-result-table/run-result-table.html\",\"<div class=row><div class=col-12><table class=\\\"table table-sm\\\"><thead><tr><th></th><th ng-repeat=\\\"test_case in vm.testCases\\\">#{{ test_case.current.order }}</th></tr></thead><tbody><tr ng-repeat=\\\"solution in vm.solutions\\\"><td>{{ solution.name }}</td><td ng-repeat=\\\"test_case in vm.testCases\\\"><span ng-if=\\\"vm.getSolutionTestCaseRun(vm.solutionRuns, solution._id, test_case._id)\\\" ng-click=\\\"vm.selectRun(vm.solutionRuns, solution._id, test_case._id)\\\">{{ vm.getSolutionTestCaseRun(vm.solutionRuns, solution._id, test_case._id).verdict.short }}</span></td></tr></tbody></table></div></div><div class=row ng-if=vm.selectedRun><div class=col-12><p><span><strong>{{ vm.selectedRun.solution.name }} / #{{ vm.selectedRun.test_case.current.order }}</strong> </span><span style=\\\"float: right\\\"><i class=\\\"fa fa-times\\\" aria-hidden=true ng-click=vm.unselectRun()></i></span></p><p><strong>Veredito:</strong> {{ vm.selectedRun.verdict.label }}</p></div><div class=col-6><p><strong>Saída esperada:</strong></p><pre>{{ vm.selectedRun.test_case.current.output }}</pre></div><div class=col-6><p><strong>Saída:</strong></p><pre>{{ vm.selectedRun.output }}</pre></div></div><div class=row ng-if=!vm.selectedRun><div class=col-12><p>Selecione um item da tabela para ver mais detalhes.</p></div></div>\");\n$templateCache.put(\"app/components/runs-list/runs-list.html\",\"<div class=runs-list><div class=row ng-repeat=\\\"run in vm.solutionRuns\\\"><div class=col-12><p><a ng-href=\\\"{{ vm.getLink(run.run_number) }}\\\">Execução {{ run.run_number }}</a> - {{ run.timestamp | myDate }}</p></div></div></div>\");\n$templateCache.put(\"app/contests/create/create-contest.html\",\"<navbar></navbar><breadcrumbs contests=true new=\\\"\\'o contest\\'\\\"></breadcrumbs><div id=create-contest class=container><div class=row><div class=col-12><h1 class=page-title>Criar contest</h1></div></div><div class=row><div class=\\\"col-sm-12 col-lg-6\\\"><form novalidate name=contestForm ng-submit=vm.submit();><div class=form-group><label for=contest-name>Nome</label><input type=text name=name ng-model=vm.form.name class=form-control id=contest-name placeholder=\\\"Super Contest 2017\\\" ng-required=true></div><div class=form-group><label class=form-label-static for=contest-name>Autor</label><p>{{ vm.me.username }}</p></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"{{ \\'contest.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=contestForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/contests/view-all/view-all-contests.html\",\"<navbar></navbar><breadcrumbs contests=true></breadcrumbs><div id=view-all-contests><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de contests</h1></div></div></div><div class=\\\"container contest-list\\\"><generic-list items=vm.contestList no-items-message=\\\"\\'Nenhum contest cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',      class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',     class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Criado em\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.view\\' | url : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-4><p>{{ item.created_at | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.new\\' | url }}\\\">Criar contest</a></div></div></div></div>\");\n$templateCache.put(\"app/contests/view/view-contest.html\",\"<navbar></navbar><alert-inactive ng-if=vm.contest.deleted_at msg=\\\"\\'Este contest está inativo.\\'\\\"></alert-inactive><breadcrumbs contests=true contest=vm.contest></breadcrumbs><div id=view-contest><div class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.contest.name }}</h1></div></div><!-- info --><div class=row><div class=col-12><p>Autor: <a ng-href=\\\"{{ \\'user.view\\' | url : vm.contest.author.username }}\\\">{{ vm.contest.author.username }}</a></p></div></div><div class=row><div class=col-12><p>Criado em: <span>{{ vm.contest.created_at | date:\\'dd/MM/yyyy\\' }}</span></p></div></div></div><!-- contributors list --><div class=\\\"container contributors-list\\\"><div class=row><div class=col-12><h4>Contribuidores:</h4></div></div><generic-list items=vm.contest.contributors no-items-message=\\\"\\'Nenhum contribuidor cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }}</a></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_contributor\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteContributor(item) modal-confirm-title=\\\"\\'Remover contribuidor\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este contribuidor?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list><div class=row ng-if=!vm.contest.deleted_at><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.contributor.new\\' | url : vm.contest.nickname }}\\\">Adicionar contribuidor</a></div></div></div><!-- problems list --><div class=\\\"container problems-list\\\"><div class=row><div class=col-12><h4>Problemas:</h4></div></div><generic-list items=vm.contest.problems no-items-message=\\\"\\'Nenhum problema cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.view\\' | url : list.parent.contest.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_problem\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteProblem(item) modal-confirm-title=\\\"\\'Remover problema\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este problema?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list><div class=row ng-if=!vm.contest.deleted_at><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.new\\' | url : vm.contest.nickname }}\\\">Adicionar problema</a></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row ng-if=\\\"!vm.contest.deleted_at && vm.me.permissions && vm.me.permissions.delete_contest\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteContest(problem) modal-confirm-title=\\\"\\'Desativer contest\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este contest?\\'\\\">Desativar contest</button></div></div></div></div>\");\n$templateCache.put(\"app/contributors/create/create-contributor.html\",\"<navbar></navbar><div class=container><div class=row><div class=col-12><h1 class=page-title>Adicionar novo contribuidor</h1></div></div><div class=row><div class=col-12 ng-if=vm.loading><p>Carregando.</p></div><div class=col-12 ng-if=\\\"!vm.loading && !vm.usersList.length\\\"><p>Não há mais quem adicionar.</p></div><div class=\\\"col-12 col-lg-6\\\" ng-if=\\\"!vm.loading && !!vm.usersList.length\\\"><form novalidate name=userForm ng-submit=vm.submit();><div class=form-group><select name=user ng-model=vm.form.user ng-options=\\\"user as user.username for user in vm.usersList\\\" class=form-control id=contributor-user placeholder=\\\"Nome de usuário\\\" ng-required=true></select></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/invitations/regular/regular-invitation.html\",\"<navbar></navbar><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Faça seu cadastro</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=invitationForm ng-submit=vm.submit(vm.form);><div class=form-group><label class=form-label-static for=contest-name>E-mail</label><p>{{ vm.form.email }}</p></div><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=username ng-model=vm.form.username class=form-control id=user-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><label for=user-password>Senha</label><input type=password name=password ng-model=vm.form.password class=form-control id=user-password placeholder=Senha ng-required=true></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'main\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=invitationForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/logs/view-all/view-all-logs.html\",\"<navbar></navbar><div id=view-all-logs><div class=container><div class=row><div class=col-12><h1 class=page-title>Histórico</h1></div></div></div><div class=\\\"container log-list\\\"><generic-list items=vm.logsList no-items-message=\\\"\\'Nenhum log registrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Contest\\',  class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',    class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Mensagem\\', class: \\'col-6\\' },\\r\\n\t\t\t\t{ label: \\'Data\\',     class: \\'col-2\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-2><a ng-href=\\\"{{ \\'contest.view\\' | url : item.contest.nickname }}\\\">{{ item.contest.name }}</a></div><div class=col-2><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-6><p>{{ item.message }}</p></div><div class=col-2><p>{{ item.date | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list></div></div>\");\n$templateCache.put(\"app/problems/create/create-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest new=\\\"\\'o problema\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.view\\' | url : vm.contest_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=problemForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/edit/edit-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"/contests/{{ vm.contest.nickname }}/problems/{{ vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=problemForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/view/view-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem></breadcrumbs><div id=view-problem><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Descrição: {{ vm.problem.current.description }}</p></div><div class=col-12><p>Tempo limite: {{ vm.problem.current.time_limit }}</p></div></div></div><!-- solutions list --><div class=\\\"container solutions-list\\\"><div class=row><div class=col-12><h4>Soluções:</h4></div></div><generic-list items=vm.problem.solutions no-items-message=\\\"\\'Nenhuma solução cadastrada.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',            class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Casos validados\\', class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\',           class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><span ng-if=!item.validatedTestCases>{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }} </span><a ng-if=item.validatedTestCases ng-href=\\\"{{ \\'contest.problem.solution.run.list\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}</a></div><div class=col-4><!-- remover --> <button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteSolution(item) modal-confirm-title=\\\"\\'Remover solução\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover esta solução?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button><!-- validar --> <button class=\\\"btn btn-primary\\\" ng-class=\\\"{ \\'loading-button\\': item.validation && item.validation.status == \\'waiting\\' }\\\" type=button ng-click=list.parent.runSolution($index) ng-disabled=\\\"\\r\\n\t\t\t\t\t\t\titem.validatedTestCases == list.parent.problem.test_cases.length\\r\\n\t\t\t\t\t\t\t|| (item.validation && item.validation.status == \\'waiting\\')\\r\\n\t\t\t\t\t\t\\\"><img ng-if=\\\"item.validation && item.validation.status == \\'waiting\\'\\\" src=assets/images/ripple.svg> <i ng-if=\\\"!item.validation || item.validation.status != \\'waiting\\'\\\" class=\\\"fa fa-check\\\" aria-hidden=true></i></button></div></div><div class=row ng-if=item.validation><div class=col-12><p ng-if=\\\"item.validation.status === \\'waiting\\'\\\">Carregando</p><p ng-if=\\\"item.validation.status === \\'done\\'\\\">{{ item.validation.result.results | json }}</p><!-- <a\\r\\n\t\t\t\t\t\tng-if=\\\"item.validation.status === \\'done\\'\\\"\\r\\n\t\t\t\t\t\tng-href=\\\"{{ \\'contest.problem.solution.run.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname : item.validation.result.run_number }}\\\"\\r\\n\t\t\t\t\t>Ver detalhes</a> --></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-6><a ng-href=\\\"{{ \\'contest.problem.solutionRun.list\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Ver todas as execuções</a></div><div class=col-6><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar solução</a></div></div></div><!-- test cases list --><div class=\\\"container test-cases-list\\\"><div class=row><div class=col-12><h4>Casos de teste:</h4></div></div><generic-list items=vm.problem.test_cases no-items-message=\\\"\\'Nenhum caso de teste cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'#\\',     class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item._id }}\\\">#{{ $index+1 }}</a></div><div class=col-4><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteTestCase(item) modal-confirm-title=\\\"\\'Remover caso de teste\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este caso de teste?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar caso de teste</a></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.edit\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Editar problema</a></div></div></div></div>\");\n$templateCache.put(\"app/solutions/create/create-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'a solução\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar nova solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest_nickname : vm.problem_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/edit/edit-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/view/view-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution></breadcrumbs><div id=view-solution><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Linguagem: {{ vm.solution.current.language.label }}</p></div></div><div class=row><div class=col-12><p>Código fonte:</p><pre>{{ vm.solution.current.source_code }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Editar solução</a></div></div></div></div>\");\n$templateCache.put(\"app/solutionsRuns/list/solutionRuns-list.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutionsRuns/view/view-solutionRun.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solutionRun.list\\', vm.contest.nickname, vm.problem.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=view-solutionRun><div class=container><div class=row><div class=col-12><h2 class=page-title>Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");\n$templateCache.put(\"app/testCases/create/create-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'o caso de teste\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><!-- for every test case --><div class=row ng-repeat=\\\"testCaseNumber in vm.form.test_cases\\\"><div class=col-12><p>#{{ vm.problem.test_cases.length + 1 + $index }} caso de teste <i class=\\\"fa fa-trash-o\\\" aria-hidden=true uib-tooltip=\\\"Remover caso de teste\\\" ng-if=\\\"vm.form.test_cases.length > 1\\\" ng-click=vm.removeTestCase($index)></i></p></div><!-- input --><div class=col-6><div class=form-group><textarea type=text name=input ng-model=testCaseNumber.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-trim=false rows=6></textarea></div></div><!-- output --><div class=col-6><div class=form-group><textarea type=text name=output ng-model=testCaseNumber.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-trim=false rows=6></textarea></div></div></div><div class=row style=\\\"margin-bottom: 16px\\\"><div class=col-12><button type=button class=\\\"btn btn-secondary\\\" ng-click=vm.addTestCase()>+</button></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=testCaseForm.$invalid>Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/testCases/edit/edit-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem test-case=vm.testCase edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><div class=row><div class=col-6><div class=form-group><textarea type=text name=input ng-model=vm.form.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-trim=false rows=6></textarea></div></div><div class=col-6><div class=form-group><textarea type=text name=output ng-model=vm.form.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-trim=false rows=6></textarea></div></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.testCase._id }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=testCaseForm.$invalid>Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/testCases/view/view-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem test-case=vm.test_case></breadcrumbs><div id=view-test-case><div class=container><div class=row><div class=col-12><h2 class=page-title>#{{ vm.test_case.current.order }} caso de teste</h2></div></div><!-- info --><div class=row><div class=col-6><p>Entrada:</p><pre>{{ vm.test_case.current.input }}</pre></div><div class=col-6><p>Saída:</p><pre>{{ vm.test_case.current.output }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.test_case._id }}\\\">Editar caso de teste</a></div></div></div></div>\");\n$templateCache.put(\"app/users/create/create-user.html\",\"<navbar></navbar><breadcrumbs users=true new=\\\"\\'o usuário\\'\\\"></breadcrumbs><div id=create-user class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo usuário</h1></div></div><div class=row><div class=col-12><form novalidate name=userForm2 ng-submit=vm.submit(); autocomplete=off><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=new-user-username ng-model=vm.form.username class=form-control id=user-username placeholder=programming_rocks_18 ng-required=true></div><div class=form-group><label for=user-email>E-mail</label><input type=email name=new-user-email ng-model=vm.form.email class=form-control id=user-email placeholder=cool_address@gmail.com ng-required=true autocomplete=off></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'user.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/users/view/view-user.html\",\"<navbar></navbar><breadcrumbs users=true user=vm.user></breadcrumbs><alert-inactive ng-if=vm.user.deleted_at msg=\\\"\\'Esta conta de usuário está inativa.\\'\\\"></alert-inactive><div id=view-user class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.user.username }}</h1></div></div><div class=row ng-if=\\\"!vm.user.deleted_at && vm.me.permissions && vm.me.permissions.delete_user\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteUser() modal-confirm-title=\\\"\\'Desativar usuário\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este usuário?\\'\\\">Desativar usuário</button></div></div></div>\");\n$templateCache.put(\"app/users/view-all/view-all-users.html\",\"<navbar></navbar><breadcrumbs users=true></breadcrumbs><div id=view-all-users class=container><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de usuários</h1></div></div></div><div class=\\\"container user-list\\\"><generic-list items=vm.usersList no-items-message=\\\"\\'Nenhum usuário cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\', class: \\'col-12\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-12><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }} </a><span ng-if=item.deleted_at>(Desativado em {{ item.deleted_at | date:\\'dd/MM/yyyy\\' }})</span></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'user.new\\' | url }}\\\">Criar usuário</a></div></div></div></div>\");\n$templateCache.put(\"app/components/modal/modal-confirm/modal-confirm.html\",\"<div class=modal-header><h3 class=modal-title id=modal-title>{{ $ctrl.title }}</h3></div><div class=modal-body id=modal-body><p>{{ $ctrl.body }}</p></div><div class=modal-footer><button class=\\\"btn btn-danger\\\" type=button ng-click=$ctrl.cancel()>Cancelar</button> <button class=\\\"btn btn-primary\\\" type=button ng-click=$ctrl.ok()>Confirmar</button></div>\");\n$templateCache.put(\"app/solutions/runs/list/solution-runs.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutions/runs/view/solution-run.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solution.run.list\\', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=vm.solutionsToShow test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");}]);"],"sourceRoot":"/source/"}