{"version":3,"sources":["scripts/app.js"],"names":["angular","module","ViewSolutionRunController","$routeParams","$filter","utilService","routeContest","routeProblem","routeSolution","vm","this","init","contest","problem","solution","runNumber","run_number","solutionsToShow","solutions","filter","nickname","urlFilter","$inject","controller","ViewSolutionRunsController","runs","copy","run","getRunLink","modalConfirm","$uibModal","$document","ModalConfirmLink","scope","el","attr","ctrl","callback","bind","modalInstance","open","animation","templateUrl","ModalConfirmController","controllerAs","bindToController","result","then","$scope","$uibModalInstance","ok","close","cancel","dismiss","directive","restrict","title","body","link","ViewCheckerRunController","routeChecker","checker","checkersToShow","checkers","ViewCheckerRunsController","ViewAllUsersController","userService","routeMe","me","usersList","getUsers","permissions","delete_user","users","ViewUserController","routeUser","user","deleteUser","username","CreateUserController","$location","submit","createUser","form","email","sendEmailInvitation","path","ViewProblemSolutionRunController","ViewProblemSolutionRunsController","reduce","prev","concat","ViewTestCaseController","testCaseService","routeTestCase","test_case","contest_nickname","problem_nickname","test_case_id","loadMore","inputType","query","getTestCase","current","EditTestCaseController","fillInitialValues","input","testCase","sample_input","large_input","output","sample_output","large_output","input_file_name","inputFile","original","name","output_file_name","outputFile","currentUploadingCount","params","inputSignedUrl","file_name","outputSignedUrl","editTestCase","_id","loadTestCaseFromFile","fileType","file","fileReader","FileReader","onload","evt","$apply","length","substr","onerror","readAsText","getSignedDownloadCallback","getDownloadFileSignedUrl","getSignedUploadCallback","getUploadFileSignedUrl","signedUrl","afterUploadCallback","Promise","resolve","removeCallback","deleteFile","data","CreateTestCaseController","Upload","PromiseProcess","test_cases","addTestCase","push","removeTestCase","index","splice","promiseProcess","forEach","createTestCase","exec","ViewSolutionController","solution_nickname","v","language","getLanguage","EditSolutionController","languages","solutionService","source_code","editSolution","CreateSolutionController","createSolution","ViewProblemController","downloadService","problemService","checkerService","runService","getValidatedTestCases","items","item","undefined","validatedTestCases","deleteSolution","problems","deleteChecker","runSolution","solution_index","validationResult","validation","status","runSolutions","cur","results","getSolution","runChecker","checker_index","runCheckers","getChecker","deleteTestCase","success","getSignedDownloadUrl","downloadProblemFile","getSignedUploadUrl","getUploadProblemFileSignedUrl","uploadProblemFile","removeProblemFile","deleteProblemFile","EditProblemController","description","lastVersion","time_limit","editProblem","CreateProblemController","fillDefaultValues","createProblem","ViewAllLogsController","logService","logsList","getLogs","logs","RegularInvitationController","$route","authService","password","user_id","editUser","login","reload","err","console","log","ViewAllContestsController","contestService","contestList","getContests","delete_contest","contests","ViewContestController","contributorService","updateLastBocaZip","bocaZipList","Array","isArray","latestBocaZip","downloadUrl","VersionId","getToken","updateListOfProblems","problemsList","deleted_at","canI","bocaZip","action","obj","author","deleteContributor","contributor","deleteProblem","deleteContest","generateZip","problemNicknames","map","generateBocaZip","downloadZip","versionId","downloadBocaZip","download","CreateContestController","createContest","CreateContributorController","contributors","some","createContributor","ViewProblemCheckerRunController","ViewProblemCheckerRunsController","singleAttachment","SingleAttachmentController","loading","downloadFile","signedDownloadCallback","removeFile","response","uploadFile","errFiles","$errorMessages","maxSize","fileName","signedUploadCallback","reject","upload","url","method","key","Policy","fields","X-Amz-Algorithm","X-Amz-Credential","X-Amz-Date","X-Amz-Signature","headers","x-access-token","progress","Math","min","parseInt","loaded","total","customAttachText","runsList","RunsListController","solutionRuns","i","newSolutionRun","timestamp","j","sort","a","b","getLink","runResultTable","RunResultTableController","solutionRun","itemRun","testCases","indexOf","testCaseRunMap","selectRun","item_id","selectedRun","getTestCaseRun","unselectRun","testCaseRun","verdict","getVerdict","customExpectedOutput","navbar","NavbarController","getMainLinks","links","label","urlPath","active","menuCollapsed","isLogged","mainLinks","logout","toggleMobileMenu","genericList","$compile","GenericListController","list","transclude","noItemsMessage","parent","breadcrumbs","BreadcrumbsController","order","edit","extra","activeItem","pop","new","alertInactive","AlertInactiveController","msg","ViewCheckerController","checker_nickname","EditCheckerController","editChecker","CreateCheckerController","createChecker","verdicts","service","languageValue","l","value","verdictValue","getValueFromObj","dotIndex","prefix","suffix","$http","apiUrl","show_deleted","get","getUser","getUserById","post","put","urlService","frontUrls","getUrl","args","urls","arg","replace","hasCriticalAfter","versions","version","critical","moment","isAfter","reverse","getProblem","popupWindow","filename","find","eq","element","append","click","remove","getContest","$q","$window","token","localStorage","setItem","setHeaderToken","removeItem","unsetHeaderToken","defaults","common","getItem","MainController","LoginController","queryMessage","search","message","errorMessage","authInterceptor","$injector","interceptor","responseError","error","setToken","routeConfig","$routeProvider","$locationProvider","$httpProvider","interceptors","when","main","invitation","regular","getMe","view","checkerRun","otherwise","redirectTo","html5Mode","AppController","$rootScope","$on","event","previous","rejection","paramKeys","config","customNgTransclude","$element","$attrs","$transclude","minErr","startingTag","iScopeType","clone","iChildScope","$new","on","$destroy","arguments","myDate","currentDate","inputDate","isBefore","diffInMinutes","diff","diffInHours","diffInDays","diffInMonths","floor","short","constant","removeNgTransclude","$provide","decorator","$delegate","shift","$templateCache"],"mappings":"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","file":"scripts/app-107b1d43ba.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('front', [\n    \t'ngAnimate',\n    \t'ngCookies',\n    \t'ngTouch',\n    \t'ngSanitize',\n    \t'ngMessages',\n    \t'ngAria',\n    \t'ngRoute',\n    \t'ui.bootstrap',\n    \t'toastr',\n        'ngFileUpload'\n    ]);\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunController', ViewSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunController($routeParams, $filter, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.solution  = routeSolution;\r\n        vm.runNumber = $routeParams.run_number;\r\n\r\n        vm.solutionsToShow = vm.problem.solutions.filter(function(solution) {\r\n            return solution.nickname === vm.solution.nickname;\r\n        });\r\n\r\n        vm.urlFilter = $filter('url');\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionRunsController', ViewSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionRunsController($routeParams, $filter, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n        vm.solution = routeSolution;\r\n\r\n        vm.runs = angular.copy(vm.solution.run);\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.solution.run.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('modalConfirm', modalConfirm);\r\n\r\n/** @ngInject */\r\nfunction modalConfirm($uibModal, $document) {\r\n    var directive = {\r\n        restrict        : 'A',\r\n        scope           : {\r\n            callback: '&modalConfirm',\r\n            title:    '<modalConfirmTitle',\r\n            body:     '<modalConfirmBody'\r\n        },\r\n        link            : ModalConfirmLink\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmLink(scope, el, attr, ctrl) {\r\n        var callback = scope.callback();\r\n\r\n        el.bind('click', function() {\r\n            var modalInstance = $uibModal.open({\r\n                animation:        false,\r\n                templateUrl:      'app/components/modal/modal-confirm/modal-confirm.html',\r\n                controller:       ModalConfirmController,\r\n                controllerAs:     '$ctrl',\r\n                scope:            scope,\r\n                bindToController: true\r\n            });\r\n\r\n            modalInstance.result.then(function(result) {\r\n                callback();\r\n            }, function() {\r\n            });\r\n        });\r\n    }\r\n\r\n    /** @ngInject */\r\n    function ModalConfirmController($scope, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.ok = function() {\r\n            $uibModalInstance.close();\r\n        };\r\n\r\n        vm.cancel = function() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerRunController', ViewCheckerRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerRunController($routeParams, $filter, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.checker   = routeChecker;\r\n        vm.runNumber = $routeParams.run_number;\r\n\r\n        vm.checkersToShow = vm.problem.checkers.filter(function(checker) {\r\n            return checker.nickname === vm.checker.nickname;\r\n        });\r\n\r\n        vm.urlFilter = $filter('url');\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerRunsController', ViewCheckerRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerRunsController($routeParams, $filter, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n\r\n        vm.runs = angular.copy(vm.checker.run);\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.checker.run.view', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllUsersController', ViewAllUsersController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllUsersController(userService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.usersList = [];\r\n\r\n        userService.getUsers(vm.me.permissions && vm.me.permissions.delete_user)\r\n        .then(function(users) {\r\n            vm.usersList = users;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewUserController', ViewUserController);\r\n\r\n/** @ngInject */\r\nfunction ViewUserController(userService, routeMe, routeUser) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.user = routeUser;\r\n    };\r\n\r\n    vm.deleteUser = function() {\r\n        return function() {\r\n            userService.deleteUser(vm.user.username)\r\n            .then(function(user) {\r\n                vm.user = user;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateUserController', CreateUserController);\r\n\r\n/** @ngInject */\r\nfunction CreateUserController($location, $filter, userService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    };\r\n\r\n    vm.submit = function() {\r\n        userService.createUser({\r\n            username:            vm.form.username,\r\n            email:               vm.form.email,\r\n            sendEmailInvitation: true\r\n        }).then(function(user) {\r\n            $location.path($filter('url')('user.view', user.username));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunController', ViewProblemSolutionRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.runNumber = $routeParams.run_number;\r\n    };\r\n\r\n    vm.urlFilter = $filter('url');\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemSolutionRunsController', ViewProblemSolutionRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemSolutionRunsController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n\r\n        vm.runs = angular.copy(vm.problem.solutions.reduce(function(prev, solution) {\r\n            return prev.concat(solution.run);\r\n        }, []));\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.solutionRun.view', vm.contest.nickname, vm.problem.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewTestCaseController', ViewTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction ViewTestCaseController($routeParams, testCaseService, routeContest, routeProblem, routeTestCase) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.test_case = routeTestCase;\r\n\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.test_case_id = $routeParams.test_case_id;\r\n    };\r\n\r\n    vm.loadMore = function(inputType) {\r\n        var query = {};\r\n        query['complete_' + inputType] = 'true';\r\n\r\n        vm[inputType + 'Loading'] = true;\r\n        testCaseService.getTestCase(\r\n            vm.contest_nickname,\r\n            vm.problem_nickname,\r\n            vm.test_case_id,\r\n            query\r\n        )\r\n        .then(function(test_case) {\r\n            vm.test_case.current[inputType] = test_case.current[inputType];\r\n            vm[inputType + 'Loaded'] = true;\r\n            vm[inputType + 'Loading'] = false;\r\n        })\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditTestCaseController', EditTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction EditTestCaseController($scope, $location, $filter, routeContest, routeProblem, routeTestCase, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n        vm.testCase = routeTestCase;\r\n\r\n        fillInitialValues();\r\n\r\n        vm.currentUploadingCount = 0;\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            input:  vm.testCase.current.sample_input + (vm.testCase.current.large_input ? '...' : ''),\r\n            output: vm.testCase.current.sample_output + (vm.testCase.current.large_output ? '...' : '')\r\n        };\r\n\r\n        if(vm.testCase.current.input_file_name) {\r\n            vm.form.inputFile = {\r\n                original: true,\r\n                name:     vm.testCase.current.input_file_name\r\n            };\r\n        }\r\n        if(vm.testCase.current.output_file_name) {\r\n            vm.form.outputFile = {\r\n                original: true,\r\n                name:     vm.testCase.current.output_file_name\r\n            };\r\n        }\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        var params = {};\r\n\r\n        if(form.inputFile) {\r\n            if(form.inputSignedUrl) {\r\n                params.input_file_name = form.inputSignedUrl.file_name;\r\n            } else {\r\n                params.input_file_name = form.inputFile.name;\r\n            }\r\n        } else {\r\n            params.input = form.input;\r\n        }\r\n\r\n        if(form.outputFile) {\r\n            if(form.outputSignedUrl) {\r\n                params.output_file_name = form.outputSignedUrl.file_name;\r\n            } else {\r\n                params.output_file_name = form.outputFile.name;\r\n            }\r\n        } else {\r\n            params.output = form.output;\r\n        }\r\n\r\n        testCaseService.editTestCase(vm.contest.nickname, vm.problem.nickname, vm.testCase._id, params)\r\n        .then(function(test_case) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.testCase.view', \r\n                vm.contest.nickname, \r\n                vm.problem.nickname, \r\n                test_case._id\r\n            ));\r\n        });\r\n    };\r\n\r\n\r\n    vm.loadTestCaseFromFile = function(fileType, file) {\r\n        if(!file) {\r\n            return;\r\n        }\r\n\r\n        var fileReader = new FileReader();\r\n        fileReader.onload = function(evt) {\r\n            $scope.$apply(function () {\r\n                if(fileReader.result.length > 500) {\r\n                    vm.form[fileType] = fileReader.result.substr(0, 497) + '...';\r\n                } else {\r\n                    vm.form[fileType] = fileReader.result;\r\n                }\r\n            });\r\n        };\r\n        fileReader.onerror = function(evt) {\r\n        };\r\n        fileReader.readAsText(file);\r\n    };\r\n\r\n    vm.getSignedDownloadCallback = function(fileType) {\r\n        return testCaseService.getDownloadFileSignedUrl(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname, \r\n            vm.form.inputFile.name\r\n        );\r\n    };\r\n\r\n    vm.getSignedUploadCallback = function(fileType, file) {\r\n        return testCaseService.getUploadFileSignedUrl(vm.contest.nickname, vm.problem.nickname, {})\r\n            .then(function(signedUrl) {\r\n                vm.loadTestCaseFromFile(fileType, file);\r\n\r\n                vm.form[fileType + 'File'] = file;\r\n                vm.form[fileType + 'SignedUrl'] = signedUrl;\r\n                vm.currentUploadingCount++;\r\n\r\n                return signedUrl;\r\n            });\r\n    };\r\n\r\n    vm.afterUploadCallback = function(fileType, file) {\r\n        vm.currentUploadingCount--;\r\n\r\n        return Promise.resolve();\r\n    };\r\n\r\n    vm.removeCallback = function(fileType) {\r\n        if(vm.form[fileType + 'File'].original) {\r\n            delete vm.form[fileType + 'File'];\r\n            vm.form[fileType] = '';\r\n\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return testCaseService.deleteFile(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname, \r\n            vm.form[fileType + 'SignedUrl'].file_name\r\n        )\r\n        .then(function(data) {\r\n            delete vm.form[fileType + 'File'];\r\n            delete vm.form[fileType + 'SignedUrl'];\r\n            vm.form[fileType] = '';\r\n\r\n            return data;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateTestCaseController', CreateTestCaseController);\r\n\r\n/** @ngInject */\r\nfunction CreateTestCaseController($scope, $location, $filter, Upload, PromiseProcess, routeContest, routeProblem, testCaseService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n\r\n        vm.form = {\r\n            test_cases: [{\r\n                input:  '',\r\n                output: ''\r\n            }]\r\n        };\r\n\r\n        vm.currentUploadingCount = 0;\r\n    };\r\n\r\n    vm.addTestCase = function() {\r\n        vm.form.test_cases.push({\r\n            input:  '',\r\n            output: ''\r\n        });\r\n    };\r\n\r\n    vm.removeTestCase = function(index) {\r\n        vm.form.test_cases.splice(index, 1);\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        var promiseProcess = PromiseProcess();\r\n\r\n        form.test_cases.forEach(function(test_case) {\r\n            promiseProcess.push(function() {\r\n                var params = {};\r\n\r\n                if(test_case.inputSignedUrl) {\r\n                    params.input_file_name = test_case.inputSignedUrl.file_name;\r\n                } else {\r\n                    params.input = test_case.input;\r\n                }\r\n\r\n                if(test_case.outputSignedUrl) {\r\n                    params.output_file_name = test_case.outputSignedUrl.file_name;\r\n                } else {\r\n                    params.output = test_case.output;\r\n                }\r\n\r\n                return testCaseService.createTestCase(vm.contest.nickname, vm.problem.nickname, params)\r\n                .then(function(test_case) {\r\n                    return test_case._id;\r\n                });\r\n            });\r\n        });\r\n\r\n        promiseProcess.exec([])\r\n        .then(function(test_case_id) {\r\n            $scope.$apply(function() {\r\n                if(form.test_cases.length == 1) {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.testCase.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname, \r\n                        test_case_id\r\n                    ));\r\n                } else {\r\n                    $location.path($filter('url')(\r\n                        'contest.problem.view', \r\n                        vm.contest.nickname, \r\n                        vm.problem.nickname\r\n                    ));\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    vm.loadTestCaseFromFile = function(index, fileType, file) {\r\n        if(!file) {\r\n            return;\r\n        }\r\n\r\n        var fileReader = new FileReader();\r\n        fileReader.onload = function(evt) {\r\n            $scope.$apply(function () {\r\n                if(fileReader.result.length > 500) {\r\n                    vm.form.test_cases[index][fileType] = fileReader.result.substr(0, 497) + '...';\r\n                } else {\r\n                    vm.form.test_cases[index][fileType] = fileReader.result;\r\n                }\r\n            });\r\n        };\r\n        fileReader.onerror = function(evt) {\r\n        };\r\n        fileReader.readAsText(file);\r\n    };\r\n\r\n    vm.getSignedDownloadCallback = function(index, fileType) {\r\n        return testCaseService.getDownloadFileSignedUrl(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname, \r\n            vm.form.test_cases[index][fileType + 'SignedUrl'].file_name\r\n        );\r\n    };\r\n\r\n    vm.getSignedUploadCallback = function(index, fileType, file) {\r\n        return testCaseService.getUploadFileSignedUrl(vm.contest.nickname, vm.problem.nickname, {})\r\n            .then(function(signedUrl) {\r\n                vm.loadTestCaseFromFile(index, fileType, file);\r\n\r\n                vm.form.test_cases[index][fileType + 'File'] = file;\r\n                vm.form.test_cases[index][fileType + 'SignedUrl'] = signedUrl;\r\n                vm.currentUploadingCount++;\r\n\r\n                return signedUrl;\r\n            });\r\n    };\r\n\r\n    vm.afterUploadCallback = function(index, fileType, file) {\r\n        vm.currentUploadingCount--;\r\n\r\n        return Promise.resolve();\r\n    };\r\n\r\n    vm.removeCallback = function(index, fileType) {\r\n        return testCaseService.deleteFile(\r\n            vm.contest.nickname, \r\n            vm.problem.nickname, \r\n            vm.form.test_cases[index][fileType + 'SignedUrl'].file_name\r\n        )\r\n        .then(function(data) {\r\n            delete vm.form.test_cases[index][fileType + 'File'];\r\n            delete vm.form.test_cases[index][fileType + 'SignedUrl'];\r\n            vm.form.test_cases[index][fileType] = '';\r\n\r\n            return data;\r\n        });\r\n    };\r\n\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewSolutionController', ViewSolutionController);\r\n\r\n/** @ngInject */\r\nfunction ViewSolutionController($routeParams, utilService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.solution = routeSolution;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.solution_nickname = $routeParams.solution_nickname;\r\n\r\n        vm.solution.current = vm.solution.v[vm.solution.v.length-1];\r\n        vm.solution.current.language = utilService.getLanguage(vm.solution.current.language);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditSolutionController', EditSolutionController);\r\n\r\n/** @ngInject */\r\nfunction EditSolutionController($location, $filter, languages, solutionService, routeContest, routeProblem, routeSolution) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.solution = routeSolution;\r\n        vm.solution.current = vm.solution.v[ vm.solution.v.length-1 ];\r\n\r\n        vm.languages = languages;\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            source_code: vm.solution.current.source_code,\r\n            language:    vm.solution.current.language\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.editSolution(vm.contest.nickname, vm.problem.nickname, vm.solution.nickname, {\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.solution.view',\r\n                vm.contest.nickname,\r\n                vm.problem.nickname,\r\n                solution.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateSolutionController', CreateSolutionController);\r\n\r\n/** @ngInject */\r\nfunction CreateSolutionController($location, $filter, $routeParams, languages, solutionService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        \r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.languages = languages;\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        solutionService.createSolution(vm.contest_nickname, vm.problem_nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(solution) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.solution.view',\r\n                vm.contest_nickname,\r\n                vm.problem_nickname,\r\n                solution.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemController', ViewProblemController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemController($routeParams, downloadService, routeContest, routeProblem, problemService, solutionService, checkerService, testCaseService, runService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.problem.current = vm.problem.v[vm.problem.v.length-1];\r\n\r\n        getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n        getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n    };\r\n\r\n    vm.deleteSolution = function(solution) {\r\n        return function() {\r\n            solutionService.deleteSolution(vm.contest_nickname, vm.problem_nickname, solution.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteChecker = function(checker) {\r\n        return function() {\r\n            checkerService.deleteChecker(vm.contest_nickname, vm.problem_nickname, checker.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.runSolution = function(solution_index) {\r\n        var validationResult;\r\n        vm.problem.solutions[solution_index].validation = {\r\n            status: 'waiting'\r\n        };\r\n\r\n        runService.runSolutions(vm.contest.nickname, vm.problem.nickname, {\r\n            solutions:  [ vm.problem.solutions[solution_index].nickname ],\r\n            test_cases: vm.problem.test_cases.reduce(function(prev, cur) {\r\n                prev.push(cur._id);\r\n                return prev;\r\n            }, [])\r\n        })\r\n        .then(function(results) {\r\n            validationResult = results;\r\n\r\n            return solutionService.getSolution(\r\n                vm.contest_nickname, \r\n                vm.problem_nickname, \r\n                vm.problem.solutions[solution_index].nickname\r\n            );\r\n        })\r\n        .then(function(solution) {\r\n            vm.problem.solutions[solution_index] = solution;\r\n            getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n\r\n            vm.problem.solutions[solution_index].validation = {\r\n                status: 'done',\r\n                result: validationResult\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.runChecker = function(checker_index) {\r\n        var validationResult;\r\n        vm.problem.checkers[checker_index].validation = {\r\n            status: 'waiting'\r\n        };\r\n\r\n        runService.runCheckers(vm.contest.nickname, vm.problem.nickname, {\r\n            checkers:   [ vm.problem.checkers[checker_index].nickname ],\r\n            test_cases: vm.problem.test_cases.reduce(function(prev, cur) {\r\n                prev.push(cur._id);\r\n                return prev;\r\n            }, [])\r\n        })\r\n        .then(function(results) {\r\n            validationResult = results;\r\n\r\n            return checkerService.getChecker(\r\n                vm.contest_nickname, \r\n                vm.problem_nickname, \r\n                vm.problem.checkers[checker_index].nickname\r\n            );\r\n        })\r\n        .then(function(checker) {\r\n            vm.problem.checkers[checker_index] = checker;\r\n            getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n\r\n            vm.problem.checkers[checker_index].validation = {\r\n                status: 'done',\r\n                result: validationResult\r\n            };\r\n        });\r\n    };\r\n\r\n    vm.deleteTestCase = function(test_case) {\r\n        return function() {\r\n            testCaseService.deleteTestCase(vm.contest_nickname, vm.problem_nickname, test_case._id)\r\n            .then(function(success) {\r\n                return;\r\n                vm.contest = contest;\r\n                vm.problem = vm.contest.problems.filter(function(problem) {\r\n                    return problem.nickname == vm.problem_nickname;\r\n                })[0];\r\n                getValidatedTestCases(vm.problem, vm.problem.solutions);\r\n                getValidatedTestCases(vm.problem, vm.problem.checkers);\r\n            });\r\n        };\r\n    };\r\n\r\n    function getValidatedTestCases(problem, items) {\r\n        items.forEach(function(item) {\r\n            if(item.validatedTestCases !== undefined) {\r\n                return;\r\n            }\r\n\r\n            item.validatedTestCases = runService.getValidatedTestCases(problem, item.run, item.v);\r\n        });\r\n    }\r\n\r\n\r\n    vm.getSignedDownloadUrl = function() {\r\n        return problemService.downloadProblemFile(vm.contest.nickname, vm.problem.nickname);\r\n    };\r\n\r\n    vm.getSignedUploadUrl = function(file) {\r\n        return problemService.getUploadProblemFileSignedUrl(vm.contest.nickname, vm.problem.nickname, {\r\n            name: file.name\r\n        });\r\n    };\r\n\r\n    vm.uploadProblemFile = function(file) {\r\n        return problemService.uploadProblemFile(vm.contest.nickname, vm.problem.nickname, {\r\n            name: file.name\r\n        });\r\n    };\r\n\r\n    vm.removeProblemFile = function() {\r\n        return problemService.deleteProblemFile(vm.contest.nickname, vm.problem.nickname);\r\n    };\r\n\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditProblemController', EditProblemController);\r\n\r\n/** @ngInject */\r\nfunction EditProblemController($location, $filter, problemService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.lastVersion = vm.problem.v[ vm.problem.v.length-1 ];\r\n\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            name:        vm.problem.name,\r\n            description: vm.lastVersion.description,\r\n            time_limit:  vm.lastVersion.time_limit\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.editProblem(vm.contest.nickname, vm.problem.nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.view',\r\n                vm.contest.nickname,\r\n                problem.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateProblemController', CreateProblemController);\r\n\r\n/** @ngInject */\r\nfunction CreateProblemController($location, $filter, $routeParams, problemService, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n\r\n        fillDefaultValues();\r\n    };\r\n\r\n    function fillDefaultValues() {\r\n        vm.form = {};\r\n        vm.form.time_limit = 1;\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        problemService.createProblem(vm.contest_nickname, {\r\n            name:        form.name,\r\n            description: form.description,\r\n            time_limit:  form.time_limit\r\n        }).then(function(problem) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.view',\r\n                vm.contest_nickname,\r\n                problem.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllLogsController', ViewAllLogsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllLogsController(logService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.logsList = [];\r\n\r\n        logService.getLogs()\r\n        .then(function(logs) {\r\n            vm.logsList = logs;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('RegularInvitationController', RegularInvitationController);\r\n\r\n/** @ngInject */\r\nfunction RegularInvitationController($location, $routeParams, $filter, $route, authService, routeUser, userService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.user_id = $routeParams.user_id;\r\n        vm.user = routeUser;\r\n\r\n        fillDefaultValues();\r\n    };\r\n\r\n    function fillDefaultValues() {\r\n        vm.form = {\r\n            email:    routeUser.email,\r\n            username: routeUser.username || '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        userService.editUser(vm.user_id, {\r\n            username: form.username,\r\n            password: form.password\r\n        })\r\n        .then(function(user) {\r\n            return authService.login(form.username, form.password);\r\n        })\r\n        .then(function(data) {\r\n            $route.reload();\r\n            $location.path($filter('url', 'main'));\r\n        })\r\n        .catch(function(err) {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewAllContestsController', ViewAllContestsController);\r\n\r\n/** @ngInject */\r\nfunction ViewAllContestsController(contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n        vm.contestList = [];\r\n\r\n        contestService.getContests(vm.me.permissions && vm.me.permissions.delete_contest)\r\n        .then(function(contests) {\r\n            vm.contestList = contests;\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewContestController', ViewContestController);\r\n\r\n/** @ngInject */\r\nfunction ViewContestController(authService, downloadService, contestService, contributorService, problemService, routeMe, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me      = routeMe;\r\n        vm.contest = routeContest;\r\n\r\n        updateListOfProblems(vm.contest.problems);\r\n        updateLastBocaZip(vm.contest.bocaZip);\r\n    };\r\n\r\n    vm.canI = function(action, obj) {\r\n        switch(action) {\r\n            case 'delete_contributor':\r\n                return vm.contest.author._id == vm.me._id;\r\n            case 'delete_problem':\r\n                return vm.contest.author._id == vm.me._id;\r\n            default:\r\n                return false;\r\n        }\r\n    };\r\n\r\n    vm.deleteContributor = function(contributor) {\r\n        return function() {\r\n            contributorService.deleteContributor(vm.contest.nickname, contributor._id)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteProblem = function(problem) {\r\n        return function() {\r\n            problemService.deleteProblem(vm.contest.nickname, problem.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n                updateListOfProblems(vm.contest.problems);\r\n            });\r\n        };\r\n    };\r\n\r\n    vm.deleteContest = function() {\r\n        return function() {\r\n            contestService.deleteContest(vm.contest.nickname)\r\n            .then(function(contest) {\r\n                vm.contest = contest;\r\n            });\r\n        };\r\n    };\r\n\r\n    function updateLastBocaZip(bocaZipList) {\r\n        if(!Array.isArray(bocaZipList) || !bocaZipList.length) {\r\n            return vm.latestBocaZip = null;\r\n        }\r\n\r\n        vm.latestBocaZip = bocaZipList[ bocaZipList.length-1 ];\r\n        vm.latestBocaZip.downloadUrl = 'http://localhost:3010/api/v1' +\r\n            '/contest/' + vm.contest.nickname + \r\n            '/boca/download' +\r\n            '?VersionId=' + vm.latestBocaZip.VersionId + \r\n            '&token=' + authService.getToken();\r\n\r\n        // last file edition on the contest\r\n\r\n        return vm.latestBocaZip;\r\n    }\r\n\r\n    function updateListOfProblems(problems) {\r\n        return vm.problemsList = problems.filter(function(problem) {\r\n            return !problem.deleted_at || vm.canI('delete_problem');\r\n        });\r\n    }\r\n\r\n    vm.generateZip = function() {\r\n        var problemNicknames = vm.contest.problems.map(function(problem) {\r\n            return problem.nickname;\r\n        });\r\n\r\n        contestService.generateBocaZip(vm.contest.nickname, {\r\n            problems: problemNicknames\r\n        })\r\n            .then(function(bocaZip) {\r\n                vm.contest.bocaZip.push(bocaZip);\r\n                updateLastBocaZip(vm.contest.bocaZip);\r\n            })\r\n            .catch(function(err) {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    vm.downloadZip = function(versionId) {\r\n        contestService.downloadBocaZip(vm.contest.nickname, versionId)\r\n            .then(function(signedUrl) {\r\n                downloadService.download(signedUrl);\r\n            })\r\n            .catch(function(err) {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContestController', CreateContestController);\r\n\r\n/** @ngInject */\r\nfunction CreateContestController($location, $filter, contestService, routeMe) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.me = routeMe;\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contestService.createContest({\r\n            name: vm.form.name\r\n        }).then(function(contest) {\r\n            $location.path($filter('url')(\r\n                'contest.list'\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateContributorController', CreateContributorController);\r\n\r\n/** @ngInject */\r\nfunction CreateContributorController($location, $filter, userService, contributorService, routeContest) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tvm.contest = routeContest;\r\n    \tvm.usersList = [];\r\n\r\n    \tuserService.getUsers()\r\n    \t.then(function(users) {\r\n    \t\tvm.usersList = users.filter(function(user) {\r\n    \t\t\treturn !vm.contest.contributors.some(function(contributor) {\r\n    \t\t\t\treturn contributor.username === user.username;\r\n    \t\t\t});\r\n    \t\t});\r\n    \t});\r\n    };\r\n\r\n    vm.submit = function() {\r\n        contributorService.createContributor(vm.contest.nickname, {\r\n            user_id: vm.form.user._id\r\n        })\r\n        .then(function(contest) {\r\n            $location.path($filter('url')(\r\n                'contest.view',\r\n                vm.contest.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemCheckerRunController', ViewProblemCheckerRunController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemCheckerRunController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest   = routeContest;\r\n        vm.problem   = routeProblem;\r\n        vm.runNumber = $routeParams.run_number;\r\n    };\r\n\r\n    vm.urlFilter = $filter('url');\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewProblemCheckerRunsController', ViewProblemCheckerRunsController);\r\n\r\n/** @ngInject */\r\nfunction ViewProblemCheckerRunsController($routeParams, $filter, utilService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest  = routeContest;\r\n        vm.problem  = routeProblem;\r\n\r\n        vm.runs = angular.copy(vm.problem.checkers.reduce(function(prev, checker) {\r\n            return prev.concat(checker.run);\r\n        }, []));\r\n    };\r\n\r\n    vm.getRunLink = function(run_number) {\r\n        return $filter('url')('contest.problem.checkerRun.view', vm.contest.nickname, vm.problem.nickname, run_number);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('singleAttachment', singleAttachment);\r\n\r\n/** @ngInject */\r\nfunction singleAttachment() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/single-attachment/single-attachment.html',\r\n        scope           : {\r\n            // the file object (must have a name property).\r\n            file: '<',\r\n\r\n            // text to show on 'attach' button.\r\n            customAttachText: '<',\r\n\r\n            // callbacks\r\n            signedDownloadCallback: '&',\r\n            signedUploadCallback:   '&',\r\n            afterUploadCallback:    '&',\r\n            removeCallback:         '&'\r\n        },\r\n        controller      : SingleAttachmentController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function SingleAttachmentController(downloadService, Upload) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.loading = false;\r\n        };\r\n\r\n        vm.downloadFile = function() {\r\n            vm.loading = true;\r\n\r\n            vm.signedDownloadCallback()\r\n                .then(function(signedUrl) {\r\n                    vm.loading = false;\r\n\r\n                    downloadService.download(signedUrl, false, vm.file.name);\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível baixar este arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.removeFile = function() {\r\n            vm.loading = true;\r\n\r\n            vm.removeCallback()\r\n                .then(function(response) {\r\n                    vm.loading = false;\r\n\r\n                    vm.file = undefined;\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível excluir este arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.uploadFile = function(file, errFiles) {\r\n            if(errFiles && errFiles[0]) {\r\n                errFiles = errFiles[0];\r\n\r\n                if(errFiles.$errorMessages && errFiles.$errorMessages.maxSize) {\r\n                    return vm.err = 'O arquivo selecionado ultrapassa o limite de 4MB.';\r\n                }\r\n\r\n                return vm.err = 'Erro desconhecido.';\r\n            }\r\n\r\n            if(!file) {\r\n                return;\r\n            }\r\n            var fileName = file.name;\r\n\r\n            vm.loading = true;\r\n            vm.signedUploadCallback({ file: file })\r\n                .then(function(signedUrl) {\r\n                    return new Promise(function(resolve, reject) {\r\n                        Upload.upload({\r\n                            url:    signedUrl.url,\r\n                            method: 'POST',\r\n                            data:   {\r\n                                key:                signedUrl.key,\r\n                                Policy:             signedUrl.fields.Policy,\r\n                                'X-Amz-Algorithm':  signedUrl.fields['X-Amz-Algorithm'],\r\n                                'X-Amz-Credential': signedUrl.fields['X-Amz-Credential'],\r\n                                'X-Amz-Date':       signedUrl.fields['X-Amz-Date'],\r\n                                'X-Amz-Signature':  signedUrl.fields['X-Amz-Signature'],\r\n                                file:               file\r\n                            },\r\n                            headers: {\r\n                                'x-access-token': undefined\r\n                            }\r\n                        })\r\n                        .then(function finishCallback(response) {\r\n                            return resolve(response.data);\r\n                        }, function errCallback(err) {\r\n                            return reject(err);\r\n                        }, function progressCallback(evt) {\r\n                            file.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n                        });\r\n                    });\r\n                })\r\n                .then(function(result) {\r\n                    return vm.afterUploadCallback({ file: file });\r\n                })\r\n                .then(function(response) {\r\n                    vm.loading = false;\r\n\r\n                    vm.file = {\r\n                        name: fileName\r\n                    };\r\n                })\r\n                .catch(function(err) {\r\n                    vm.loading = false;\r\n\r\n                    vm.err = 'Não foi possível fazer upload deste arquivo.';\r\n                });\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runsList', runsList);\r\n\r\n/** @ngInject */\r\nfunction runsList() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/runs-list/runs-list.html',\r\n        scope           : {\r\n            runs:    '<',\r\n            getLink: '<'\r\n        },\r\n        controller      : RunsListController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunsListController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.solutionRuns = [];\r\n            for(var i=0; i<vm.runs.length; i++) {\r\n                var newSolutionRun = {\r\n                    run_number: vm.runs[i].run_number,\r\n                    runs:       [ vm.runs[i] ],\r\n                    timestamp:  vm.runs[i].timestamp\r\n                };\r\n\r\n                for(var j=vm.runs.length-1; j>i; j--) {\r\n                    if(vm.runs[i].run_number === vm.runs[j].run_number) {\r\n                        newSolutionRun.runs.push(vm.runs[j]);\r\n                        vm.runs.splice(j, 1);\r\n                    }\r\n                }\r\n\r\n                vm.solutionRuns.push(newSolutionRun);\r\n            }\r\n            vm.solutionRuns.sort(function(a, b) {\r\n                return b.run_number - a.run_number;\r\n            });\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('runResultTable', runResultTable);\r\n\r\n/** @ngInject */\r\nfunction runResultTable() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/run-result-table/run-result-table.html',\r\n        scope           : {\r\n            problem:   '<',\r\n            solutions: '<',\r\n            checkers:  '<',\r\n            testCases: '<',\r\n            runNumber: '<',\r\n\r\n            customExpectedOutput: '<'\r\n        },\r\n        controller      : RunResultTableController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function RunResultTableController(utilService) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            // if not defined which solutions should be shown, \r\n            // it will show all the solutions that were run.\r\n            if(typeof vm.solutions === 'boolean' && vm.solutions) {\r\n                vm.items = vm.problem.solutions.filter(function(solution) {\r\n                    return solution.run.some(function(solutionRun) {\r\n                        return solutionRun.run_number == vm.runNumber;\r\n                    });\r\n                });\r\n            } else if(Array.isArray(vm.solutions)) {\r\n                vm.items = vm.solutions;\r\n            }\r\n\r\n            // if not defined which checkers should be shown, \r\n            // it will show all the checkers that were run.\r\n            if(typeof vm.checkers === 'boolean' && vm.checkers) {\r\n                vm.items = vm.problem.checkers.filter(function(solution) {\r\n                    return solution.run.some(function(solutionRun) {\r\n                        return solutionRun.run_number == vm.runNumber;\r\n                    });\r\n                });\r\n            } else if(Array.isArray(vm.checkers)) {\r\n                vm.items = vm.checkers;\r\n            }\r\n\r\n            // all the runs with the run_number.\r\n            vm.runs = vm.items.reduce(function(prev, item) {\r\n                return prev.concat(\r\n                    item.run\r\n                    .filter(function(itemRun) {\r\n                        return itemRun.run_number == vm.runNumber;\r\n                    })\r\n                    .map(function(itemRun) {\r\n                        itemRun.item              = item;\r\n                        itemRun.test_case         = getTestCase(vm.problem, itemRun.test_case_id);\r\n                        itemRun.test_case.current = itemRun.test_case.v[ itemRun.test_case.v.length-1 ];\r\n\r\n                        return itemRun;\r\n                    })\r\n                );\r\n            }, []);\r\n\r\n            // all the test_cases that were tested.\r\n            vm.testCases = vm.runs.reduce(function(prev, solutionRun) {\r\n                if(prev.indexOf(solutionRun.test_case) === -1) {\r\n                    prev.push(solutionRun.test_case);\r\n                }\r\n                return prev;\r\n            }, []);\r\n\r\n            // map with all the item/test_case results.\r\n            vm.testCaseRunMap = {};\r\n        };\r\n\r\n        function getTestCase(problem, test_case_id) {\r\n            return problem.test_cases.filter(function(test_case) {\r\n                return test_case._id == test_case_id;\r\n            })[0];\r\n        }\r\n\r\n        vm.selectRun = function(runs, item_id, test_case_id) {\r\n            vm.selectedRun = vm.getTestCaseRun(runs, item_id, test_case_id);\r\n        };\r\n\r\n        vm.unselectRun = function() {\r\n            vm.selectedRun = null;\r\n        };\r\n\r\n        vm.getTestCaseRun = function(runs, item_id, test_case_id) {\r\n            if(vm.testCaseRunMap[item_id + '-' + test_case_id] === undefined) {\r\n                var testCaseRun = runs.filter(function(run) {\r\n                    return run.item._id  == item_id\r\n                        && run.test_case._id == test_case_id;\r\n                })[0];\r\n\r\n                testCaseRun.verdict = utilService.getVerdict(testCaseRun.verdict);\r\n\r\n                vm.testCaseRunMap[item_id + '-' + test_case_id] = testCaseRun;\r\n            }\r\n\r\n            return vm.testCaseRunMap[item_id + '-' + test_case_id];\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .directive('navbar', navbar);\n\n/** @ngInject */\nfunction navbar() {\n    var directive = {\n        restrict        : 'E',\n        templateUrl     : 'app/components/navbar/navbar.html',\n        scope           : {},\n        controller      : NavbarController,\n        controllerAs    : 'vm',\n        bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController($route, $location, $scope, $filter, authService) {\n        var vm = this;\n\n        vm.init = function() {\n            vm.menuCollapsed = true;\n\n            vm.isLogged = authService.isLogged();\n\n            vm.mainLinks = getMainLinks();\n        };\n\n        function getMainLinks() {\n            var links = [{\n                label:   'Home',\n                urlPath: 'main' \n            }, {\n                label:   'Contests',\n                urlPath: 'contest.list'\n            }, {\n                label:   'Usuários',\n                urlPath: 'user.list'\n            }, {\n                label:   'Histórico',\n                urlPath: 'log'\n            }];\n\n            links.forEach(function(link) {\n                link.active = $location.path() == $filter('url')(link.urlPath);\n            });\n\n            return links;\n        }\n\n        vm.logout = function() {\n            authService.logout();\n            $location.path('/');\n            $route.reload();\n        };\n\n        vm.toggleMobileMenu = function() {\n            vm.menuCollapsed = !vm.menuCollapsed;\n        };\n\n        vm.init();\n        return vm;\n    }\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('genericList', genericList);\r\n\r\n/** @ngInject */\r\nfunction genericList($compile) {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/generic-list/generic-list.html',\r\n        transclude      : true,\r\n        controller      : GenericListController,\r\n        controllerAs    : 'list',\r\n        scope: {\r\n            items:          '<', // list\r\n            noItemsMessage: '<', // string\r\n            headers:        '<', // list\r\n            parent:         '<'  // controller\r\n        },\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function GenericListController() {\r\n        var list = this;\r\n\r\n        list.init = function() {\r\n        };\r\n\r\n        list.init();\r\n        return list;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('breadcrumbs', breadcrumbs);\r\n\r\n/** @ngInject */\r\nfunction breadcrumbs() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/breadcrumbs/breadcrumbs.html',\r\n        scope           : {\r\n            new:      '<', // string of what is being added\r\n            edit:     '<', // true or false\r\n\r\n            users:    '<', // true or false\r\n            user:     '<',\r\n\r\n            contests: '<',\r\n            contest:  '<',\r\n            problem:  '<',\r\n            solution: '<',\r\n            checker:  '<',\r\n            testCase: '<',\r\n\r\n            extra:    '<'  // list of extra labels/urls (for those who don't fit a pattern (yet))\r\n        },\r\n        controller      : BreadcrumbsController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function BreadcrumbsController($filter) {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n            vm.items = [];\r\n\r\n            // contests list\r\n            if(vm.contests) {\r\n                vm.items.push({\r\n                    label: 'Contests',\r\n                    url:   $filter('url')('contest.list')\r\n                });\r\n\r\n                // contest X\r\n                if(vm.contest) {\r\n                    vm.items.push({\r\n                        label: vm.contest.name,\r\n                        url:   $filter('url')('contest.view', vm.contest.nickname)\r\n                    });\r\n\r\n                    // problem Y\r\n                    if(vm.problem) {\r\n                        vm.items.push({\r\n                            label: vm.problem.name,\r\n                            url:   $filter('url')('contest.problem.view', vm.contest.nickname, vm.problem.nickname)\r\n                        });\r\n\r\n                        // solution Z\r\n                        if(vm.solution) {\r\n                            vm.items.push({\r\n                                label: vm.solution.name,\r\n                                url:   $filter('url')('contest.problem.solution.view', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\r\n                            });\r\n                        }\r\n\r\n                        // checker Q\r\n                        if(vm.checker) {\r\n                            vm.items.push({\r\n                                label: vm.checker.name,\r\n                                url:   $filter('url')('contest.problem.checker.view', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname)\r\n                            });\r\n                        }\r\n\r\n                        // testcase W\r\n                        if(vm.testCase) {\r\n                            var order;\r\n                            if(vm.testCase.current) {\r\n                                order = vm.testCase.current.order;\r\n                            } else if(Array.isArray(vm.testCase.v)) {\r\n                                order = vm.testCase.v[ vm.testCase.v.length-1 ].order;\r\n                            } else {\r\n                                order = 1;\r\n                            }\r\n\r\n                            vm.items.push({\r\n                                label: '#' + order + ' caso de teste',\r\n                                url:   $filter('url')('contest.problem.testCase.view', vm.contest.nickname, vm.problem.nickname, vm.testCase._id)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // users list\r\n            if(vm.users) {\r\n                vm.items.push({\r\n                    label: 'Usuários',\r\n                    url:   $filter('url')('user.list')\r\n                });\r\n\r\n                // user X\r\n                if(vm.user) {\r\n                    vm.items.push({\r\n                        label: vm.user.username,\r\n                        url:   $filter('url')('user.view')\r\n                    });\r\n                }\r\n            }\r\n\r\n            // is an editing page?\r\n            if(vm.edit) {\r\n                vm.items.push({\r\n                    label: 'Editar'\r\n                });\r\n            }\r\n\r\n            // is a creating page?\r\n            if(vm.new) {\r\n                vm.items.push({\r\n                    label: 'Nov' + vm.new\r\n                });\r\n            }\r\n\r\n            if(vm.extra && vm.extra.length) {\r\n                vm.extra.forEach(function(extra) {\r\n                    vm.items.push({\r\n                        label: extra.label,\r\n                        url:   extra.url\r\n                    });\r\n                });\r\n            }\r\n\r\n            // the last item is the selected one\r\n            if(vm.items.length) {\r\n                vm.activeItem = vm.items.pop();\r\n            }\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n  .module('front')\r\n  .directive('alertInactive', alertInactive);\r\n\r\n/** @ngInject */\r\nfunction alertInactive() {\r\n    var directive = {\r\n        restrict        : 'E',\r\n        templateUrl     : 'app/components/alert-inactive/alert-inactive.html',\r\n        scope           : {\r\n            msg: '<'\r\n        },\r\n        controller      : AlertInactiveController,\r\n        controllerAs    : 'vm',\r\n        bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function AlertInactiveController() {\r\n        var vm = this;\r\n\r\n        vm.init = function() {\r\n        };\r\n\r\n        vm.init();\r\n        return vm;\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('ViewCheckerController', ViewCheckerController);\r\n\r\n/** @ngInject */\r\nfunction ViewCheckerController($routeParams, utilService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n        vm.checker_nickname = $routeParams.checker_nickname;\r\n\r\n        vm.checker.current = vm.checker.v[vm.checker.v.length-1];\r\n        vm.checker.current.language = utilService.getLanguage(vm.checker.current.language);\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('EditCheckerController', EditCheckerController);\r\n\r\n/** @ngInject */\r\nfunction EditCheckerController($location, $filter, languages, checkerService, routeContest, routeProblem, routeChecker) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        vm.checker = routeChecker;\r\n        vm.checker.current = vm.checker.v[ vm.checker.v.length-1 ];\r\n\r\n        vm.languages = languages;\r\n        fillInitialValues();\r\n    };\r\n\r\n    function fillInitialValues() {\r\n        vm.form = {\r\n            source_code: vm.checker.current.source_code,\r\n            language:    vm.checker.current.language\r\n        };\r\n    }\r\n\r\n    vm.submit = function(form) {\r\n        checkerService.editChecker(vm.contest.nickname, vm.problem.nickname, vm.checker.nickname, {\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(checker) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.checker.view',\r\n                vm.contest.nickname,\r\n                vm.problem.nickname,\r\n                checker.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('CreateCheckerController', CreateCheckerController);\r\n\r\n/** @ngInject */\r\nfunction CreateCheckerController($location, $filter, $routeParams, languages, checkerService, routeContest, routeProblem) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n        vm.contest = routeContest;\r\n        vm.problem = routeProblem;\r\n        \r\n        vm.contest_nickname = $routeParams.contest_nickname;\r\n        vm.problem_nickname = $routeParams.problem_nickname;\r\n\r\n        vm.languages = languages;\r\n    };\r\n\r\n    vm.submit = function(form) {\r\n        checkerService.createChecker(vm.contest_nickname, vm.problem_nickname, {\r\n            name:        form.name,\r\n            source_code: form.source_code,\r\n            language:    form.language\r\n        }).then(function(checker) {\r\n            $location.path($filter('url')(\r\n                'contest.problem.checker.view',\r\n                vm.contest_nickname,\r\n                vm.problem_nickname,\r\n                checker.nickname\r\n            ));\r\n        });\r\n    };\r\n\r\n    vm.init();\r\n    return vm;\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('utilService', utilService);\r\n\r\n/** @ngInject */\r\nfunction utilService(languages, verdicts) {\r\n    var service = this;\r\n\r\n    service.getLanguage = function(languageValue) {\r\n        return languages.filter(function(l) {\r\n            return l.value == languageValue;\r\n        })[0] || languages[0];\r\n    };\r\n\r\n    service.getVerdict = function(verdictValue) {\r\n        return verdicts.filter(function(v) {\r\n            return v.value == verdictValue;\r\n        })[0] || verdicts[0];\r\n    };\r\n\r\n    service.getValueFromObj = function(obj, path) {\r\n    \tvar dotIndex = path.indexOf('.');\r\n    \t\r\n    \tif(dotIndex !== -1) {\r\n    \t\tvar prefix = path.substr(0, dotIndex);\r\n    \t\tvar suffix = path.substr(dotIndex+1);\r\n\r\n    \t\tif(typeof obj[prefix] !== 'object') {\r\n    \t\t\treturn null;\r\n    \t\t}\r\n\r\n    \t\treturn service.getValueFromObj(obj[prefix], suffix);\r\n    \t} else {\r\n    \t\treturn obj[path];\r\n    \t}\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('userService', userService);\r\n\r\n/** @ngInject */\r\nfunction userService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getUsers = function(show_deleted) {\r\n        return $http.get(apiUrl + 'user' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.users;\r\n        });\r\n    };\r\n\r\n    service.getUser = function(username) {\r\n        return $http.get(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.getUserById = function(_id) {\r\n        return $http.get(apiUrl + 'user/' + _id)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.createUser = function(user) {\r\n        return $http.post(apiUrl + 'user', user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.editUser = function(username, user) {\r\n        return $http.put(apiUrl + 'user/' + username, user)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    service.deleteUser = function(username) {\r\n        return $http.delete(apiUrl + 'user/' + username)\r\n        .then(function(result) {\r\n            return result.data.user;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('urlService', urlService);\r\n\r\n/** @ngInject */\r\nfunction urlService(frontUrls, utilService) {\r\n    var service = this;\r\n\r\n    service.getUrl = function(path, args) {\r\n        var url = utilService.getValueFromObj(frontUrls.urls, path);\r\n        if(!url) {\r\n            return null;\r\n        }\r\n\r\n        if(args.length) {\r\n            args.forEach(function(arg) {\r\n                url = url.replace(/:\\w*/, arg);\r\n            });\r\n        }\r\n\r\n        return url;\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('testCaseService', testCaseService);\r\n\r\n/** @ngInject */\r\nfunction testCaseService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getTestCase = function(contest_nickname, problem_nickname, test_case_id, query) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id,\r\n            {\r\n                params: query\r\n            }\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.createTestCase = function(contest_nickname, problem_nickname, test_case) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case', \r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.editTestCase = function(contest_nickname, problem_nickname, test_case_id, test_case) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id,\r\n            test_case\r\n        )\r\n        .then(function(result) {\r\n            return result.data.test_case;\r\n        });\r\n    };\r\n\r\n    service.deleteTestCase = function(contest_nickname, problem_nickname, test_case_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/' + test_case_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.success;\r\n        });\r\n    };\r\n\r\n\r\n    service.getDownloadFileSignedUrl = function(contest_nickname, problem_nickname, file_name) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/file/' + file_name\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.getUploadFileSignedUrl = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/file',\r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.deleteFile = function(contest_nickname, problem_nickname, file_name) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/test_case/file/' + file_name\r\n        )\r\n        .then(function(result) {\r\n            return result.data.success;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('solutionService', solutionService);\r\n\r\n/** @ngInject */\r\nfunction solutionService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.createSolution = function(contest_nickname, problem_nickname, solution) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution', \r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.editSolution = function(contest_nickname, problem_nickname, solution_nickname, solution) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname,\r\n            solution\r\n        )\r\n        .then(function(result) {\r\n            return result.data.solution;\r\n        });\r\n    };\r\n\r\n    service.deleteSolution = function(contest_nickname, problem_nickname, solution_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/solution/' + solution_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('runService', runService);\r\n\r\n/** @ngInject */\r\nfunction runService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.runSolutions = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/run/solutions', \r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.results;\r\n        });\r\n    };\r\n\r\n    service.runCheckers = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/run/checkers', \r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.results;\r\n        });\r\n    };\r\n\r\n    service.getValidatedTestCases = function(problem, runs, versions) {\r\n        var test_cases = angular.copy(problem.test_cases);\r\n        var runs = angular.copy(runs).reverse();\r\n\r\n        runs.forEach(function(run) {\r\n            if(hasCriticalAfter(versions, run.timestamp)) {\r\n                return;\r\n            }\r\n\r\n            for(var i=0; i<test_cases.length; i++) {\r\n                if(test_cases[i]._id == run.test_case_id) {\r\n                    if(!hasCriticalAfter(test_cases[i].v, run.timestamp)\r\n                    && run.verdict == 'Accepted') {\r\n                        test_cases.splice(i, 1);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        return problem.test_cases.length - test_cases.length;\r\n    };\r\n\r\n    function hasCriticalAfter(versions, timestamp) {\r\n        return versions.some(function(version) {\r\n            return version.critical && moment(version.timestamp).isAfter(timestamp);\r\n        });\r\n    }\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('problemService', problemService);\r\n\r\n/** @ngInject */\r\nfunction problemService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.createProblem = function(contest_nickname, problem) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem', \r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.editProblem = function(contest_nickname, problem_nickname, problem) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname,\r\n            problem\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.deleteProblem = function(contest_nickname, problem_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n\r\n    service.downloadProblemFile = function(contest_nickname, problem_nickname, versionId) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file'\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.getUploadProblemFileSignedUrl = function(contest_nickname, problem_nickname, data) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file',\r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    service.uploadProblemFile = function(contest_nickname, problem_nickname, data) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file',\r\n            data\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    service.deleteProblemFile = function(contest_nickname, problem_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/file'\r\n        )\r\n        .then(function(result) {\r\n            return result.data.problem;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('logService', logService);\r\n\r\n/** @ngInject */\r\nfunction logService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getLogs = function() {\r\n        return $http.get(apiUrl + 'log')\r\n        .then(function(result) {\r\n            return result.data.logs;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('downloadService', downloadService);\r\n\r\n/** @ngInject */\r\nfunction downloadService($document) {\r\n    var service = this;\r\n\r\n    service.download = function(url, popupWindow, filename) {\r\n\t\tvar body = $document.find('body').eq(0);\r\n\t\tvar link = angular.element(\r\n\t\t\t'<a ' +\r\n\t\t\t'id=\"temp_link\" ' +\r\n\t\t\t(filename ? 'download=\"' + filename + '\" ' : 'download ') +\r\n\t\t\t'href=\"' + url + '\" ' +\r\n\t\t\t'style=\"display: none;\" ' +\r\n\t\t\t(popupWindow ? 'target=\"_blank\" ' : '') +\r\n\t\t\t'>link</a>'\r\n\t\t);\r\n\t\tbody.append(link);\r\n\t\tlink[0].click();\r\n\t\tlink.remove();\r\n\t};\r\n\r\n    return service;\r\n}\r\n\r\n})();\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contributorService', contributorService);\r\n\r\n/** @ngInject */\r\nfunction contributorService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.createContributor = function(contest_nickname, user) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor',\r\n            user\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContributor = function(contest_nickname, user_id) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/contributor/' + user_id\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('contestService', contestService);\r\n\r\n/** @ngInject */\r\nfunction contestService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getContests = function(show_deleted) {\r\n        return $http.get(apiUrl + 'contest' + (show_deleted ? '?deleted=true' : ''))\r\n        .then(function(result) {\r\n        \treturn result.data.contests;\r\n        });\r\n    };\r\n\r\n    service.getContest = function(nickname) {\r\n        return $http.get(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.createContest = function(contest) {\r\n        return $http.post(apiUrl + 'contest', contest)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.deleteContest = function(nickname) {\r\n        return $http.delete(apiUrl + 'contest/' + nickname)\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    service.generateBocaZip = function(nickname, data) {\r\n        return $http.post(apiUrl + 'contest/' + nickname + '/boca', data)\r\n        .then(function(result) {\r\n            return result.data.bocaZip;\r\n        });\r\n    };\r\n\r\n    service.downloadBocaZip = function(nickname, versionId) {\r\n        return $http.get(apiUrl + 'contest/' + nickname + '/boca/download')\r\n        .then(function(result) {\r\n            return result.data.signedUrl;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('checkerService', checkerService);\r\n\r\n/** @ngInject */\r\nfunction checkerService($http, apiUrl) {\r\n    var service = this;\r\n\r\n    service.getChecker = function(contest_nickname, problem_nickname, checker_nickname) {\r\n        return $http.get(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.createChecker = function(contest_nickname, problem_nickname, checker) {\r\n        return $http.post(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker', \r\n            checker\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.editChecker = function(contest_nickname, problem_nickname, checker_nickname, checker) {\r\n        return $http.put(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname,\r\n            checker\r\n        )\r\n        .then(function(result) {\r\n            return result.data.checker;\r\n        });\r\n    };\r\n\r\n    service.deleteChecker = function(contest_nickname, problem_nickname, checker_nickname) {\r\n        return $http.delete(\r\n            apiUrl + 'contest/' + contest_nickname + '/problem/' + problem_nickname + '/checker/' + checker_nickname\r\n        )\r\n        .then(function(result) {\r\n            return result.data.contest;\r\n        });\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authService', authService);\r\n\r\n/** @ngInject */\r\nfunction authService($q, $http, $window, apiUrl) {\r\n    var service = this;\r\n\r\n    service.login = function(username, password) {\r\n        return $http.post(apiUrl + 'login', {\r\n        \tusername: username,\r\n        \tpassword: password\r\n        })\r\n            .then(function(response) {\r\n                var token = response.data.token;\r\n\r\n                $window.localStorage.setItem('token', token);\r\n                service.setHeaderToken(token);\r\n\r\n                return $q.resolve(response.data);\r\n            });\r\n    };\r\n\r\n    service.logout = function() {\r\n        $window.localStorage.removeItem('token');\r\n        service.unsetHeaderToken();\r\n    };\r\n\r\n    service.setHeaderToken = function(token) {\r\n        $http.defaults.headers.common['x-access-token'] = token;\r\n    };\r\n\r\n    service.unsetHeaderToken = function() {\r\n        delete $http.defaults.headers.common['x-access-token'];\r\n    };\r\n\r\n    service.me = function() {\r\n        return $http.get(apiUrl + 'me')\r\n        .then(function(response) {\r\n            return response.data.me;\r\n        });\r\n    };\r\n\r\n    service.isLogged = function() {\r\n        return !!$window.localStorage.getItem('token');\r\n    };\r\n\r\n    service.getToken = function() {\r\n        return $window.localStorage.getItem('token');\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .controller('MainController', MainController);\n\n/** @ngInject */\nfunction MainController() {\n    var vm = this;\n\n    vm.init = function() {\n    };\n\n    vm.init();\n    return vm;\n}\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .controller('LoginController', LoginController);\r\n\r\n/** @ngInject */\r\nfunction LoginController($route, $filter, $location, authService) {\r\n    var vm = this;\r\n\r\n    vm.init = function() {\r\n    \tif(authService.isLogged()) {\r\n    \t\t$location.path($filter('url', 'main'));\r\n    \t}\r\n\r\n        var queryMessage = $location.search().message;\r\n        if(queryMessage) {\r\n            switch(queryMessage) {\r\n                case 'access_denied':\r\n                    vm.errorMessage = 'Acesso negado.';\r\n                    break;\r\n\r\n                case 'token_expired':\r\n                    vm.errorMessage = 'Acesso expirado. Refaça seu login.';\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    vm.submit = function() {\r\n    \tauthService.login(vm.form.username, vm.form.password)\r\n    \t.then(function(data) {\r\n    \t\t$route.reload();\r\n    \t})\r\n    \t.catch(function(err) {\r\n    \t\tconsole.log(err);\r\n    \t});\r\n    };\r\n\r\n    vm.init();\r\n}\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n    .module('front')\r\n    .service('authInterceptor', authInterceptor);\r\n\r\n/** @ngInject */\r\nfunction authInterceptor($q, $injector) {\r\n    var interceptor = this;\r\n\r\n    interceptor.responseError = function(response) {\r\n        if(response.status == 500 && response.data.error == \"TokenExpiredError: jwt expired\") {\r\n            $injector.get('authService').logout();\r\n            return $q.reject(response);\r\n        } else {\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n\r\n    return interceptor;\r\n}\r\n\r\n})();\r\n\n(function() {\n'use strict';\n\nangular\n\t.module('front')\n\t.run(setToken);\n\n/** @ngInject */\nfunction setToken($http, $window, authService) {\n    var token = $window.localStorage.getItem('token');\n\n    if(token) {\n    \tauthService.setHeaderToken(token);\n    }\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n  .module('front')\n  .config(routeConfig)\n  .controller('AppController', AppController);\n\n/** @ngInject */\nfunction routeConfig(frontUrls, $routeProvider, $locationProvider, $httpProvider) {\n    $httpProvider.interceptors.push('authInterceptor');\n\n\n    $routeProvider\n\n    /* main */\n    .when(frontUrls.urls.main, {\n        templateUrl : 'app/main/main.html',\n        controller  : 'MainController',\n        controllerAs: 'vm'\n    })\n\n\n    /* login */\n    .when(frontUrls.urls.login, {\n        templateUrl : 'app/login/login.html',\n        controller  : 'LoginController',\n        controllerAs: 'vm'\n    })\n\n\n    /* invitations */\n    .when(frontUrls.urls.invitation.regular, {\n        templateUrl : 'app/invitations/regular/regular-invitation.html',\n        controller  : 'RegularInvitationController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeUser: getUserById\n        }\n    })\n\n\n    /* logs */\n    .when(frontUrls.urls.log, {\n        templateUrl : 'app/logs/view-all/view-all-logs.html',\n        controller  : 'ViewAllLogsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* users */\n    .when(frontUrls.urls.user.new, {\n        templateUrl : 'app/users/create/create-user.html',\n        controller  : 'CreateUserController',\n        controllerAs: 'vm'\n    })\n    .when(frontUrls.urls.user.view, {\n        templateUrl : 'app/users/view/view-user.html',\n        controller  : 'ViewUserController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe:   getMe,\n            routeUser: getUser\n        }\n    })\n    .when(frontUrls.urls.user.list, {\n        templateUrl : 'app/users/view-all/view-all-users.html',\n        controller  : 'ViewAllUsersController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contests */\n    .when(frontUrls.urls.contest.new, {\n        templateUrl : 'app/contests/create/create-contest.html',\n        controller  : 'CreateContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n    .when(frontUrls.urls.contest.view, {\n        templateUrl : 'app/contests/view/view-contest.html',\n        controller  : 'ViewContestController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe:      getMe,\n            routeContest: getContest\n        }\n    })\n    .when(frontUrls.urls.contest.list, {\n        templateUrl : 'app/contests/view-all/view-all-contests.html',\n        controller  : 'ViewAllContestsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeMe: getMe\n        }\n    })\n\n\n    /* contributors */\n    .when(frontUrls.urls.contest.contributor.new, {\n        templateUrl : 'app/contributors/create/create-contributor.html',\n        controller  : 'CreateContributorController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest\n        }\n    })\n\n\n    /* problems */\n    .when(frontUrls.urls.contest.problem.new, {\n        templateUrl : 'app/problems/create/create-problem.html',\n        controller  : 'CreateProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest\n        }\n    })\n    .when(frontUrls.urls.contest.problem.view, {\n        templateUrl : 'app/problems/view/view-problem.html',\n        controller  : 'ViewProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.edit, {\n        templateUrl : 'app/problems/edit/edit-problem.html',\n        controller  : 'EditProblemController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    /* solutions */\n    .when(frontUrls.urls.contest.problem.solution.new, {\n        templateUrl : 'app/solutions/create/create-solution.html',\n        controller  : 'CreateSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.view, {\n        templateUrl : 'app/solutions/view/view-solution.html',\n        controller  : 'ViewSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest:  getContest,\n            routeProblem:  getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.edit, {\n        templateUrl : 'app/solutions/edit/edit-solution.html',\n        controller  : 'EditSolutionController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest:  getContest,\n            routeProblem:  getProblem,\n            routeSolution: getSolution\n        }\n    })\n\n\n    /* checkers */\n    .when(frontUrls.urls.contest.problem.checker.new, {\n        templateUrl : 'app/checkers/create/create-checker.html',\n        controller  : 'CreateCheckerController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checker.view, {\n        templateUrl : 'app/checkers/view/view-checker.html',\n        controller  : 'ViewCheckerController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checker.edit, {\n        templateUrl : 'app/checkers/edit/edit-checker.html',\n        controller  : 'EditCheckerController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n\n\n    /* test cases */\n    .when(frontUrls.urls.contest.problem.testCase.new, {\n        templateUrl : 'app/testCases/create/create-testCase.html',\n        controller  : 'CreateTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.view, {\n        templateUrl : 'app/testCases/view/view-testCase.html',\n        controller  : 'ViewTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeTestCase: getTestCase\n        }\n    })\n    .when(frontUrls.urls.contest.problem.testCase.edit, {\n        templateUrl : 'app/testCases/edit/edit-testCase.html',\n        controller  : 'EditTestCaseController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeTestCase: getTestCase\n        }\n    })\n\n\n    /* solution runs */\n    .when(frontUrls.urls.contest.problem.solution.run.list, {\n        templateUrl : 'app/solutions/runs/list/solution-runs.html',\n        controller  : 'ViewSolutionRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solution.run.view, {\n        templateUrl : 'app/solutions/runs/view/solution-run.html',\n        controller  : 'ViewSolutionRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest : getContest,\n            routeProblem : getProblem,\n            routeSolution: getSolution\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.list, {\n        templateUrl : 'app/solutionsRuns/list/solutionRuns-list.html',\n        controller  : 'ViewProblemSolutionRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.solutionRun.view, {\n        templateUrl : 'app/solutionsRuns/view/view-solutionRun.html',\n        controller  : 'ViewProblemSolutionRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    /* checker runs */\n    .when(frontUrls.urls.contest.problem.checker.run.list, {\n        templateUrl : 'app/checkers/runs/list/checker-runs.html',\n        controller  : 'ViewCheckerRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checker.run.view, {\n        templateUrl : 'app/checkers/runs/view/checker-run.html',\n        controller  : 'ViewCheckerRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem,\n            routeChecker: getChecker\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checkerRun.list, {\n        templateUrl : 'app/checkersRuns/list/checkerRuns-list.html',\n        controller  : 'ViewProblemCheckerRunsController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n    .when(frontUrls.urls.contest.problem.checkerRun.view, {\n        templateUrl : 'app/checkersRuns/view/view-checkerRun.html',\n        controller  : 'ViewProblemCheckerRunController',\n        controllerAs: 'vm',\n        resolve     : {\n            routeContest: getContest,\n            routeProblem: getProblem\n        }\n    })\n\n\n    .otherwise({\n        redirectTo: '/'\n    });\n\n\n    $locationProvider.html5Mode(true);\n}\n\n/** @ngInject */\nfunction AppController($rootScope, $location, $filter) {\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n        if(rejection && rejection.data && rejection.data.error) {\n            switch(rejection.data.error) {\n                case 'Access denied':\n                    $location.search('message', 'access_denied');\n                    $location.path($filter('url')('login'));\n                    break;\n                \n                case 'TokenExpiredError: jwt expired':\n                    $location.search('message', 'token_expired');\n                    $location.path($filter('url')('login'));\n                    return;\n\n                default:\n                    $location.path($filter('url')('login'));\n                    return;\n            }\n        }\n\n        $location.path($filter('url')('login'));\n    });\n}\n\nfunction getMe(authService) {\n    return authService.me();\n}\n\nfunction getUser($route, frontUrls, userService) {\n    return userService.getUser(\n        $route.current.params[frontUrls.paramKeys.user]\n    );\n}\n\nfunction getUserById($route, frontUrls, userService) {\n    return userService.getUserById(\n        $route.current.params[frontUrls.paramKeys.user_id]\n    );\n}\n\nfunction getContest($route, frontUrls, contestService) {\n    return contestService.getContest(\n        $route.current.params[frontUrls.paramKeys.contest]\n    );\n}\n\nfunction getProblem($route, frontUrls, problemService) {\n    return problemService.getProblem(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem]\n    );\n}\n\nfunction getSolution($route, frontUrls, solutionService) {\n    return solutionService.getSolution(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.solution]\n    );\n}\n\nfunction getChecker($route, frontUrls, checkerService) {\n    return checkerService.getChecker(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.checker]\n    );\n}\n\nfunction getTestCase($route, frontUrls, testCaseService) {\n    return testCaseService.getTestCase(\n        $route.current.params[frontUrls.paramKeys.contest],\n        $route.current.params[frontUrls.paramKeys.problem],\n        $route.current.params[frontUrls.paramKeys.testCase]\n    );\n}\n\n})();\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.directive('ngTransclude', customNgTransclude);\r\n\r\n/** @ngInject */\r\nfunction customNgTransclude() {\r\n    return {\r\n        restrict: 'EAC',\r\n        link: function($scope, $element, $attrs, controller, $transclude) {\r\n            if(!$transclude) {\r\n                throw minErr('ngTransclude')(\r\n\t\t\t\t\t'orphan',\r\n\t\t\t\t\t'Illegal use of ngTransclude directive in the template! ' +\r\n\t\t\t\t\t'No parent directive that requires a transclusion found. ' +\r\n\t\t\t\t\t'Element: {0}',\r\n\t\t\t\t\tstartingTag($element)\r\n\t\t\t\t);\r\n            }\r\n\r\n            var iScopeType = $attrs['ngTransclude'] || 'sibling';\r\n\r\n            switch(iScopeType) {\r\n                case 'sibling':\r\n                    $transclude(function(clone) {\r\n                        $element.append(clone);\r\n                    });\r\n                    break;\r\n\r\n                case 'parent':\r\n                    $transclude($scope, function(clone) {\r\n                        if(clone.length) {\r\n                            $element.append(clone);\r\n                        }\r\n                    });\r\n                    break;\r\n\r\n                case 'child':\r\n                    var iChildScope = $scope.$new();\r\n                    $transclude(iChildScope, function(clone) {\r\n                        $element.append(clone);\r\n                        $element.on('$destroy', function() {\r\n                            iChildScope.$destroy();\r\n                        });\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n\n(function() {\r\n'use strict';\r\n\r\nangular\r\n\t.module('front')\r\n\t.filter('url', url)\r\n\t.filter('myDate', myDate);\r\n\r\n/** @ngInject */\r\nfunction url(urlService) {\r\n\treturn function(input) {\r\n\t\tvar args = [];\r\n\t\tfor(var i=1; i<arguments.length; i++) {\r\n\t\t\targs.push(arguments[i]);\r\n\t\t}\r\n\r\n\t\treturn urlService.getUrl(input, args);\r\n\t};\r\n}\r\n\r\n/** @ngInject */\r\nfunction myDate() {\r\n\treturn function(input) {\r\n\t\tvar currentDate = moment(),\r\n\t\t\tinputDate   = moment(input);\r\n\r\n\t\tif(inputDate.isBefore(currentDate)) {\r\n\t\t\tvar diffInMinutes = currentDate.diff(inputDate, 'minutes', true),\r\n\t\t\t\tdiffInHours   = currentDate.diff(inputDate, 'hours', true),\r\n\t\t\t\tdiffInDays    = currentDate.diff(inputDate, 'days', true),\r\n\t\t\t\tdiffInMonths  = currentDate.diff(inputDate, 'months', true);\r\n\r\n\t\t\tif(diffInMinutes <= 1) {\r\n\t\t\t\treturn 'agora';\r\n\t\t\t} else if(diffInHours < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMinutes) + ' minuto' + (diffInMinutes >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInDays < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInHours) + ' hora' + (diffInHours >= 2 ? 's' : '');\r\n\t\t\t} else if(diffInMonths < 1) {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInDays) + ' dia' + (diffInDays >= 2 ? 's' : '');\r\n\t\t\t} else {\r\n\t\t\t\treturn 'à ' + Math.floor(diffInMonths) + ' mes' + (diffInMonths >= 2 ? 's' : '');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t}\r\n\t}\r\n}\r\n\r\n})();\r\n\n/* global moment:false */\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .constant('moment', moment)\n    .constant('PromiseProcess', promiseProcess)\n    // .constant('apiUrl', 'http://localhost:3010/api/v1/')\n    .constant('apiUrl', 'http://contestbuilder.ddns.net/api/v1/')\n    .constant('languages', languages())\n    .constant('verdicts', verdicts())\n    .constant('frontUrls', frontUrls());\n\n// list of languages\nfunction languages() {\n\treturn [{\n\t\tlabel: 'Outra',\n\t\tvalue: 'other'\n\t}, {\n\t\tlabel: 'C++',\n\t\tvalue: 'cpp'\n\t}, {\n\t\tlabel: 'C',\n\t\tvalue: 'c'\n\t}];\n}\n\n// list of verdicts\nfunction verdicts() {\n\treturn [{\n\t\tlabel: 'Other',\n\t\tshort: 'Other',\n\t\tvalue: 'Other'\n\t}, {\n\t\tlabel: 'Accepted',\n\t\tshort: 'AC',\n\t\tvalue: 'Accepted'\n\t}, {\n\t\tlabel: 'Presentation error',\n\t\tshort: 'PE',\n\t\tvalue: 'Presentation error'\n\t}, {\n\t\tlabel: 'Wrong answer',\n\t\tshort: 'WA',\n\t\tvalue: 'Wrong answer'\n\t}, {\n\t\tlabel: 'Time limit exceeded',\n\t\tshort: 'TLE',\n\t\tvalue: 'Time limit exceeded'\n\t}, {\n\t\tlabel: 'Compilation error',\n\t\tshort: 'CE',\n\t\tvalue: 'Compilation error'\n\t}];\n}\n\n// list of urls\nfunction frontUrls() {\n\tvar paramKeys = {\n\t\tuser:        'user_nickname',\n\t\tcontest:     'contest_nickname',\n\t\tproblem:     'problem_nickname',\n\t\tsolution:    'solution_nickname',\n\t\tchecker:     'checker_nickname',\n\t\ttestCase:    'test_case_id',\n\t\tsolutionRun: 'run_number',\n\t\tuser_id:     'user_id'\n\t};\n\n\tvar urls = {\n\t\tmain:  '/',\n\t\tlogin: '/login',\n\t\tlog:   '/logs',\n\t\tuser:  {\n\t\t\tnew:  '/users/new',\n\t\t\tview: '/users/:user_nickname',\n\t\t\tlist: '/users'\n\t\t},\n\t\tinvitation: {\n\t\t\tregular: '/invitation/:user_id'\n\t\t},\n\t\tcontest: {\n\t\t\tnew:  '/contests/new',\n\t\t\tview: '/contests/:contest_nickname',\n\t\t\tlist: '/contests',\n\n\t\t\tcontributor: {\n\t\t\t\tnew: '/contests/:contest_nickname/contributors/new'\n\t\t\t},\n\n\t\t\tproblem: {\n\t\t\t\tnew:  '/contests/:contest_nickname/problems/new',\n\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname',\n\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/edit',\n\n\t\t\t\tsolution: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/solutions/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/edit',\n\n\t\t\t\t\trun: {\n\t\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs',\n\t\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solutions/:solution_nickname/runs/:run_number'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tchecker: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/checkers/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/edit',\n\n\t\t\t\t\trun: {\n\t\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/runs',\n\t\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checkers/:checker_nickname/runs/:run_number'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\ttestCase: {\n\t\t\t\t\tnew:  '/contests/:contest_nickname/problems/:problem_nickname/test_cases/new',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id',\n\t\t\t\t\tedit: '/contests/:contest_nickname/problems/:problem_nickname/test_cases/:test_case_id/edit'\n\t\t\t\t},\n\n\t\t\t\tsolutionRun: {\n\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/solution_runs/:run_number'\n\t\t\t\t},\n\n\t\t\t\tcheckerRun: {\n\t\t\t\t\tlist: '/contests/:contest_nickname/problems/:problem_nickname/checker_runs',\n\t\t\t\t\tview: '/contests/:contest_nickname/problems/:problem_nickname/checker_runs/:run_number'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\tparamKeys: paramKeys,\n\t\turls:      urls\n\t};\n}\n\n})();\n\n(function() {\n'use strict';\n\nangular\n    .module('front')\n    .config(removeNgTransclude);\n\n/** @ngInject */\nfunction removeNgTransclude($provide) {\n    $provide.decorator('ngTranscludeDirective', ['$delegate', function ($delegate) {\n        $delegate.shift();\n        return $delegate;\n    }]);\n}\n\n})();\n\nangular.module(\"front\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/login/login.html\",\"<navbar></navbar><alert-inactive ng-if=vm.errorMessage msg=vm.errorMessage></alert-inactive><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Login</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=loginForm ng-submit=vm.submit();><div class=form-group><input type=text name=username ng-model=vm.form.username class=form-control id=login-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><input type=password name=password ng-model=vm.form.password class=form-control id=login-password placeholder=Senha ng-required=true></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=loginForm.$invalid>Login</button></form></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<navbar></navbar><div class=jumbotron><div class=container><h1 class=display-3>Olá!</h1><p>This is a template for a simple marketing or informational website. It includes a large callout called a jumbotron and three supporting pieces of content. Use it as a starting point to create something more unique.</p><p><a class=\\\"btn btn-primary btn-lg\\\" href=/login role=button>Faça login &raquo;</a></p></div></div><div class=container><div class=row><div class=col-12><p>Testing</p></div></div></div>\");\n$templateCache.put(\"app/checkers/create/create-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'o checker\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo checker</h1></div></div><div class=row><div class=col-12><form novalidate name=checkerForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest_nickname : vm.problem_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=checkerForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/checkers/edit/edit-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar checker</h1></div></div><div class=row><div class=col-12><form novalidate name=checkerForm ng-submit=vm.submit(vm.form);><p>{{ vm.checker.name }}</p><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=checker-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=checker-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.checker.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.checker.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=checkerForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/checkers/view/view-checker.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker></breadcrumbs><div id=view-checker><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Linguagem: {{ vm.checker.current.language.label }}</p></div></div><div class=row><div class=col-12><p>Código fonte:</p><pre>{{ vm.checker.current.source_code }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.checker.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.checker.nickname }}\\\">Editar checker</a></div></div></div></div>\");\n$templateCache.put(\"app/contests/create/create-contest.html\",\"<navbar></navbar><breadcrumbs contests=true new=\\\"\\'o contest\\'\\\"></breadcrumbs><div id=create-contest class=container><div class=row><div class=col-12><h1 class=page-title>Criar contest</h1></div></div><div class=row><div class=\\\"col-sm-12 col-lg-6\\\"><form novalidate name=contestForm ng-submit=vm.submit();><div class=form-group><label for=contest-name>Nome</label><input type=text name=name ng-model=vm.form.name class=form-control id=contest-name placeholder=\\\"Super Contest 2017\\\" ng-required=true></div><div class=form-group><label class=form-label-static for=contest-name>Autor</label><p>{{ vm.me.username }}</p></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"{{ \\'contest.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=contestForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/contests/view/view-contest.html\",\"<navbar></navbar><alert-inactive ng-if=vm.contest.deleted_at msg=\\\"\\'Este contest está inativo.\\'\\\"></alert-inactive><breadcrumbs contests=true contest=vm.contest></breadcrumbs><div id=view-contest><div class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.contest.name }}</h1></div></div><!-- info --><div class=row><div class=col-12><p>Autor: <a ng-href=\\\"{{ \\'user.view\\' | url : vm.contest.author.username }}\\\">{{ vm.contest.author.username }}</a></p></div></div><div class=row><div class=col-12><p>Criado em: <span>{{ vm.contest.created_at | date:\\'dd/MM/yyyy\\' }}</span></p></div></div></div><!-- contributors list --><div class=\\\"container contributors-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Contribuidores:</h4><a ng-if=!vm.contest.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.contributor.new\\' | url : vm.contest.nickname }}\\\">Adicionar contribuidor</a></div></div><generic-list items=vm.contest.contributors no-items-message=\\\"\\'Nenhum contribuidor cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }}</a></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_contributor\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteContributor(item) modal-confirm-title=\\\"\\'Remover contribuidor\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este contribuidor?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- problems list --><div class=\\\"container problems-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Problemas:</h4><a ng-if=!vm.contest.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.new\\' | url : vm.contest.nickname }}\\\">Adicionar problema</a></div></div><generic-list items=vm.problemsList no-items-message=\\\"\\'Nenhum problema cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',  class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.view\\' | url : list.parent.contest.nickname : item.nickname }}\\\">{{ item.name }}</a> <span ng-if=item.deleted_at>(Removido em {{ item.deleted_at | date:\\'dd/MM/yyyy\\' }})</span></div><div class=col-4 ng-if=\\\"list.parent.canI(\\'delete_problem\\')\\\"><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteProblem(item) modal-confirm-title=\\\"\\'Remover problema\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este problema?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- boca zip list --><div class=\\\"container boca-list\\\"><div class=row><div class=col-12><h4>Exportar arquivos:</h4></div></div><div class=row ng-if=!vm.latestBocaZip><div class=col-12><p>Contest ainda não foi exportado.</p></div></div><div class=row ng-if=vm.latestBocaZip><div class=col-12><p>Data da última exportação: {{ vm.latestBocaZip.timestamp | date : \\'dd/MM/yyyy HH:mm\\' }}</p></div></div><div class=row><div class=col-12><button type=button class=\\\"btn btn-primary\\\" ng-click=vm.generateZip();><i class=\\\"fa fa-file-archive-o\\\" aria-hidden=true></i> Exportar</button> <button ng-if=vm.latestBocaZip type=button class=\\\"btn btn-primary\\\" ng-click=vm.downloadZip(vm.latestBocaZip.versionId);><i class=\\\"fa fa-download\\\" aria-hidden=true></i> Download</button></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row ng-if=\\\"!vm.contest.deleted_at && vm.me.permissions && vm.me.permissions.delete_contest\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteContest(problem) modal-confirm-title=\\\"\\'Desativer contest\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este contest?\\'\\\">Desativar contest</button></div></div></div></div>\");\n$templateCache.put(\"app/contests/view-all/view-all-contests.html\",\"<navbar></navbar><breadcrumbs contests=true></breadcrumbs><div id=view-all-contests><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de contests</h1></div></div></div><div class=\\\"container contest-list\\\"><generic-list items=vm.contestList no-items-message=\\\"\\'Nenhum contest cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',      class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',     class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Criado em\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.view\\' | url : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-4><p>{{ item.created_at | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.new\\' | url }}\\\">Criar contest</a></div></div></div></div>\");\n$templateCache.put(\"app/components/alert-inactive/alert-inactive.html\",\"<div id=alert-inactive class=\\\"alert alert-danger\\\" role=alert><strong>{{ vm.msg }}</strong></div>\");\n$templateCache.put(\"app/components/breadcrumbs/breadcrumbs.html\",\"<div class=container><div class=row><div class=col-12><nav class=breadcrumb><a ng-repeat=\\\"item in vm.items\\\" class=breadcrumb-item ng-href=\\\"{{ item.url }}\\\">{{ item.label }}</a> <span class=\\\"breadcrumb-item active\\\">{{ vm.activeItem.label }}</span></nav></div></div></div>\");\n$templateCache.put(\"app/components/generic-list/generic-list.html\",\"<div class=generic-list><div ng-if=list.items.length class=\\\"row header-row\\\"><div ng-repeat=\\\"header in list.headers\\\" class=header-col ng-class=header.class>{{ header.label }}</div></div><div ng-repeat=\\\"item in list.items\\\" ng-transclude=parent class=item></div><div ng-if=!list.items.length class=row><div class=col-12><p>{{ list.noItemsMessage }}</p></div></div></div>\");\n$templateCache.put(\"app/components/runs-list/runs-list.html\",\"<div class=runs-list><div class=row ng-repeat=\\\"run in vm.solutionRuns\\\"><div class=col-12><p><a ng-href=\\\"{{ vm.getLink(run.run_number) }}\\\">Execução {{ run.run_number }}</a> - {{ run.timestamp | myDate }}</p></div></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-toggleable-md navbar-inverse bg-inverse\\\"><button class=\\\"navbar-toggler navbar-toggler-right\\\" type=button data-toggle=collapse data-target=#navbarsExampleDefault aria-controls=navbarsExampleDefault aria-expanded=false aria-label=\\\"Toggle navigation\\\" ng-click=vm.toggleMobileMenu()><span class=navbar-toggler-icon></span></button> <a class=navbar-brand href=/ >Contest Builder</a><div class=\\\"collapse navbar-collapse\\\" id=navbarsExampleDefault ng-class=\\\"{ \\'show\\': !vm.menuCollapsed }\\\"><ul class=\\\"navbar-nav mr-auto\\\"><li ng-repeat=\\\"link in vm.mainLinks\\\" class=nav-item ng-class=\\\"{ \\'active\\': link.active }\\\"><a class=nav-link ng-href=\\\"{{ link.urlPath | url }}\\\">{{ link.label }}</a></li></ul><div class=\\\"my-2 my-md-0\\\"><a ng-if=!vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" role=button ng-href=\\\"{{ \\'login\\' | url }}\\\">Login</a> <button ng-if=vm.isLogged class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=button ng-click=vm.logout();>Logout</button></div></div></nav>\");\n$templateCache.put(\"app/components/run-result-table/run-result-table.html\",\"<div class=row><div class=col-12><table class=\\\"table table-sm\\\"><thead><tr><th></th><th ng-repeat=\\\"test_case in vm.testCases\\\">#{{ test_case.current.order }}</th></tr></thead><tbody><tr ng-repeat=\\\"item in vm.items\\\"><td>{{ item.name }}</td><td ng-repeat=\\\"test_case in vm.testCases\\\"><span ng-if=\\\"vm.getTestCaseRun(vm.runs, item._id, test_case._id)\\\" ng-click=\\\"vm.selectRun(vm.runs, item._id, test_case._id)\\\">{{ vm.getTestCaseRun(vm.runs, item._id, test_case._id).verdict.short }}</span></td></tr></tbody></table></div></div><div class=row ng-if=vm.selectedRun><div class=col-12><p><span><strong>{{ vm.selectedRun.item.name }} / #{{ vm.selectedRun.test_case.current.order }}</strong> </span><span style=\\\"float: right\\\"><i class=\\\"fa fa-times\\\" aria-hidden=true ng-click=vm.unselectRun()></i></span></p><p><strong>Veredito:</strong> {{ vm.selectedRun.verdict.label }}</p></div><div class=col-6><p><strong>Saída esperada:</strong></p><pre>{{ vm.customExpectedOutput ? vm.customExpectedOutput : vm.selectedRun.test_case.current.output }}</pre></div><div class=col-6><p><strong>Saída:</strong></p><pre>{{ vm.selectedRun.output }}</pre></div></div><div class=row ng-if=!vm.selectedRun><div class=col-12><p>Selecione um item da tabela para ver mais detalhes.</p></div></div>\");\n$templateCache.put(\"app/components/single-attachment/single-attachment.html\",\"<button ng-if=!vm.file type=button ngf-select=\\\"vm.uploadFile($file, $invalidFiles)\\\" accept=\\\"\\'*\\'\\\" ngf-max-size=4MB class=\\\"btn btn-link\\\">{{ vm.customAttachText ? vm.customAttachText : \\'Adicionar arquivo\\' }}</button> <button ng-if=vm.file type=button class=\\\"btn btn-link\\\" ng-click=vm.downloadFile();>{{ vm.file.name }}</button> <span ng-if=vm.file ng-click=vm.removeFile();>x</span> <img ng-if=vm.loading src=assets/images/loading.gif><p ng-if=vm.err>{{ vm.err }}</p>\");\n$templateCache.put(\"app/checkersRuns/list/checkerRuns-list.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/checkersRuns/view/view-checkerRun.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.checkerRun.list\\', vm.contest.nickname, vm.problem.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=view-checkerRun><div class=container><div class=row><div class=col-12><h2 class=page-title>Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem checkers=true test-cases=vm.problem.test_cases run-number=vm.runNumber custom-expected-output=\\\"\\'ok\\\\n\\'\\\"></run-result-table></div></div>\");\n$templateCache.put(\"app/contributors/create/create-contributor.html\",\"<navbar></navbar><div class=container><div class=row><div class=col-12><h1 class=page-title>Adicionar novo contribuidor</h1></div></div><div class=row><div class=col-12 ng-if=vm.loading><p>Carregando.</p></div><div class=col-12 ng-if=\\\"!vm.loading && !vm.usersList.length\\\"><p>Não há mais quem adicionar.</p></div><div class=\\\"col-12 col-lg-6\\\" ng-if=\\\"!vm.loading && !!vm.usersList.length\\\"><form novalidate name=userForm ng-submit=vm.submit();><div class=form-group><select name=user ng-model=vm.form.user ng-options=\\\"user as user.username for user in vm.usersList\\\" class=form-control id=contributor-user placeholder=\\\"Nome de usuário\\\" ng-required=true></select></div><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/invitations/regular/regular-invitation.html\",\"<navbar></navbar><div class=container><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><h1 class=page-title>Faça seu cadastro</h1></div></div><div class=row><div class=\\\"col-12 offset-md-3 col-md-6\\\"><form novalidate name=invitationForm ng-submit=vm.submit(vm.form);><div class=form-group><label class=form-label-static for=contest-name>E-mail</label><p>{{ vm.form.email }}</p></div><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=username ng-model=vm.form.username class=form-control id=user-username placeholder=\\\"Nome de usuário\\\" ng-required=true></div><div class=form-group><label for=user-password>Senha</label><input type=password name=password ng-model=vm.form.password class=form-control id=user-password placeholder=Senha ng-required=true></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'main\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=invitationForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/logs/view-all/view-all-logs.html\",\"<navbar></navbar><div id=view-all-logs><div class=container><div class=row><div class=col-12><h1 class=page-title>Histórico</h1></div></div></div><div class=\\\"container log-list\\\"><generic-list items=vm.logsList no-items-message=\\\"\\'Nenhum log registrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Contest\\',  class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Autor\\',    class: \\'col-2\\' },\\r\\n\t\t\t\t{ label: \\'Mensagem\\', class: \\'col-6\\' },\\r\\n\t\t\t\t{ label: \\'Data\\',     class: \\'col-2\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-2><a ng-href=\\\"{{ \\'contest.view\\' | url : item.contest.nickname }}\\\">{{ item.contest.name }}</a></div><div class=col-2><a ng-href=\\\"{{ \\'user.view\\' | url : item.author.username }}\\\">{{ item.author.username }}</a></div><div class=col-6><p>{{ item.message }}</p></div><div class=col-2><p>{{ item.date | date:\\'dd/MM/yyyy\\' }}</p></div></div></generic-list></div></div>\");\n$templateCache.put(\"app/problems/create/create-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest new=\\\"\\'o problema\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.view\\' | url : vm.contest_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=problemForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/problems/view/view-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem></breadcrumbs><div id=view-problem><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Descrição curta: {{ vm.problem.current.description }}</p></div><div class=col-12><p>Descrição completa:<single-attachment file=vm.problem.file signed-download-callback=vm.getSignedDownloadUrl() signed-upload-callback=vm.getSignedUploadUrl(file) after-upload-callback=vm.uploadProblemFile(file) remove-callback=vm.removeProblemFile()></single-attachment></p></div><div class=col-12><p>Tempo limite: {{ vm.problem.current.time_limit }}</p></div></div></div><!-- solutions list --><div class=\\\"container solutions-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Soluções:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar solução</a></div></div><generic-list items=vm.problem.solutions no-items-message=\\\"\\'Nenhuma solução cadastrada.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',            class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Casos validados\\', class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\',           class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><span ng-if=!item.validatedTestCases>{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }} </span><a ng-if=item.validatedTestCases ng-href=\\\"{{ \\'contest.problem.solution.run.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname : item.run[ item.run.length-1 ].run_number }}\\\">{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}</a></div><div class=col-4><!-- remover --> <button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteSolution(item) modal-confirm-title=\\\"\\'Remover solução\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover esta solução?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button><!-- validar --> <button class=\\\"btn btn-primary\\\" ng-class=\\\"{ \\'loading-button\\': item.validation && item.validation.status == \\'waiting\\' }\\\" type=button ng-click=list.parent.runSolution($index) ng-disabled=\\\"\\r\\n\t\t\t\t\t\t\titem.validatedTestCases == list.parent.problem.test_cases.length\\r\\n\t\t\t\t\t\t\t|| (item.validation && item.validation.status == \\'waiting\\')\\r\\n\t\t\t\t\t\t\\\"><img ng-if=\\\"item.validation && item.validation.status == \\'waiting\\'\\\" src=assets/images/ripple.svg> <i ng-if=\\\"!item.validation || item.validation.status != \\'waiting\\'\\\" class=\\\"fa fa-check\\\" aria-hidden=true></i></button></div></div><div class=row ng-if=item.validation><div class=col-12><p ng-if=\\\"item.validation.status === \\'waiting\\'\\\">Carregando</p><p ng-if=\\\"item.validation.status === \\'done\\'\\\">{{ item.validation.result.results | json }}</p></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-12><a ng-href=\\\"{{ \\'contest.problem.solutionRun.list\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Ver todas as execuções</a></div></div></div><!-- test cases list --><div class=\\\"container test-cases-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Casos de teste:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar caso de teste</a></div></div><generic-list items=vm.problem.test_cases no-items-message=\\\"\\'Nenhum caso de teste cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'#\\',     class: \\'col-8\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\', class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-8><a ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item._id }}\\\">#{{ $index+1 }}</a></div><div class=col-4><button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteTestCase(item) modal-confirm-title=\\\"\\'Remover caso de teste\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este caso de teste?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button></div></div></generic-list></div><!-- checkers list --><div class=\\\"container checkers-list\\\"><div class=row><div class=\\\"col-12 list-header\\\"><h4>Checkers:</h4><a ng-if=!vm.problem.deleted_at class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.checker.new\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Adicionar checker</a></div></div><generic-list items=vm.problem.checkers no-items-message=\\\"\\'Nenhum checker cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\',            class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Casos validados\\', class: \\'col-4\\' },\\r\\n\t\t\t\t{ label: \\'Ações\\',           class: \\'col-4\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-4><a ng-href=\\\"{{ \\'contest.problem.checker.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname }}\\\">{{ item.name }}</a></div><div class=col-4><span ng-if=!item.validatedTestCases>{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }} </span><a ng-if=item.validatedTestCases ng-href=\\\"{{ \\'contest.problem.checker.run.view\\' | url : list.parent.contest.nickname : list.parent.problem.nickname : item.nickname : item.run[ item.run.length-1 ].run_number }}\\\">{{ item.validatedTestCases }}/{{ list.parent.problem.test_cases.length }}</a></div><div class=col-4><!-- remover --> <button class=\\\"btn btn-danger\\\" type=button modal-confirm=list.parent.deleteChecker(item) modal-confirm-title=\\\"\\'Remover checker\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja remover este checker?\\'\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=true></i></button><!-- validar --> <button class=\\\"btn btn-primary\\\" ng-class=\\\"{ \\'loading-button\\': item.validation && item.validation.status == \\'waiting\\' }\\\" type=button ng-click=list.parent.runChecker($index) ng-disabled=\\\"\\r\\n\t\t\t\t\t\t\titem.validatedTestCases == list.parent.problem.test_cases.length\\r\\n\t\t\t\t\t\t\t|| (item.validation && item.validation.status == \\'waiting\\')\\r\\n\t\t\t\t\t\t\\\"><img ng-if=\\\"item.validation && item.validation.status == \\'waiting\\'\\\" src=assets/images/ripple.svg> <i ng-if=\\\"!item.validation || item.validation.status != \\'waiting\\'\\\" class=\\\"fa fa-check\\\" aria-hidden=true></i></button></div></div><div class=row ng-if=item.validation><div class=col-12><p ng-if=\\\"item.validation.status === \\'waiting\\'\\\">Carregando</p><p ng-if=\\\"item.validation.status === \\'done\\'\\\">{{ item.validation.result.results | json }}</p></div></div></generic-list><div class=row ng-if=!vm.problem.deleted_at><div class=col-12><a ng-href=\\\"{{ \\'contest.problem.checkerRun.list\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Ver todas as execuções</a></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.edit\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Editar problema</a></div></div></div></div>\");\n$templateCache.put(\"app/problems/edit/edit-problem.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar problema</h1></div></div><div class=row><div class=col-12><form novalidate name=problemForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=problem-name placeholder=Nome ng-required=true></div><div class=form-group><textarea type=text name=description ng-model=vm.form.description class=form-control id=problem-description placeholder=Descrição ng-required=true></textarea></div><div class=form-group><input type=number name=time_limit ng-model=vm.form.time_limit class=form-control id=problem-time_limit placeholder=1 ng-required=false></div><a role=button class=\\\"btn btn-secondary\\\" href=\\\"/contests/{{ vm.contest.nickname }}/problems/{{ vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=problemForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/edit/edit-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><p>{{ vm.solution.name }}</p><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.solution.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/create/create-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'a solução\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar nova solução</h1></div></div><div class=row><div class=col-12><form novalidate name=solutionForm ng-submit=vm.submit(vm.form);><div class=form-group><input type=text name=name ng-model=vm.form.name class=form-control id=solution-name placeholder=Nome ng-required=true></div><div class=form-group><textarea name=source_code ng-model=vm.form.source_code class=form-control id=solution-source_code placeholder=\\\"Código fonte\\\" ng-required=true rows=10></textarea></div><div class=form-group><select name=language ng-model=vm.form.language class=custom-select id=solution-language ng-options=\\\"l.value as l.label for l in vm.languages\\\" ng-required=true></select></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest_nickname : vm.problem_nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=solutionForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/solutions/view/view-solution.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution></breadcrumbs><div id=view-solution><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }}</h2></div></div><!-- info --><div class=row><div class=col-12><p>Linguagem: {{ vm.solution.current.language.label }}</p></div></div><div class=row><div class=col-12><p>Código fonte:</p><pre>{{ vm.solution.current.source_code }}</pre></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.solution.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.solution.nickname }}\\\">Editar solução</a></div></div></div></div>\");\n$templateCache.put(\"app/solutionsRuns/list/solutionRuns-list.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.problem.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutionsRuns/view/view-solutionRun.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solutionRun.list\\', vm.contest.nickname, vm.problem.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=view-solutionRun><div class=container><div class=row><div class=col-12><h2 class=page-title>Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=true test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");\n$templateCache.put(\"app/testCases/create/create-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem new=\\\"\\'o caso de teste\\'\\\"></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><!-- for every test case --><div class=row ng-repeat=\\\"testCaseNumber in vm.form.test_cases\\\"><div class=col-12><p>#{{ vm.problem.test_cases.length + 1 + $index }} caso de teste <i class=\\\"fa fa-trash-o\\\" aria-hidden=true uib-tooltip=\\\"Remover caso de teste\\\" ng-if=\\\"vm.form.test_cases.length > 1\\\" ng-click=vm.removeTestCase($index)></i></p></div><!-- input --><div class=col-6><div class=form-group><textarea type=text name=input ng-model=testCaseNumber.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-disabled=\\\"testCaseNumber[\\'inputFile\\']\\\" ng-trim=false rows=6 maxlength=500></textarea><single-attachment file=\\\"testCaseNumber[\\'inputFile\\']\\\" custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" signed-download-callback=\\\"vm.getSignedDownloadCallback($index, \\'input\\')\\\" signed-upload-callback=\\\"vm.getSignedUploadCallback($index, \\'input\\', file)\\\" after-upload-callback=\\\"vm.afterUploadCallback($index, \\'input\\', file)\\\" remove-callback=\\\"vm.removeCallback($index, \\'input\\')\\\"></single-attachment></div></div><!-- output --><div class=col-6><div class=form-group><textarea type=text name=output ng-model=testCaseNumber.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-disabled=\\\"testCaseNumber[\\'outputFile\\']\\\" ng-trim=false rows=6 maxlength=500></textarea><single-attachment file=\\\"testCaseNumber[\\'outputFile\\']\\\" custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" signed-download-callback=\\\"vm.getSignedDownloadCallback($index, \\'output\\')\\\" signed-upload-callback=\\\"vm.getSignedUploadCallback($index, \\'output\\', file)\\\" after-upload-callback=\\\"vm.afterUploadCallback($index, \\'output\\', file)\\\" remove-callback=\\\"vm.removeCallback($index, \\'output\\')\\\"></single-attachment></div></div></div><div class=row style=\\\"margin-bottom: 16px\\\"><div class=col-12><button type=button class=\\\"btn btn-secondary\\\" ng-click=vm.addTestCase()>+</button></div></div><div class=row ng-if=vm.currentUploadingCount><div class=col-12><p>Aguardando upload de {{ vm.currentUploadingCount }} arquivo(s).</p></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.view\\' | url : vm.contest.nickname : vm.problem.nickname }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=\\\"testCaseForm.$invalid || vm.currentUploadingCount\\\">Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/testCases/edit/edit-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem test-case=vm.testCase edit=true></breadcrumbs><div class=container><div class=row><div class=col-12><h1 class=page-title>Editar caso de teste</h1></div></div><form novalidate name=testCaseForm ng-submit=vm.submit(vm.form);><div class=row><div class=col-6><div class=form-group><textarea type=text name=input ng-model=vm.form.input class=form-control id=test-case-input placeholder=Entrada ng-required=true ng-disabled=vm.form.inputFile ng-trim=false rows=6 maxlength=500></textarea><single-attachment file=vm.form.inputFile custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" signed-download-callback=\\\"vm.getSignedDownloadCallback(\\'input\\')\\\" signed-upload-callback=\\\"vm.getSignedUploadCallback(\\'input\\', file)\\\" after-upload-callback=\\\"vm.afterUploadCallback(\\'input\\', file)\\\" remove-callback=\\\"vm.removeCallback(\\'input\\')\\\"></single-attachment></div></div><div class=col-6><div class=form-group><textarea type=text name=output ng-model=vm.form.output class=form-control id=test-case-output placeholder=Saída ng-required=true ng-disabled=vm.form.outputFile ng-trim=false rows=6 maxlength=500></textarea><single-attachment file=vm.form.outputFile custom-attach-text=\\\"\\'Carregar de arquivo\\'\\\" signed-download-callback=\\\"vm.getSignedDownloadCallback(\\'output\\')\\\" signed-upload-callback=\\\"vm.getSignedUploadCallback(\\'output\\', file)\\\" after-upload-callback=\\\"vm.afterUploadCallback(\\'output\\', file)\\\" remove-callback=\\\"vm.removeCallback(\\'output\\')\\\"></single-attachment></div></div></div><div class=row ng-if=vm.currentUploadingCount><div class=col-12><p>Aguardando upload de {{ vm.currentUploadingCount }} arquivo(s).</p></div></div><div class=row><div class=col-12><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'contest.problem.testCase.view\\' | url : vm.contest.nickname : vm.problem.nickname : vm.testCase._id }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=\\\"testCaseForm.$invalid || vm.currentUploadingCount\\\">Salvar</button></div></div></form></div>\");\n$templateCache.put(\"app/testCases/view/view-testCase.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem test-case=vm.test_case></breadcrumbs><div id=view-test-case><div class=container><div class=row><div class=col-12><h2 class=page-title>#{{ vm.test_case.current.order }} caso de teste</h2></div></div><!-- info --><div class=row><div class=col-6><p>Entrada:</p><pre>{{\\r\\n\t\t\t\t\tvm.inputLoaded ? \\r\\n\t\t\t\t\tvm.test_case.current.input : \\r\\n\t\t\t\t\t(vm.test_case.current.sample_input + (vm.test_case.current.large_input ? \\'...\\' : \\'\\'))\\r\\n\t\t\t\t}}</pre><button ng-if=\\\"vm.test_case.current.large_input && !vm.inputLoaded\\\" type=button class=\\\"btn btn-link\\\" ng-click=\\\"vm.loadMore(\\'input\\');\\\" ng-disabled=vm.inputLoading>Carregar entrada completa</button></div><div class=col-6><p>Saída:</p><pre>{{\\r\\n\t\t\t\t\tvm.outputLoaded ? \\r\\n\t\t\t\t\tvm.test_case.current.output : \\r\\n\t\t\t\t\t(vm.test_case.current.sample_output + (vm.test_case.current.large_output ? \\'...\\' : \\'\\'))\\r\\n\t\t\t\t}}</pre><button ng-if=\\\"vm.test_case.current.large_output && !vm.outputLoaded\\\" type=button class=\\\"btn btn-link\\\" ng-click=\\\"vm.loadMore(\\'output\\');\\\" ng-disabled=vm.outputLoading>Carregar saída completa</button></div></div></div><!-- actions --><div class=\\\"container action-list\\\"><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'contest.problem.testCase.edit\\' | url : vm.contest.nickname : vm.problem.nickname : vm.test_case._id }}\\\">Editar caso de teste</a></div></div></div></div>\");\n$templateCache.put(\"app/users/create/create-user.html\",\"<navbar></navbar><breadcrumbs users=true new=\\\"\\'o usuário\\'\\\"></breadcrumbs><div id=create-user class=container><div class=row><div class=col-12><h1 class=page-title>Cadastrar novo usuário</h1></div></div><div class=row><div class=col-12><form novalidate name=userForm2 ng-submit=vm.submit(); autocomplete=off><div class=form-group><label for=user-username>Nome de usuário</label><input type=text name=new-user-username ng-model=vm.form.username class=form-control id=user-username placeholder=programming_rocks_18 ng-required=true></div><div class=form-group><label for=user-email>E-mail</label><input type=email name=new-user-email ng-model=vm.form.email class=form-control id=user-email placeholder=cool_address@gmail.com ng-required=true autocomplete=off></div><a role=button class=\\\"btn btn-secondary\\\" ng-href=\\\"{{ \\'user.list\\' | url }}\\\">Cancelar</a> <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=userForm.$invalid>Salvar</button></form></div></div></div>\");\n$templateCache.put(\"app/users/view-all/view-all-users.html\",\"<navbar></navbar><breadcrumbs users=true></breadcrumbs><div id=view-all-users class=container><div class=container><div class=row><div class=col-12><h1 class=page-title>Lista de usuários</h1></div></div></div><div class=\\\"container user-list\\\"><generic-list items=vm.usersList no-items-message=\\\"\\'Nenhum usuário cadastrado.\\'\\\" headers=\\\"[\\r\\n\t\t\t\t{ label: \\'Nome\\', class: \\'col-12\\' }\\r\\n\t\t\t]\\\" parent=vm><div class=row><div class=col-12><a ng-href=\\\"{{ \\'user.view\\' | url : item.username }}\\\">{{ item.username }} </a><span ng-if=item.deleted_at>(Desativado em {{ item.deleted_at | date:\\'dd/MM/yyyy\\' }})</span></div></div></generic-list><div class=row><div class=col-12><a class=\\\"btn btn-primary float-right\\\" role=button ng-href=\\\"{{ \\'user.new\\' | url }}\\\">Criar usuário</a></div></div></div></div>\");\n$templateCache.put(\"app/users/view/view-user.html\",\"<navbar></navbar><breadcrumbs users=true user=vm.user></breadcrumbs><alert-inactive ng-if=vm.user.deleted_at msg=\\\"\\'Esta conta de usuário está inativa.\\'\\\"></alert-inactive><div id=view-user class=container><div class=row><div class=col-12><h1 class=page-title>{{ vm.user.username }}</h1></div></div><div class=row ng-if=\\\"!vm.user.deleted_at && vm.me.permissions && vm.me.permissions.delete_user\\\"><div class=col-12><button class=\\\"btn btn-danger float-right\\\" type=button modal-confirm=vm.deleteUser() modal-confirm-title=\\\"\\'Desativar usuário\\'\\\" modal-confirm-body=\\\"\\'Tem certeza que deseja desativar este usuário?\\'\\\">Desativar usuário</button></div></div></div>\");\n$templateCache.put(\"app/checkers/runs/list/checker-runs.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/checkers/runs/view/checker-run.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem checker=vm.checker extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.checker.run.list\\', vm.contest.nickname, vm.problem.nickname, vm.checker.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=checker-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.checker.name }} - Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=vm.checkersToShow test-cases=vm.problem.test_cases run-number=vm.runNumber custom-expected-output=\\\"\\'ok\\\\n\\'\\\"></run-result-table></div></div>\");\n$templateCache.put(\"app/components/modal/modal-confirm/modal-confirm.html\",\"<div class=modal-header><h3 class=modal-title id=modal-title>{{ $ctrl.title }}</h3></div><div class=modal-body id=modal-body><p>{{ $ctrl.body }}</p></div><div class=modal-footer><button class=\\\"btn btn-danger\\\" type=button ng-click=$ctrl.cancel()>Cancelar</button> <button class=\\\"btn btn-primary\\\" type=button ng-click=$ctrl.ok()>Confirmar</button></div>\");\n$templateCache.put(\"app/solutions/runs/list/solution-runs.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\'\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execuções</h2></div></div><runs-list runs=vm.runs get-link=vm.getRunLink></runs-list></div></div>\");\n$templateCache.put(\"app/solutions/runs/view/solution-run.html\",\"<navbar></navbar><breadcrumbs contests=true contest=vm.contest problem=vm.problem solution=vm.solution extra=\\\"[{\\r\\n\t\tlabel: \\'Execuções\\',\\r\\n\t\turl:   vm.urlFilter(\\'contest.problem.solution.run.list\\', vm.contest.nickname, vm.problem.nickname, vm.solution.nickname)\\r\\n\t}, {\\r\\n\t\tlabel: \\'Execução \\' + vm.runNumber\\r\\n\t}]\\\"></breadcrumbs><div id=solution-runs><div class=container><div class=row><div class=col-12><h2 class=page-title>{{ vm.solution.name }} - Execução {{ vm.runNumber }}</h2></div></div><run-result-table problem=vm.problem solutions=vm.solutionsToShow test-cases=vm.problem.test_cases run-number=vm.runNumber></run-result-table></div></div>\");}]);"],"sourceRoot":"/source/"}